diff --git a/README.md b/README.md
index 9ca3bb3..5001a69 100644
--- a/README.md
+++ b/README.md
@@ -0,0 +1,4 @@
+Deprecated
+==========================
+This widget is now *deprecated* and it won't be updated anymore. Use [RecyclerView][5] instead
+
@@ -79,0 +84,2 @@ http://www.apache.org/licenses/LICENSE-2.0
+
+[5]: https://developer.android.com/reference/android/support/v7/widget/RecyclerView.html
diff --git a/README.md b/README.md
index 67eaff8..9ca3bb3 100644
--- a/README.md
+++ b/README.md
@@ -12 +12 @@ Add this line to your dependency group:
-	compile 'it.sephiroth.android.library.horizontallistview:library:+'
+	compile 'it.sephiroth.android.library.horizontallistview:hlistview:1.2.2'
@@ -79 +79 @@ http://www.apache.org/licenses/LICENSE-2.0
-[4]: http://developer.android.com/reference/android/widget/ExpandableListView.html
\ No newline at end of file
+[4]: http://developer.android.com/reference/android/widget/ExpandableListView.html
diff --git a/README.md b/README.md
index dae1a6e..67eaff8 100644
--- a/README.md
+++ b/README.md
@@ -4,0 +5,2 @@ Horizontal ListView for Android. Based on the official [ListView][3] google code
+The library includes also an ExpandableHListView, also based on the official [ExpandableListView][4]. <br />
+See the demo project for sample implementations
@@ -55 +57,5 @@ This is the styleable used for the HListView class:
-### API Requirements
+## ChangeLog
+
+* 1.2.0 Added the **ExpandableHListView**
+
+## API Requirements
@@ -71 +77,3 @@ http://www.apache.org/licenses/LICENSE-2.0
-[3]: http://developer.android.com/reference/android/widget/ListView.html
\ No newline at end of file
+[3]: http://developer.android.com/reference/android/widget/ListView.html
+
+[4]: http://developer.android.com/reference/android/widget/ExpandableListView.html
\ No newline at end of file
diff --git a/README.md b/README.md
index ae10622..dae1a6e 100644
--- a/README.md
+++ b/README.md
@@ -14 +14 @@ It supports almost all the features of the ListView widget.
-There are minor differences in the attributes supported like "dividerWidth" instead of the default "dividerHeight".
+There are minor differences in the attributes supported like "hlv_dividerWidth" instead of the default "dividerHeight".
@@ -21,5 +21,5 @@ This is the styleable used for the HListView class:
-        &lt;attr name="dividerWidth" format="dimension" />
-        &lt;attr name="headerDividersEnabled" format="boolean" />
-        &lt;attr name="footerDividersEnabled" format="boolean" />
-        &lt;attr name="overScrollHeader" format="reference|color" />
-        &lt;attr name="overScrollFooter" format="reference|color" />
+        &lt;attr name="hlv_dividerWidth" format="dimension" />
+        &lt;attr name="hlv_headerDividersEnabled" format="boolean" />
+        &lt;attr name="hlv_footerDividersEnabled" format="boolean" />
+        &lt;attr name="hlv_overScrollHeader" format="reference|color" />
+        &lt;attr name="hlv_overScrollFooter" format="reference|color" />
@@ -32 +32 @@ This is the styleable used for the HListView class:
-        &lt;attr name="measureWithChild" format="integer" />        
+        &lt;attr name="hlv_measureWithChild" format="integer" />
@@ -33,0 +34,19 @@ This is the styleable used for the HListView class:
+    
+
+    &lt;declare-styleable name="AbsHListView">
+        &lt;attr name="android:listSelector" />
+        &lt;attr name="android:smoothScrollbar" />
+        &lt;attr name="android:drawSelectorOnTop" />
+        &lt;attr name="android:cacheColorHint" />
+        &lt;attr name="android:scrollingCache" />
+        &lt;attr name="android:choiceMode" />
+        
+        &lt;attr name="hlv_stackFromRight" format="boolean" />
+        &lt;attr name="hlv_transcriptMode">
+            &lt;enum name="disabled" value="0"/>
+            &lt;enum name="normal" value="1" />
+            &lt;enum name="alwaysScroll" value="2" />
+        &lt;/attr>
+        
+    &lt;/declare-styleable>  
+
diff --git a/README.md b/README.md
index 864772d..ae10622 100644
--- a/README.md
+++ b/README.md
@@ -5,0 +6,6 @@ Horizontal ListView for Android. Based on the official [ListView][3] google code
+## Usage (gradle)
+Add this line to your dependency group:
+
+
+	compile 'it.sephiroth.android.library.horizontallistview:library:+'
+
@@ -31,4 +37 @@ This is the styleable used for the HListView class:
-The minimum supported Android version is android 2.3
-
-### Example
-See the Demo [MainActivity][1] for a working sample.
+The minimum supported Android version is android 2.3 (API Level 9)
@@ -46 +48,0 @@ http://www.apache.org/licenses/LICENSE-2.0
-[1]: https://github.com/sephiroth74/HorizontalVariableListView/blob/master/Demo/src/it/sephiroth/android/sample/horizontalvariablelistviewdemo/MainActivity.java        "MainActivity"
diff --git a/README.md b/README.md
index fa8289e..864772d 100644
--- a/README.md
+++ b/README.md
@@ -37,2 +37,2 @@ See the Demo [MainActivity][1] for a working sample.
-This software is distributed under the MIT License:
-http://opensource.org/licenses/MIT
+This software is distributed under Apache License 2.0:
+http://www.apache.org/licenses/LICENSE-2.0
diff --git a/README.md b/README.md
index f2b196b..fa8289e 100644
--- a/README.md
+++ b/README.md
@@ -4,2 +4 @@ Horizontal Variable ListView
-## Description
- This is an horizontal ListView for Android which allows different items widths <del>and heights</del>.
+Horizontal ListView for Android. Based on the official [ListView][3] google code.
@@ -8,47 +7,27 @@ Horizontal Variable ListView
-* It extends the AdapterView in order to give the full support to adapters.
-* Use the included `BaseAdapterExtended` to modify the list adapter more efficiently.
-* <del>Customizable left and right edges</del>. Now using the `EdgeEffectCompat`, so the effect will be available only on supported devices.
-
-		list.setOverScrollMode( HorizontalVariableListView.OVER_SCROLL_ALWAYS );
-		
-	
-* It supports multiple items type. Just override the `getViewTypeCount()` in your adapter. Each item (by type) can have a different width.
-* It uses a recycler in order to reuse recycled items instead of creating new ones every time.
-* It supports for single/multiple selection using the `setSelectionMode` method.
-
-## Selection
-
-You can control if a single item can be clicked and how it will handle the selected status inside the list.
-
-First, assign the `setOnItemClickedListener` in this way:
-    		
-    mList.setOnItemClickedListener( new OnItemClickedListener() {
-
-		@Override
-		public boolean onItemClick( AdapterView<?> parent, View view, int position, long id ) {
-			Log.i( LOG_TAG, "onItemClick: " + position );
-			return true;
-		}
-	});
-	
-In this way every time an item has clicked, this method will be triggered. If this method will return `true` then the selection process will continue inside the HorizontalVariableListView, otherwise the event is stopped and.
-
-If the previous method returned a `true` you will receive a `onItemSelected` or a `onNothingSelected` of the `onItemSelectedListener`. Example:
-
-	mList.setOnItemSelectedListener( new OnItemSelectedListener() {
-
-		@Override
-		public void onItemSelected( AdapterView<?> parent, View view, int position, long id ) {
-				// if you allow multiple selection, then you can
-				// query the total selected items:
-				int[] positions = mList.getSelectedPositions().length );
-			}
-
-			@Override
-			public void onNothingSelected( android.widget.AdapterView<?> parent ) {
-				// nothing is selected
-			};
-	});
-
-
-## Example
+It supports almost all the features of the ListView widget.
+There are minor differences in the attributes supported like "dividerWidth" instead of the default "dividerHeight".
+
+This is the styleable used for the HListView class:
+<pre>
+    &lt;declare-styleable name="HListView">
+        &lt;attr name="android:entries" />
+        &lt;attr name="android:divider" />
+        &lt;attr name="dividerWidth" format="dimension" />
+        &lt;attr name="headerDividersEnabled" format="boolean" />
+        &lt;attr name="footerDividersEnabled" format="boolean" />
+        &lt;attr name="overScrollHeader" format="reference|color" />
+        &lt;attr name="overScrollFooter" format="reference|color" />
+        
+        &lt;!-- 
+        When "wrap_content" is used as value of the layout_height property.
+        Pass the position, inside the adapter, of the view being used to measure the view
+        or '-1' to use the default behavior ( default is -1 )
+        -->
+        &lt;attr name="measureWithChild" format="integer" />        
+    &lt;/declare-styleable>
+</pre>
+
+### API Requirements
+The minimum supported Android version is android 2.3
+
+### Example
@@ -69,0 +49,2 @@ http://opensource.org/licenses/MIT
+
+[3]: http://developer.android.com/reference/android/widget/ListView.html
\ No newline at end of file
diff --git a/README.md b/README.md
index ecd214d..f2b196b 100644
--- a/README.md
+++ b/README.md
@@ -5 +5 @@ Horizontal Variable ListView
- Horizontal list view for Android which allows variable items widths and heights.
+ This is an horizontal ListView for Android which allows different items widths <del>and heights</del>.
@@ -9 +9,2 @@ Horizontal Variable ListView
-* Customizable left and right edges. A left and right edge glow effect will be shown when the list reaches one of the edges. It can be enabled by setting the overscroll mode to OVER_SCROLL_ALWAYS:
+* Use the included `BaseAdapterExtended` to modify the list adapter more efficiently.
+* <del>Customizable left and right edges</del>. Now using the `EdgeEffectCompat`, so the effect will be available only on supported devices.
@@ -14 +15 @@ Horizontal Variable ListView
-* It supports multiple items type. Just override the ```getViewTypeCount()``` in your adapter. Each item (by type) can have a different width.
+* It supports multiple items type. Just override the `getViewTypeCount()` in your adapter. Each item (by type) can have a different width.
@@ -16 +16,0 @@ Horizontal Variable ListView
-
diff --git a/README.md b/README.md
index bf03405..ecd214d 100644
--- a/README.md
+++ b/README.md
@@ -5 +5 @@ Horizontal Variable ListView
- Horizontal list view for Android which allows variable items widths.
+ Horizontal list view for Android which allows variable items widths and heights.
@@ -11 +11 @@ Horizontal Variable ListView
-		list.setOverScrollMode( View.OVER_SCROLL_ALWAYS );
+		list.setOverScrollMode( HorizontalVariableListView.OVER_SCROLL_ALWAYS );
@@ -16,0 +17,37 @@ Horizontal Variable ListView
+* It supports for single/multiple selection using the `setSelectionMode` method.
+
+## Selection
+
+You can control if a single item can be clicked and how it will handle the selected status inside the list.
+
+First, assign the `setOnItemClickedListener` in this way:
+    		
+    mList.setOnItemClickedListener( new OnItemClickedListener() {
+
+		@Override
+		public boolean onItemClick( AdapterView<?> parent, View view, int position, long id ) {
+			Log.i( LOG_TAG, "onItemClick: " + position );
+			return true;
+		}
+	});
+	
+In this way every time an item has clicked, this method will be triggered. If this method will return `true` then the selection process will continue inside the HorizontalVariableListView, otherwise the event is stopped and.
+
+If the previous method returned a `true` you will receive a `onItemSelected` or a `onNothingSelected` of the `onItemSelectedListener`. Example:
+
+	mList.setOnItemSelectedListener( new OnItemSelectedListener() {
+
+		@Override
+		public void onItemSelected( AdapterView<?> parent, View view, int position, long id ) {
+				// if you allow multiple selection, then you can
+				// query the total selected items:
+				int[] positions = mList.getSelectedPositions().length );
+			}
+
+			@Override
+			public void onNothingSelected( android.widget.AdapterView<?> parent ) {
+				// nothing is selected
+			};
+	});
+
+
diff --git a/README.md b/README.md
index b822149..bf03405 100644
--- a/README.md
+++ b/README.md
@@ -32 +32 @@ http://opensource.org/licenses/MIT
-[2]: http://www.sephiroth.it	"sephiroth.it"
+[2]: http://www.sephiroth.it
diff --git a/README.md b/README.md
index e8d713a..b822149 100644
--- a/README.md
+++ b/README.md
@@ -1 +1 @@
-HorizontalVariableListView
+Horizontal Variable ListView
@@ -4 +4,29 @@ HorizontalVariableListView
-Horizontal list view for Android which allows variable items widths
\ No newline at end of file
+## Description
+ Horizontal list view for Android which allows variable items widths.
+
+## Features
+* It extends the AdapterView in order to give the full support to adapters.
+* Customizable left and right edges. A left and right edge glow effect will be shown when the list reaches one of the edges. It can be enabled by setting the overscroll mode to OVER_SCROLL_ALWAYS:
+
+		list.setOverScrollMode( View.OVER_SCROLL_ALWAYS );
+		
+	
+* It supports multiple items type. Just override the ```getViewTypeCount()``` in your adapter. Each item (by type) can have a different width.
+* It uses a recycler in order to reuse recycled items instead of creating new ones every time.
+
+## Example
+See the Demo [MainActivity][1] for a working sample.
+
+## License
+This software is distributed under the MIT License:
+http://opensource.org/licenses/MIT
+
+---
+
+> Author
+> [Alessandro Crugnola][2]
+
+
+[1]: https://github.com/sephiroth74/HorizontalVariableListView/blob/master/Demo/src/it/sephiroth/android/sample/horizontalvariablelistviewdemo/MainActivity.java        "MainActivity"
+
+[2]: http://www.sephiroth.it	"sephiroth.it"
