diff --git a/README.md b/README.md
index 3a994e5..a01876c 100644
--- a/README.md
+++ b/README.md
@@ -7 +7 @@ Runs a sequence of gulp tasks in the specified order.  This function is designed
-> ### Please Note
+> ### Is your company hiring Node developers?
@@ -9,7 +9,5 @@ Runs a sequence of gulp tasks in the specified order.  This function is designed
-> This is intended to be a temporary solution until the release of [gulp 4.0](https://github.com/gulpjs/gulp/tree/4.0) which has support for defining task dependencies in [series](https://github.com/gulpjs/gulp/blob/4.0/docs/API.md#gulpseriestasks) or in [parallel](https://github.com/gulpjs/gulp/blob/4.0/docs/API.md#gulpparalleltasks).
-> 
-> Be aware that this solution is a hack, and may stop working with a future update to gulp.
-
-Each argument to `run-sequence` is run in order.  This works by listening to the `task_stop` and `task_err` events, and keeping track of which tasks have been completed.  You can still run some of the tasks in parallel, by providing an array of task names for one or more of the arguments.
-
-If the final argument is a function, it will be used as a callback after all the functions are either finished or an error has occurred.
+> If you are hiring developers, you can support this project and future open source work by checking out our company, [Qualified.io](https://www.qualified.io/?utm_source=run-sequence).
+>
+> Qualified is a service for online skills-assessment that can help you easily vet developers across a wide range of real-world programming skills.
+>
+> Please help support this project, and [sign up for a free trial](https://www.qualified.io/?utm_source=run-sequence).
@@ -17 +14,0 @@ If the final argument is a function, it will be used as a callback after all the
-## Possible Breaking Change in version 1.0.0
@@ -19 +15,0 @@ If the final argument is a function, it will be used as a callback after all the
-In version 1.0 I've added a check that prevents the same task from showing up within any sequence.  This is to help reduce typo errors, as well as prevent the [silent exit bug when the same task occurred twice in a parallel sequence](https://github.com/OverZealous/run-sequence/issues/13).  The sequence will now fail immediately during the validation stage.
@@ -21 +17 @@ In version 1.0 I've added a check that prevents the same task from showing up wi
-If this breaking change affects you, you'll need to take one of several actions:
+Each argument to `run-sequence` is run in order.  This works by listening to the `task_stop` and `task_err` events, and keeping track of which tasks have been completed.  You can still run some of the tasks in parallel, by providing an array of task names for one or more of the arguments.
@@ -23,4 +19 @@ If this breaking change affects you, you'll need to take one of several actions:
-1. Remove duplicate tasks if they are a mistake.
-2. Filter unneeded duplicate tasks before passing them to `run-sequence`.
-3. Rewrite your tasks or wrap your tasks within functions that can be called multiple times if for some reason you rely on this functionality.
-4. Continue using `run-sequence` version 0.3.7 if it was working for you.
+If the final argument is a function, it will be used as a callback after all the functions are either finished or an error has occurred.
@@ -28 +21,5 @@ If this breaking change affects you, you'll need to take one of several actions:
-[I welcome feedback](https://github.com/OverZealous/run-sequence/issues) if this change is a problem for your setup!
+> **Please Note**
+>
+> This was intended to be a temporary solution until the release of gulp 4.0 which should have support for defining task dependencies similarly.
+> 
+> Given that Gulp 4 appears to never be fully released, take that for what you will. Be aware that this solution is a hack, and may stop working with a future update to gulp.
@@ -101,0 +99,21 @@ var gulp = require('gulp'), // might be a different instance than the toplevel o
+## Options
+
+There are a few global options you can configure on the `runSequence` function.
+
+Please note these are **global to the module**, and once set will affect every use of `runSequence`.
+
+Usage:
+
+```js
+var runSequence = require('run-sequence');
+runSequence.options.ignoreUndefinedTasks = true;
+gulp.task('task', function(cb) {
+	runSequence('foo', null, 'bar'); // no longer errors on `null`
+})
+```
+
+- `showErrorStackTrace`: When set to `false`, this suppresses the full stack trace from errors captured during a sequence.
+- `ignoreUndefinedTasks`: When set to `true`, this enables you to pass falsey values in which will be stripped from the task set before validation and sequencing.
+
+
+
@@ -112,3 +129,0 @@ var gulp = require('gulp'), // might be a different instance than the toplevel o
-
-[gratipay-url]: https://www.gratipay.com/OverZealous/
-[gratipay-image]: https://img.shields.io/gratipay/OverZealous.svg
diff --git a/README.md b/README.md
index 6f48e46..3a994e5 100644
--- a/README.md
+++ b/README.md
@@ -3 +3 @@
-[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Support via Gratipay][gratipay-image]][gratipay-url]
+[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url]
@@ -38 +38 @@ npm install --save-dev run-sequence
-Then add use it in your gulpfile, like so:
+Then add use it in your gulpfile, like so (note these are only examples, please check the documentation for your functions for the correct way to use them):
@@ -43,0 +44 @@ var del = require('del');
+var fs = require('fs');
@@ -57,2 +58,2 @@ gulp.task('build', function(callback) {
-// configure build-clean, build-scripts, build-styles, build-html as you
-// wish, but make sure they either return a stream or handle the callback
+// configure build-clean, build-scripts, build-styles, build-html as you wish,
+// but make sure they either return a stream or promise, or handle the callback
@@ -61,4 +62,5 @@ gulp.task('build', function(callback) {
-gulp.task('build-clean', function(callback) {
-    del([BUILD_DIRECTORY], callback);
-//                         ^^^^^^^^
-//   This is the key here, to make sure tasks run asynchronously!
+gulp.task('build-clean', function() {
+    // Return the Promise from del()
+    return del([BUILD_DIRECTORY]);
+//  ^^^^^^
+//   This is the key here, to make sure asynchronous tasks are done!
@@ -67,0 +70 @@ gulp.task('build-scripts', function() {
+    // Return the stream from gulp
@@ -70 +73,11 @@ gulp.task('build-scripts', function() {
-//   This is the key here, to make sure tasks run asynchronously!
+//   This is the key here, to make sure tasks run to completion!
+});
+
+gulp.task('callback-example', function(callback) {
+    // Use the callback in the async function
+    fs.readFile('...', function(err, file) {
+        console.log(file);
+        callback();
+//      ^^^^^^^^^^
+//       This is what lets gulp know this task is complete!
+    });
@@ -82 +95 @@ var gulp = require('gulp'), // might be a different instance than the toplevel o
-	// this uses the gulp you provide
+    // this uses the gulp you provide
@@ -89,6 +101,0 @@ var gulp = require('gulp'), // might be a different instance than the toplevel o
-## Help Support This Project
-
-If you'd like to support this and other OverZealous Creations (Phil DeJarnett) projects, [donate via Gratipay][gratipay-url]!
-
-[![Support via Gratipay][gratipay-image]][gratipay-url]
-
diff --git a/README.md b/README.md
index 0aef81d..6f48e46 100644
--- a/README.md
+++ b/README.md
@@ -9 +9 @@ Runs a sequence of gulp tasks in the specified order.  This function is designed
-> This is intended to be a temporary solution until [orchestrator](https://github.com/robrich/orchestrator/) is updated to support [non-dependent ordered tasks](https://github.com/robrich/orchestrator/issues/21).
+> This is intended to be a temporary solution until the release of [gulp 4.0](https://github.com/gulpjs/gulp/tree/4.0) which has support for defining task dependencies in [series](https://github.com/gulpjs/gulp/blob/4.0/docs/API.md#gulpseriestasks) or in [parallel](https://github.com/gulpjs/gulp/blob/4.0/docs/API.md#gulpparalleltasks).
@@ -11 +11 @@ Runs a sequence of gulp tasks in the specified order.  This function is designed
-> Be aware that this solution is a hack, and may stop working with a future update to orchestrator. 
+> Be aware that this solution is a hack, and may stop working with a future update to gulp.
diff --git a/README.md b/README.md
index 6dab47a..0aef81d 100644
--- a/README.md
+++ b/README.md
@@ -43 +43 @@ var runSequence = require('run-sequence');
-var clean = require('gulp-clean');
+var del = require('del');
@@ -61,3 +61,3 @@ gulp.task('build', function(callback) {
-gulp.task('build-clean', function() {
-    return gulp.src(BUILD_DIRECTORY).pipe(clean());
-//  ^^^^^^
+gulp.task('build-clean', function(callback) {
+    del([BUILD_DIRECTORY], callback);
+//                         ^^^^^^^^
diff --git a/README.md b/README.md
index 60e8026..6dab47a 100644
--- a/README.md
+++ b/README.md
@@ -3 +3 @@
-[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url]
+[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Support via Gratipay][gratipay-image]][gratipay-url]
@@ -91 +91 @@ var gulp = require('gulp'), // might be a different instance than the toplevel o
-If you'd like to support this and other OverZealous Creations (Phil DeJarnett) projects, [donate via Gittip][gittip-url]!
+If you'd like to support this and other OverZealous Creations (Phil DeJarnett) projects, [donate via Gratipay][gratipay-url]!
@@ -93 +93 @@ If you'd like to support this and other OverZealous Creations (Phil DeJarnett) p
-[![Support via Gittip][gittip-image]][gittip-url]
+[![Support via Gratipay][gratipay-image]][gratipay-url]
@@ -106,2 +106,2 @@ If you'd like to support this and other OverZealous Creations (Phil DeJarnett) p
-[gittip-url]: https://www.gittip.com/OverZealous/
-[gittip-image]: https://raw2.github.com/OverZealous/gittip-badge/0.1.2/dist/gittip.png
+[gratipay-url]: https://www.gratipay.com/OverZealous/
+[gratipay-image]: https://img.shields.io/gratipay/OverZealous.svg
diff --git a/README.md b/README.md
index d43292b..60e8026 100644
--- a/README.md
+++ b/README.md
@@ -16,0 +17,13 @@ If the final argument is a function, it will be used as a callback after all the
+## Possible Breaking Change in version 1.0.0
+
+In version 1.0 I've added a check that prevents the same task from showing up within any sequence.  This is to help reduce typo errors, as well as prevent the [silent exit bug when the same task occurred twice in a parallel sequence](https://github.com/OverZealous/run-sequence/issues/13).  The sequence will now fail immediately during the validation stage.
+
+If this breaking change affects you, you'll need to take one of several actions:
+
+1. Remove duplicate tasks if they are a mistake.
+2. Filter unneeded duplicate tasks before passing them to `run-sequence`.
+3. Rewrite your tasks or wrap your tasks within functions that can be called multiple times if for some reason you rely on this functionality.
+4. Continue using `run-sequence` version 0.3.7 if it was working for you.
+
+[I welcome feedback](https://github.com/OverZealous/run-sequence/issues) if this change is a problem for your setup!
+
diff --git a/README.md b/README.md
index 49d05bb..d43292b 100644
--- a/README.md
+++ b/README.md
@@ -1,79 +1,94 @@
-# run-sequence
-
-[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url]
-
-Runs a sequence of gulp tasks in the specified order.  This function is designed to solve the situation where you have defined run-order, but choose not to or cannot use dependencies.
-
-> ### Please Note
->
-> This is intended to be a temporary solution until [orchestrator](https://github.com/robrich/orchestrator/) is updated to support [non-dependent ordered tasks](https://github.com/robrich/orchestrator/issues/21).
-> 
-> Be aware that this solution is a hack, and may stop working with a future update to orchestrator. 
-
-Each argument to `run-sequence` is run in order.  This works by listening to the `task_stop` and `task_err` events, and keeping track of which tasks have been completed.  You can still run some of the tasks in parallel, by providing an array of task names for one or more of the arguments.
-
-If the final argument is a function, it will be used as a callback after all the functions are either finished or an error has occurred.
-
-## Usage
-
-First, install `run-sequence` as a development dependency:
-
-```shell
-npm install --save-dev run-sequence
-```
-
-Then add use it in your gulpfile, like so:
-
-```js
-var gulp = require('gulp');
-var runSequence = require('run-sequence');
-var clean = require('gulp-clean');
-
-// This will run in this order:
-// * build-clean
-// * build-scripts and build-styles in parallel
-// * build-html
-// * Finally call the callback function
-gulp.task('build', function(callback) {
-  runSequence('build-clean',
-              ['build-scripts', 'build-styles'],
-              'build-html',
-              callback);
-});
-
-// configure build-clean, build-scripts, build-styles, build-html as you
-// wish, but make sure they either return a stream or handle the callback
-// Example:
-
-gulp.task('build-clean', function() {
-    return gulp.src(BUILD_DIRECTORY).pipe(clean());
-//  ^^^^^^
-//   This is the key here, to make sure tasks run asynchronously!
-});
-
-gulp.task('build-scripts', function() {
-    return gulp.src(SCRIPTS_SRC).pipe(...)...
-//  ^^^^^^
-//   This is the key here, to make sure tasks run asynchronously!
-});
-```
-
-## Help Support This Project
-
-If you'd like to support this and other OverZealous Creations (Phil DeJarnett) projects, [donate via Gittip][gittip-url]!
-
-[![Support via Gittip][gittip-image]][gittip-url]
-
-## LICENSE
-
-[MIT License](http://en.wikipedia.org/wiki/MIT_License)
-
-
-[npm-url]: https://npmjs.org/package/run-sequence
-[npm-image]: https://badge.fury.io/js/run-sequence.png
-
-[travis-url]: http://travis-ci.org/OverZealous/run-sequence
-[travis-image]: https://secure.travis-ci.org/OverZealous/run-sequence.png?branch=master
-
-[gittip-url]: https://www.gittip.com/OverZealous/
-[gittip-image]: https://raw2.github.com/OverZealous/gittip-badge/0.1.2/dist/gittip.png
+# run-sequence
+
+[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url]
+
+Runs a sequence of gulp tasks in the specified order.  This function is designed to solve the situation where you have defined run-order, but choose not to or cannot use dependencies.
+
+> ### Please Note
+>
+> This is intended to be a temporary solution until [orchestrator](https://github.com/robrich/orchestrator/) is updated to support [non-dependent ordered tasks](https://github.com/robrich/orchestrator/issues/21).
+> 
+> Be aware that this solution is a hack, and may stop working with a future update to orchestrator. 
+
+Each argument to `run-sequence` is run in order.  This works by listening to the `task_stop` and `task_err` events, and keeping track of which tasks have been completed.  You can still run some of the tasks in parallel, by providing an array of task names for one or more of the arguments.
+
+If the final argument is a function, it will be used as a callback after all the functions are either finished or an error has occurred.
+
+## Usage
+
+First, install `run-sequence` as a development dependency:
+
+```shell
+npm install --save-dev run-sequence
+```
+
+Then add use it in your gulpfile, like so:
+
+```js
+var gulp = require('gulp');
+var runSequence = require('run-sequence');
+var clean = require('gulp-clean');
+
+// This will run in this order:
+// * build-clean
+// * build-scripts and build-styles in parallel
+// * build-html
+// * Finally call the callback function
+gulp.task('build', function(callback) {
+  runSequence('build-clean',
+              ['build-scripts', 'build-styles'],
+              'build-html',
+              callback);
+});
+
+// configure build-clean, build-scripts, build-styles, build-html as you
+// wish, but make sure they either return a stream or handle the callback
+// Example:
+
+gulp.task('build-clean', function() {
+    return gulp.src(BUILD_DIRECTORY).pipe(clean());
+//  ^^^^^^
+//   This is the key here, to make sure tasks run asynchronously!
+});
+
+gulp.task('build-scripts', function() {
+    return gulp.src(SCRIPTS_SRC).pipe(...)...
+//  ^^^^^^
+//   This is the key here, to make sure tasks run asynchronously!
+});
+```
+
+### Using within gulp submodules
+
+If you have a complex gulp setup with your tasks split up across different files, you may get the error that `run-sequence` is unable to find your tasks.  In this case, you can configure `run-sequence` to look at the gulp within the submodule, like so:
+
+```js
+// submodule tasks/mygulptask.js
+
+var gulp = require('gulp'), // might be a different instance than the toplevel one
+	// this uses the gulp you provide
+    runSequence = require('run-sequence').use(gulp);
+    
+    // ...and then use normally
+    runSequence('subtask1', 'subtask2');
+```
+
+## Help Support This Project
+
+If you'd like to support this and other OverZealous Creations (Phil DeJarnett) projects, [donate via Gittip][gittip-url]!
+
+[![Support via Gittip][gittip-image]][gittip-url]
+
+## LICENSE
+
+[MIT License](http://en.wikipedia.org/wiki/MIT_License)
+
+
+[npm-url]: https://npmjs.org/package/run-sequence
+[npm-image]: https://badge.fury.io/js/run-sequence.png
+
+[travis-url]: http://travis-ci.org/OverZealous/run-sequence
+[travis-image]: https://secure.travis-ci.org/OverZealous/run-sequence.png?branch=master
+
+[gittip-url]: https://www.gittip.com/OverZealous/
+[gittip-image]: https://raw2.github.com/OverZealous/gittip-badge/0.1.2/dist/gittip.png
diff --git a/README.md b/README.md
index 1015ad4..49d05bb 100644
--- a/README.md
+++ b/README.md
@@ -61,3 +61 @@ gulp.task('build-scripts', function() {
-## LICENSE
-
-(MIT License)
+## Help Support This Project
@@ -65 +63 @@ gulp.task('build-scripts', function() {
-Copyright (c) 2014 [Phil DeJarnett](http://overzealous.com)
+If you'd like to support this and other OverZealous Creations (Phil DeJarnett) projects, [donate via Gittip][gittip-url]!
@@ -67,7 +65 @@ Copyright (c) 2014 [Phil DeJarnett](http://overzealous.com)
-Permission is hereby granted, free of charge, to any person obtaining
-a copy of this software and associated documentation files (the
-"Software"), to deal in the Software without restriction, including
-without limitation the rights to use, copy, modify, merge, publish,
-distribute, sublicense, and/or sell copies of the Software, and to
-permit persons to whom the Software is furnished to do so, subject to
-the following conditions:
+[![Support via Gittip][gittip-image]][gittip-url]
@@ -75,2 +67 @@ the following conditions:
-The above copyright notice and this permission notice shall be
-included in all copies or substantial portions of the Software.
+## LICENSE
@@ -78,7 +69 @@ included in all copies or substantial portions of the Software.
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+[MIT License](http://en.wikipedia.org/wiki/MIT_License)
@@ -91 +76,4 @@ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-[travis-image]: https://secure.travis-ci.org/OverZealous/run-sequence.png?branch=master
\ No newline at end of file
+[travis-image]: https://secure.travis-ci.org/OverZealous/run-sequence.png?branch=master
+
+[gittip-url]: https://www.gittip.com/OverZealous/
+[gittip-image]: https://raw2.github.com/OverZealous/gittip-badge/0.1.2/dist/gittip.png
diff --git a/README.md b/README.md
index 1de2840..1015ad4 100644
--- a/README.md
+++ b/README.md
@@ -1 +1 @@
-![status](https://secure.travis-ci.org/OverZealous/run-sequence.png?branch=master)
+# run-sequence
@@ -3,2 +3 @@
-run-sequence
-=======
+[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url]
@@ -8 +7,7 @@ Runs a sequence of gulp tasks in the specified order.  This function is designed
-You can still run some of the tasks in parallel, by providing an array of task names.
+> ### Please Note
+>
+> This is intended to be a temporary solution until [orchestrator](https://github.com/robrich/orchestrator/) is updated to support [non-dependent ordered tasks](https://github.com/robrich/orchestrator/issues/21).
+> 
+> Be aware that this solution is a hack, and may stop working with a future update to orchestrator. 
+
+Each argument to `run-sequence` is run in order.  This works by listening to the `task_stop` and `task_err` events, and keeping track of which tasks have been completed.  You can still run some of the tasks in parallel, by providing an array of task names for one or more of the arguments.
@@ -12,2 +17,9 @@ If the final argument is a function, it will be used as a callback after all the
-Usage
------
+## Usage
+
+First, install `run-sequence` as a development dependency:
+
+```shell
+npm install --save-dev run-sequence
+```
+
+Then add use it in your gulpfile, like so:
@@ -15 +27 @@ Usage
-```javascript
+```js
@@ -20,2 +32,10 @@ var clean = require('gulp-clean');
-gulp.task('build', function(cb) {
-  runSequence('build-clean', ['build-scripts', 'build-styles'], 'build-html', cb);
+// This will run in this order:
+// * build-clean
+// * build-scripts and build-styles in parallel
+// * build-html
+// * Finally call the callback function
+gulp.task('build', function(callback) {
+  runSequence('build-clean',
+              ['build-scripts', 'build-styles'],
+              'build-html',
+              callback);
@@ -29 +49,3 @@ gulp.task('build-clean', function() {
-	return gulp.src('build').pipe(clean());
+    return gulp.src(BUILD_DIRECTORY).pipe(clean());
+//  ^^^^^^
+//   This is the key here, to make sure tasks run asynchronously!
@@ -31,0 +54,5 @@ gulp.task('build-clean', function() {
+gulp.task('build-scripts', function() {
+    return gulp.src(SCRIPTS_SRC).pipe(...)...
+//  ^^^^^^
+//   This is the key here, to make sure tasks run asynchronously!
+});
@@ -34,2 +61 @@ gulp.task('build-clean', function() {
-LICENSE
--------
+## LICENSE
@@ -58,0 +85,7 @@ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+
+[npm-url]: https://npmjs.org/package/run-sequence
+[npm-image]: https://badge.fury.io/js/run-sequence.png
+
+[travis-url]: http://travis-ci.org/OverZealous/run-sequence
+[travis-image]: https://secure.travis-ci.org/OverZealous/run-sequence.png?branch=master
\ No newline at end of file
diff --git a/README.md b/README.md
index 8832c3d..1de2840 100644
--- a/README.md
+++ b/README.md
@@ -1 +1 @@
-![status](https://secure.travis-ci.org/OverZealous/gulp-run-sequence.png?branch=master)
+![status](https://secure.travis-ci.org/OverZealous/run-sequence.png?branch=master)
@@ -3 +3 @@
-gulp-run-sequence
+run-sequence
@@ -17 +17 @@ var gulp = require('gulp');
-var runSequence = require('gulp-run-sequence');
+var runSequence = require('run-sequence');
diff --git a/README.md b/README.md
index a08cc6b..8832c3d 100644
--- a/README.md
+++ b/README.md
@@ -15,2 +14,0 @@ Usage
-You must call the exported function with your gulp instance.
-
@@ -19 +17 @@ var gulp = require('gulp');
-var runSequence = require('gulp-run-sequence')(gulp);
+var runSequence = require('gulp-run-sequence');
@@ -27,0 +26 @@ gulp.task('build', function(cb) {
+// Example:
diff --git a/README.md b/README.md
index 3c06e99..a08cc6b 100644
--- a/README.md
+++ b/README.md
@@ -9,0 +10,2 @@ You can still run some of the tasks in parallel, by providing an array of task n
+If the final argument is a function, it will be used as a callback after all the functions are either finished or an error has occurred.
+
@@ -20,2 +22,2 @@ var clean = require('gulp-clean');
-gulp.task('build', function() {
-  runSequence('build-clean', ['build-scripts', 'build-styles'], 'build-html');
+gulp.task('build', function(cb) {
+  runSequence('build-clean', ['build-scripts', 'build-styles'], 'build-html', cb);
diff --git a/README.md b/README.md
index 9a913f0..3c06e99 100644
--- a/README.md
+++ b/README.md
@@ -1 +1 @@
-![status](https://secure.travis-ci.org/overzealous/gulp-run-sequence.png?branch=master)
+![status](https://secure.travis-ci.org/OverZealous/gulp-run-sequence.png?branch=master)
