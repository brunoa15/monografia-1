diff --git a/README.md b/README.md
index db7904366..28ee95ee7 100644
--- a/README.md
+++ b/README.md
@@ -4,2 +3,0 @@ Bitcoin Core integration/staging tree
-[![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)
-
diff --git a/README.md b/README.md
index 23577d54f..db7904366 100644
--- a/README.md
+++ b/README.md
@@ -69 +69 @@ Changes to translations as well as new translations can be submitted to
-[Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).
+[Bitcoin Core's Transifex page](https://www.transifex.com/bitcoin/bitcoin/).
diff --git a/README.md b/README.md
index 55b85da97..23577d54f 100644
--- a/README.md
+++ b/README.md
@@ -34 +34,2 @@ regularly to indicate new official, stable release versions of Bitcoin Core.
-The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).
+The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md)
+and useful hints for developers can be found in [doc/developer-notes.md](doc/developer-notes.md).
diff --git a/README.md b/README.md
index 4e830109c..55b85da97 100644
--- a/README.md
+++ b/README.md
@@ -18 +18 @@ For more information, as well as an immediately useable, binary version of
-the Bitcoin Core software, see https://bitcoin.org/en/download, or read the
+the Bitcoin Core software, see https://bitcoincore.org/en/download/, or read the
diff --git a/README.md b/README.md
index acdbe4610..4e830109c 100644
--- a/README.md
+++ b/README.md
@@ -55 +55 @@ These tests can be run (if the [test dependencies](/test) are installed) with: `
-The Travis CI system makes sure that every pull request is built for Windows, Linux, and OS X, and that unit/sanity tests are run automatically.
+The Travis CI system makes sure that every pull request is built for Windows, Linux, and macOS, and that unit/sanity tests are run automatically.
diff --git a/README.md b/README.md
index 5db9fc992..acdbe4610 100644
--- a/README.md
+++ b/README.md
@@ -36,6 +35,0 @@ The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).
-The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)
-should be used to discuss complicated or controversial changes before working
-on a patch set.
-
-Developer IRC can be found on Freenode at #bitcoin-core-dev.
-
diff --git a/README.md b/README.md
index ccaf8d914..5db9fc992 100644
--- a/README.md
+++ b/README.md
@@ -59 +59 @@ in Python, that are run automatically on the build server.
-These tests can be run (if the [test dependencies](/test) are installed) with: `test/pull-tester/rpc-tests.py`
+These tests can be run (if the [test dependencies](/test) are installed) with: `test/functional/test_runner.py`
diff --git a/README.md b/README.md
index 4de30e0df..ccaf8d914 100644
--- a/README.md
+++ b/README.md
@@ -57 +57 @@ and extending unit tests can be found in [/src/test/README.md](/src/test/README.
-There are also [regression and integration tests](/test) of the RPC interface, written
+There are also [regression and integration tests](/test), written
diff --git a/README.md b/README.md
index 38a90dde4..4de30e0df 100644
--- a/README.md
+++ b/README.md
@@ -57 +57 @@ and extending unit tests can be found in [/src/test/README.md](/src/test/README.
-There are also [regression and integration tests](/qa) of the RPC interface, written
+There are also [regression and integration tests](/test) of the RPC interface, written
@@ -59 +59 @@ in Python, that are run automatically on the build server.
-These tests can be run (if the [test dependencies](/qa) are installed) with: `qa/pull-tester/rpc-tests.py`
+These tests can be run (if the [test dependencies](/test) are installed) with: `test/pull-tester/rpc-tests.py`
diff --git a/README.md b/README.md
index 3c41649c1..38a90dde4 100644
--- a/README.md
+++ b/README.md
@@ -52 +52 @@ lots of money.
-Developers are strongly encouraged to write [unit tests](/doc/unit-tests.md) for new code, and to
+Developers are strongly encouraged to write [unit tests](src/test/README.md) for new code, and to
@@ -54 +54,2 @@ submit new unit tests for old code. Unit tests can be compiled and run
-(assuming they weren't disabled in configure) with: `make check`
+(assuming they weren't disabled in configure) with: `make check`. Further details on running
+and extending unit tests can be found in [/src/test/README.md](/src/test/README.md).
diff --git a/README.md b/README.md
index 8e816e7a4..3c41649c1 100644
--- a/README.md
+++ b/README.md
@@ -11 +11 @@ What is Bitcoin?
-Bitcoin is an experimental new digital currency that enables instant payments to
+Bitcoin is an experimental digital currency that enables instant payments to
diff --git a/README.md b/README.md
index 85b198556..8e816e7a4 100644
--- a/README.md
+++ b/README.md
@@ -60,2 +60 @@ These tests can be run (if the [test dependencies](/qa) are installed) with: `qa
-The Travis CI system makes sure that every pull request is built for Windows
-and Linux, OS X, and that unit and sanity tests are automatically run.
+The Travis CI system makes sure that every pull request is built for Windows, Linux, and OS X, and that unit/sanity tests are run automatically.
diff --git a/README.md b/README.md
index d5b742534..85b198556 100644
--- a/README.md
+++ b/README.md
@@ -58 +58 @@ in Python, that are run automatically on the build server.
-These tests can be run with: `qa/pull-tester/rpc-tests.py`
+These tests can be run (if the [test dependencies](/qa) are installed) with: `qa/pull-tester/rpc-tests.py`
@@ -61 +61 @@ The Travis CI system makes sure that every pull request is built for Windows
-and Linux, OSX, and that unit and sanity tests are automatically run.
+and Linux, OS X, and that unit and sanity tests are automatically run.
diff --git a/README.md b/README.md
index b568978f0..d5b742534 100644
--- a/README.md
+++ b/README.md
@@ -18 +18 @@ For more information, as well as an immediately useable, binary version of
-the Bitcoin Core software, see https://www.bitcoin.org/en/download, or read the
+the Bitcoin Core software, see https://bitcoin.org/en/download, or read the
diff --git a/README.md b/README.md
index 77d30db69..b568978f0 100644
--- a/README.md
+++ b/README.md
@@ -18 +18,2 @@ For more information, as well as an immediately useable, binary version of
-the Bitcoin Core software, see https://www.bitcoin.org/en/download.
+the Bitcoin Core software, see https://www.bitcoin.org/en/download, or read the
+[original whitepaper](https://bitcoincore.org/bitcoin.pdf).
diff --git a/README.md b/README.md
index 5bf56947d..77d30db69 100644
--- a/README.md
+++ b/README.md
@@ -6 +6 @@ Bitcoin Core integration/staging tree
-https://www.bitcoin.org
+https://bitcoincore.org
diff --git a/README.md b/README.md
index 55ab65a68..5bf56947d 100644
--- a/README.md
+++ b/README.md
@@ -24 +24 @@ Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYI
-information or see http://opensource.org/licenses/MIT.
+information or see https://opensource.org/licenses/MIT.
diff --git a/README.md b/README.md
index b40ad0e39..55ab65a68 100644
--- a/README.md
+++ b/README.md
@@ -51 +51 @@ lots of money.
-Developers are strongly encouraged to write unit tests for new code, and to
+Developers are strongly encouraged to write [unit tests](/doc/unit-tests.md) for new code, and to
diff --git a/README.md b/README.md
index c08b2fb0b..b40ad0e39 100644
--- a/README.md
+++ b/README.md
@@ -52 +52,2 @@ Developers are strongly encouraged to write unit tests for new code, and to
-submit new unit tests for old code. Unit tests can be compiled and run (assuming they weren't disabled in configure) with: `make check`
+submit new unit tests for old code. Unit tests can be compiled and run
+(assuming they weren't disabled in configure) with: `make check`
@@ -54 +55 @@ submit new unit tests for old code. Unit tests can be compiled and run (assuming
-There are also regression and integration tests of the RPC interface, written
+There are also [regression and integration tests](/qa) of the RPC interface, written
diff --git a/README.md b/README.md
index 5aa8c327d..c08b2fb0b 100644
--- a/README.md
+++ b/README.md
@@ -58,5 +58,2 @@ These tests can be run with: `qa/pull-tester/rpc-tests.py`
-Every pull request is built for both Windows and Linux on a dedicated server,
-and unit and sanity tests are automatically run. The binaries produced may be
-used for manual QA testing — a link to them will appear in a comment on the
-pull request posted by [BitcoinPullTester](https://github.com/BitcoinPullTester). See https://github.com/TheBlueMatt/test-scripts
-for the build/test scripts.
+The Travis CI system makes sure that every pull request is built for Windows
+and Linux, OSX, and that unit and sanity tests are automatically run.
@@ -66,3 +63,4 @@ for the build/test scripts.
-Large changes should have a test plan, and should be tested by somebody other
-than the developer who wrote the code.
-See https://github.com/bitcoin/QA/ for how to create a test plan.
+Changes should be tested by somebody other than the developer who wrote the
+code. This is especially important for large or high-risk changes. It is useful
+to add a test plan to the pull request description if testing the changes is
+not straightforward.
diff --git a/README.md b/README.md
index 39813677c..5aa8c327d 100644
--- a/README.md
+++ b/README.md
@@ -1 +1 @@
-﻿Bitcoin Core integration/staging tree
+Bitcoin Core integration/staging tree
@@ -31 +31 @@ completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created
-regularly to indicate new official, stable release versions of Bitcoin.
+regularly to indicate new official, stable release versions of Bitcoin Core.
diff --git a/README.md b/README.md
index 275367ebb..39813677c 100644
--- a/README.md
+++ b/README.md
@@ -1 +1 @@
-Bitcoin Core integration/staging tree
+﻿Bitcoin Core integration/staging tree
@@ -56 +56 @@ in Python, that are run automatically on the build server.
-These tests can be run with: `qa/pull-tester/rpc-tests.sh`
+These tests can be run with: `qa/pull-tester/rpc-tests.py`
diff --git a/README.md b/README.md
index baf045741..275367ebb 100644
--- a/README.md
+++ b/README.md
@@ -39 +39 @@ on a patch set.
-Developer IRC can be found on Freenode at #bitcoin-dev.
+Developer IRC can be found on Freenode at #bitcoin-core-dev.
diff --git a/README.md b/README.md
index 594d98c39..baf045741 100644
--- a/README.md
+++ b/README.md
@@ -26 +26 @@ information or see http://opensource.org/licenses/MIT.
-Development process
+Development Process
@@ -29,15 +28,0 @@ Development process
-Developers work in their own trees, then submit pull requests when they think
-their feature or bug fix is ready.
-
-If it is a simple/trivial/non-controversial change, then one of the Bitcoin
-development team members simply pulls it.
-
-If it is a *more complicated or potentially controversial* change, then the patch
-submitter will be asked to start a discussion (if they haven't already) on the
-[mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)
-
-The patch will be accepted if there is broad consensus that it is a good thing.
-Developers should expect to rework and resubmit patches if the code doesn't
-match the project's coding conventions (see [doc/developer-notes.md](doc/developer-notes.md)) or are
-controversial.
-
@@ -47,0 +33,8 @@ regularly to indicate new official, stable release versions of Bitcoin.
+The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).
+
+The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)
+should be used to discuss complicated or controversial changes before working
+on a patch set.
+
+Developer IRC can be found on Freenode at #bitcoin-dev.
+
diff --git a/README.md b/README.md
index 4fe6a8749..594d98c39 100644
--- a/README.md
+++ b/README.md
@@ -60,0 +61,4 @@ submit new unit tests for old code. Unit tests can be compiled and run (assuming
+There are also regression and integration tests of the RPC interface, written
+in Python, that are run automatically on the build server.
+These tests can be run with: `qa/pull-tester/rpc-tests.sh`
+
diff --git a/README.md b/README.md
index 67c5ed5b4..4fe6a8749 100644
--- a/README.md
+++ b/README.md
@@ -37 +37 @@ submitter will be asked to start a discussion (if they haven't already) on the
-[mailing list](http://sourceforge.net/mailarchive/forum.php?forum_name=bitcoin-development).
+[mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)
diff --git a/README.md b/README.md
index 03a698996..67c5ed5b4 100644
--- a/README.md
+++ b/README.md
@@ -8,2 +7,0 @@ https://www.bitcoin.org
-Copyright (c) 2009-2014 Bitcoin Core Developers
-
diff --git a/README.md b/README.md
index cf650fe54..03a698996 100644
--- a/README.md
+++ b/README.md
@@ -43 +43 @@ Developers should expect to rework and resubmit patches if the code doesn't
-match the project's coding conventions (see [doc/coding.md](doc/coding.md)) or are
+match the project's coding conventions (see [doc/developer-notes.md](doc/developer-notes.md)) or are
@@ -88,35 +87,0 @@ Translators should also subscribe to the [mailing list](https://groups.google.co
-
-Development tips and tricks
----------------------------
-
-**compiling for debugging**
-
-Run configure with the --enable-debug option, then make. Or run configure with
-CXXFLAGS="-g -ggdb -O0" or whatever debug flags you need.
-
-**debug.log**
-
-If the code is behaving strangely, take a look in the debug.log file in the data directory;
-error and debugging messages are written there.
-
-The -debug=... command-line option controls debugging; running with just -debug will turn
-on all categories (and give you a very large debug.log file).
-
-The Qt code routes qDebug() output to debug.log under category "qt": run with -debug=qt
-to see it.
-
-**testnet and regtest modes**
-
-Run with the -testnet option to run with "play bitcoins" on the test network, if you
-are testing multi-machine code that needs to operate across the internet.
-
-If you are testing something that can run on one machine, run with the -regtest option.
-In regression test mode, blocks can be created on-demand; see qa/rpc-tests/ for tests
-that run in -regtest mode.
-
-**DEBUG_LOCKORDER**
-
-Bitcoin Core is a multithreaded application, and deadlocks or other multithreading bugs
-can be very difficult to track down. Compiling with -DDEBUG_LOCKORDER (configure
-CXXFLAGS="-DDEBUG_LOCKORDER -g") inserts run-time checks to keep track of which locks
-are held, and adds warnings to the debug.log file if inconsistencies are detected.
diff --git a/README.md b/README.md
index d13011d6d..cf650fe54 100644
--- a/README.md
+++ b/README.md
@@ -115 +115 @@ In regression test mode, blocks can be created on-demand; see qa/rpc-tests/ for
-that run in -regest mode.
+that run in -regtest mode.
diff --git a/README.md b/README.md
index 43be738c6..d13011d6d 100644
--- a/README.md
+++ b/README.md
@@ -100 +100 @@ If the code is behaving strangely, take a look in the debug.log file in the data
-error and debugging message are written there.
+error and debugging messages are written there.
@@ -114 +114 @@ If you are testing something that can run on one machine, run with the -regtest
-In regression test mode blocks can be created on-demand; see qa/rpc-tests/ for tests
+In regression test mode, blocks can be created on-demand; see qa/rpc-tests/ for tests
@@ -121,2 +121,2 @@ can be very difficult to track down. Compiling with -DDEBUG_LOCKORDER (configure
-CXXFLAGS="-DDEBUG_LOCKORDER -g") inserts run-time checks to keep track of what locks
-are held, and adds warning to the debug.log file if inconsistencies are detected.
+CXXFLAGS="-DDEBUG_LOCKORDER -g") inserts run-time checks to keep track of which locks
+are held, and adds warnings to the debug.log file if inconsistencies are detected.
diff --git a/README.md b/README.md
index 081af80dc..43be738c6 100644
--- a/README.md
+++ b/README.md
@@ -3,0 +4,2 @@ Bitcoin Core integration/staging tree
+[![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)
+
diff --git a/README.md b/README.md
index 7c2fe12f3..081af80dc 100644
--- a/README.md
+++ b/README.md
@@ -79 +79 @@ Changes to translations as well as new translations can be submitted to
-Periodically the translations are pulled from Transifex and merged into the git repository. See the
+Translations are periodically pulled from Transifex and merged into the git repository. See the
@@ -82 +82 @@ Periodically the translations are pulled from Transifex and merged into the git
-**Important**: We do not accept translation changes as github pull request because the next
+**Important**: We do not accept translation changes as GitHub pull requests because the next
@@ -84,0 +85,2 @@ pull from Transifex would automatically overwrite them again.
+Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/bitcoin-translators).
+
diff --git a/README.md b/README.md
index 102aa5620..7c2fe12f3 100644
--- a/README.md
+++ b/README.md
@@ -4 +4 @@ Bitcoin Core integration/staging tree
-http://www.bitcoin.org
+https://www.bitcoin.org
@@ -18 +18 @@ For more information, as well as an immediately useable, binary version of
-the Bitcoin Core software, see http://www.bitcoin.org/en/download.
+the Bitcoin Core software, see https://www.bitcoin.org/en/download.
diff --git a/README.md b/README.md
index 98edf87ee..102aa5620 100644
--- a/README.md
+++ b/README.md
@@ -52,2 +52,2 @@ Testing and code review is the bottleneck for development; we get more pull
-requests than we can review and test. Please be patient and help out, and
-remember this is a security-critical project where any mistake might cost people
+requests than we can review and test on short notice. Please be patient and help out by testing
+other people's pull requests, and remember this is a security-critical project where any mistake might cost people
diff --git a/README.md b/README.md
index ddeaf988e..98edf87ee 100644
--- a/README.md
+++ b/README.md
@@ -52,2 +52,2 @@ Testing and code review is the bottleneck for development; we get more pull
-requests than we can review and test on short notice. Please be patient and help out by testing
-other people's pull requests, and remember this is a security-critical project where any mistake might cost people
+requests than we can review and test. Please be patient and help out, and
+remember this is a security-critical project where any mistake might cost people
@@ -83,0 +84,35 @@ pull from Transifex would automatically overwrite them again.
+
+Development tips and tricks
+---------------------------
+
+**compiling for debugging**
+
+Run configure with the --enable-debug option, then make. Or run configure with
+CXXFLAGS="-g -ggdb -O0" or whatever debug flags you need.
+
+**debug.log**
+
+If the code is behaving strangely, take a look in the debug.log file in the data directory;
+error and debugging message are written there.
+
+The -debug=... command-line option controls debugging; running with just -debug will turn
+on all categories (and give you a very large debug.log file).
+
+The Qt code routes qDebug() output to debug.log under category "qt": run with -debug=qt
+to see it.
+
+**testnet and regtest modes**
+
+Run with the -testnet option to run with "play bitcoins" on the test network, if you
+are testing multi-machine code that needs to operate across the internet.
+
+If you are testing something that can run on one machine, run with the -regtest option.
+In regression test mode blocks can be created on-demand; see qa/rpc-tests/ for tests
+that run in -regest mode.
+
+**DEBUG_LOCKORDER**
+
+Bitcoin Core is a multithreaded application, and deadlocks or other multithreading bugs
+can be very difficult to track down. Compiling with -DDEBUG_LOCKORDER (configure
+CXXFLAGS="-DDEBUG_LOCKORDER -g") inserts run-time checks to keep track of what locks
+are held, and adds warning to the debug.log file if inconsistencies are detected.
diff --git a/README.md b/README.md
index 3e9ec2598..ddeaf988e 100644
--- a/README.md
+++ b/README.md
@@ -52,2 +52,2 @@ Testing and code review is the bottleneck for development; we get more pull
-requests than we can review and test. Please be patient and help out, and
-remember this is a security-critical project where any mistake might cost people
+requests than we can review and test on short notice. Please be patient and help out by testing
+other people's pull requests, and remember this is a security-critical project where any mistake might cost people
diff --git a/README.md b/README.md
index 1dc48c7cd..3e9ec2598 100644
--- a/README.md
+++ b/README.md
@@ -71,0 +72,12 @@ See https://github.com/bitcoin/QA/ for how to create a test plan.
+
+Translations
+------------
+
+Changes to translations as well as new translations can be submitted to
+[Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).
+
+Periodically the translations are pulled from Transifex and merged into the git repository. See the
+[translation process](doc/translation_process.md) for details on how this works.
+
+**Important**: We do not accept translation changes as github pull request because the next
+pull from Transifex would automatically overwrite them again.
diff --git a/README.md b/README.md
index e55526bf3..1dc48c7cd 100644
--- a/README.md
+++ b/README.md
@@ -6 +6 @@ http://www.bitcoin.org
-Copyright (c) 2009-2013 Bitcoin Core Developers
+Copyright (c) 2009-2014 Bitcoin Core Developers
diff --git a/README.md b/README.md
index ea5c57625..e55526bf3 100644
--- a/README.md
+++ b/README.md
@@ -2 +2 @@ Bitcoin Core integration/staging tree
-================================
+=====================================
diff --git a/README.md b/README.md
index 2534a62b0..ea5c57625 100644
--- a/README.md
+++ b/README.md
@@ -1 +1 @@
-Bitcoin integration/staging tree
+Bitcoin Core integration/staging tree
@@ -6 +6 @@ http://www.bitcoin.org
-Copyright (c) 2009-2013 Bitcoin Developers
+Copyright (c) 2009-2013 Bitcoin Core Developers
@@ -14 +14 @@ with no central authority: managing transactions and issuing money are carried
-out collectively by the network. Bitcoin is also the name of the open source
+out collectively by the network. Bitcoin Core is the name of open source
@@ -18 +18 @@ For more information, as well as an immediately useable, binary version of
-the Bitcoin client software, see http://www.bitcoin.org.
+the Bitcoin Core software, see http://www.bitcoin.org/en/download.
@@ -23 +23 @@ License
-Bitcoin is released under the terms of the MIT license. See [COPYING](COPYING) for more
+Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more
diff --git a/README.md b/README.md
index 0ac322232..2534a62b0 100644
--- a/README.md
+++ b/README.md
@@ -23 +23 @@ License
-Bitcoin is released under the terms of the MIT license. See `COPYING` for more
+Bitcoin is released under the terms of the MIT license. See [COPYING](COPYING) for more
@@ -41 +41 @@ Developers should expect to rework and resubmit patches if the code doesn't
-match the project's coding conventions (see `doc/coding.md`) or are
+match the project's coding conventions (see [doc/coding.md](doc/coding.md)) or are
@@ -59,4 +59 @@ Developers are strongly encouraged to write unit tests for new code, and to
-submit new unit tests for old code.
-
-Unit tests can be compiled and run (assuming they weren't disabled in configure) with:
-  make check
+submit new unit tests for old code. Unit tests can be compiled and run (assuming they weren't disabled in configure) with: `make check`
@@ -74 +70,0 @@ than the developer who wrote the code.
-
diff --git a/README.md b/README.md
index 5453f998d..0ac322232 100644
--- a/README.md
+++ b/README.md
@@ -61,9 +61,2 @@ submit new unit tests for old code.
-Unit tests for the core code are in `src/test/`. To compile and run them:
-
-    cd src; make -f makefile.unix test
-
-Unit tests for the GUI code are in `src/qt/test/`. To compile and run them:
-
-    qmake BITCOIN_QT_TEST=1 -o Makefile.test bitcoin-qt.pro
-    make -f Makefile.test
-    ./bitcoin-qt_test
+Unit tests can be compiled and run (assuming they weren't disabled in configure) with:
+  make check
diff --git a/README.md b/README.md
index bd5dd6ddd..5453f998d 100644
--- a/README.md
+++ b/README.md
@@ -41 +41 @@ Developers should expect to rework and resubmit patches if the code doesn't
-match the project's coding conventions (see `doc/coding.txt`) or are
+match the project's coding conventions (see `doc/coding.md`) or are
diff --git a/README.md b/README.md
index d675d73ad..bd5dd6ddd 100644
--- a/README.md
+++ b/README.md
@@ -18 +18 @@ For more information, as well as an immediately useable, binary version of
-the Bitcoin client sofware, see http://www.bitcoin.org.
+the Bitcoin client software, see http://www.bitcoin.org.
diff --git a/README.md b/README.md
index a50736d4e..d675d73ad 100644
--- a/README.md
+++ b/README.md
@@ -73,2 +73,2 @@ and unit and sanity tests are automatically run. The binaries produced may be
-used for manual QA testing -- a link to them will appear in a comment on the
-pull request posted by 'BitcoinPullTester'. See `https://github.com/TheBlueMatt/test-scripts`
+used for manual QA testing — a link to them will appear in a comment on the
+pull request posted by [BitcoinPullTester](https://github.com/BitcoinPullTester). See https://github.com/TheBlueMatt/test-scripts
@@ -82 +82 @@ than the developer who wrote the code.
-See `https://github.com/bitcoin/QA/` for how to create a test plan.
+See https://github.com/bitcoin/QA/ for how to create a test plan.
diff --git a/README.md b/README.md
index f1a860953..a50736d4e 100644
--- a/README.md
+++ b/README.md
@@ -6 +6 @@ http://www.bitcoin.org
-Copyright (c) 2009-2012 Bitcoin Developers
+Copyright (c) 2009-2013 Bitcoin Developers
diff --git a/README.md b/README.md
index ce9bfae87..f1a860953 100644
--- a/README.md
+++ b/README.md
@@ -63 +63 @@ Unit tests for the core code are in `src/test/`. To compile and run them:
-    cd src; make -f makefile.linux test
+    cd src; make -f makefile.unix test
diff --git a/README.md b/README.md
index 58dc2969a..ce9bfae87 100644
--- a/README.md
+++ b/README.md
@@ -69 +69 @@ Unit tests for the GUI code are in `src/qt/test/`. To compile and run them:
-    ./Bitcoin-Qt
+    ./bitcoin-qt_test
diff --git a/README.md b/README.md
index 1ecb8c7ef..58dc2969a 100644
--- a/README.md
+++ b/README.md
@@ -1 +0,0 @@
-
@@ -2,0 +2,23 @@ Bitcoin integration/staging tree
+================================
+
+http://www.bitcoin.org
+
+Copyright (c) 2009-2012 Bitcoin Developers
+
+What is Bitcoin?
+----------------
+
+Bitcoin is an experimental new digital currency that enables instant payments to
+anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate
+with no central authority: managing transactions and issuing money are carried
+out collectively by the network. Bitcoin is also the name of the open source
+software which enables the use of this currency.
+
+For more information, as well as an immediately useable, binary version of
+the Bitcoin client sofware, see http://www.bitcoin.org.
+
+License
+-------
+
+Bitcoin is released under the terms of the MIT license. See `COPYING` for more
+information or see http://opensource.org/licenses/MIT.
@@ -5 +27 @@ Development process
-===================
+-------------------
@@ -7,2 +29,2 @@ Development process
-Developers work in their own trees, then submit pull requests when
-they think their feature or bug fix is ready.
+Developers work in their own trees, then submit pull requests when they think
+their feature or bug fix is ready.
@@ -10,2 +32,2 @@ they think their feature or bug fix is ready.
-If it is a simple/trivial/non-controversial change, then one of the
-bitcoin development team members simply pulls it.
+If it is a simple/trivial/non-controversial change, then one of the Bitcoin
+development team members simply pulls it.
@@ -13,4 +35,3 @@ bitcoin development team members simply pulls it.
-If it is a more complicated or potentially controversial
-change, then the patch submitter will be asked to start a
-discussion (if they haven't already) on the mailing list:
-http://sourceforge.net/mailarchive/forum.php?forum_name=bitcoin-development
+If it is a *more complicated or potentially controversial* change, then the patch
+submitter will be asked to start a discussion (if they haven't already) on the
+[mailing list](http://sourceforge.net/mailarchive/forum.php?forum_name=bitcoin-development).
@@ -18,4 +39,4 @@ http://sourceforge.net/mailarchive/forum.php?forum_name=bitcoin-development
-The patch will be accepted if there is broad consensus that it is a
-good thing.  Developers should expect to rework and resubmit patches
-if they don't match the project's coding conventions (see coding.txt)
-or are controversial.
+The patch will be accepted if there is broad consensus that it is a good thing.
+Developers should expect to rework and resubmit patches if the code doesn't
+match the project's coding conventions (see `doc/coding.txt`) or are
+controversial.
@@ -23,3 +44,3 @@ or are controversial.
-The master branch is regularly built and tested, but is not guaranteed
-to be completely stable. Tags are regularly created to indicate new
-official, stable release versions of Bitcoin.
+The `master` branch is regularly built and tested, but is not guaranteed to be
+completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created
+regularly to indicate new official, stable release versions of Bitcoin.
@@ -28 +49,8 @@ Testing
-=======
+-------
+
+Testing and code review is the bottleneck for development; we get more pull
+requests than we can review and test. Please be patient and help out, and
+remember this is a security-critical project where any mistake might cost people
+lots of money.
+
+### Automated Testing
@@ -30,4 +58,2 @@ Testing
-Testing and code review is the bottleneck for development; we get more
-pull requests than we can review and test. Please be patient and help
-out, and remember this is a security-critical project where any
-mistake might cost people lots of money.
+Developers are strongly encouraged to write unit tests for new code, and to
+submit new unit tests for old code.
@@ -35,2 +61 @@ mistake might cost people lots of money.
-Automated Testing
------------------
+Unit tests for the core code are in `src/test/`. To compile and run them:
@@ -38,2 +63 @@ Automated Testing
-Developers are strongly encouraged to write unit tests for new code,
-and to submit new unit tests for old code.
+    cd src; make -f makefile.linux test
@@ -41,3 +65 @@ and to submit new unit tests for old code.
-Unit tests for the core code are in src/test/
-To compile and run them:
-  cd src; make -f makefile.linux test
+Unit tests for the GUI code are in `src/qt/test/`. To compile and run them:
@@ -45,5 +67,3 @@ To compile and run them:
-Unit tests for the GUI code are in src/qt/test/
-To compile and run them:
-  qmake BITCOIN_QT_TEST=1 -o Makefile.test bitcoin-qt.pro
-  make -f Makefile.test
-  ./Bitcoin-Qt
+    qmake BITCOIN_QT_TEST=1 -o Makefile.test bitcoin-qt.pro
+    make -f Makefile.test
+    ./Bitcoin-Qt
@@ -51,8 +71,5 @@ To compile and run them:
-Every pull request is built for both Windows and
-Linux on a dedicated server, and unit and sanity
-tests are automatically run. The binaries 
-produced may be used for manual QA testing
-(a link to them will appear in a comment on the pull request
-from 'BitcoinPullTester').
-See https://github.com/TheBlueMatt/test-scripts for the
-build/test scripts.
+Every pull request is built for both Windows and Linux on a dedicated server,
+and unit and sanity tests are automatically run. The binaries produced may be
+used for manual QA testing -- a link to them will appear in a comment on the
+pull request posted by 'BitcoinPullTester'. See `https://github.com/TheBlueMatt/test-scripts`
+for the build/test scripts.
@@ -60,2 +77 @@ build/test scripts.
-Manual Quality Assurance (QA) Testing
--------------------------------------
+### Manual Quality Assurance (QA) Testing
@@ -63,2 +79,2 @@ Manual Quality Assurance (QA) Testing
-Large changes should have a test plan, and should be tested
-by somebody other than the developer who wrote the code.
+Large changes should have a test plan, and should be tested by somebody other
+than the developer who wrote the code.
@@ -66 +82 @@ by somebody other than the developer who wrote the code.
-See https://github.com/bitcoin/QA/ for how to create a test plan.
+See `https://github.com/bitcoin/QA/` for how to create a test plan.
diff --git a/README.md b/README.md
index 0c475ea6c..1ecb8c7ef 100644
--- a/README.md
+++ b/README.md
@@ -25,2 +25 @@ to be completely stable. Tags are regularly created to indicate new
-official, stable release versions of Bitcoin. If you would like to
-help test the Bitcoin core, please contact QA@BitcoinTesting.org.
+official, stable release versions of Bitcoin.
@@ -28,2 +27,2 @@ help test the Bitcoin core, please contact QA@BitcoinTesting.org.
-Feature branches are created when there are major new features being
-worked on by several people.
+Testing
+=======
@@ -31,5 +30,4 @@ worked on by several people.
-From time to time a pull request will become outdated. If this occurs, and
-the pull is no longer automatically mergeable; a comment on the pull will
-be used to issue a warning of closure. The pull will be closed 15 days
-after the warning if action is not taken by the author. Pull requests closed
-in this manner will have their corresponding issue labeled 'stagnant'.
+Testing and code review is the bottleneck for development; we get more
+pull requests than we can review and test. Please be patient and help
+out, and remember this is a security-critical project where any
+mistake might cost people lots of money.
@@ -37,3 +35,2 @@ in this manner will have their corresponding issue labeled 'stagnant'.
-Issues with no commits will be given a similar warning, and closed after
-15 days from their last activity. Issues closed in this manner will be 
-labeled 'stale'. 
+Automated Testing
+-----------------
@@ -41,2 +38,29 @@ labeled 'stale'.
-Requests to reopen closed pull requests and/or issues can be submitted to 
-QA@BitcoinTesting.org. 
\ No newline at end of file
+Developers are strongly encouraged to write unit tests for new code,
+and to submit new unit tests for old code.
+
+Unit tests for the core code are in src/test/
+To compile and run them:
+  cd src; make -f makefile.linux test
+
+Unit tests for the GUI code are in src/qt/test/
+To compile and run them:
+  qmake BITCOIN_QT_TEST=1 -o Makefile.test bitcoin-qt.pro
+  make -f Makefile.test
+  ./Bitcoin-Qt
+
+Every pull request is built for both Windows and
+Linux on a dedicated server, and unit and sanity
+tests are automatically run. The binaries 
+produced may be used for manual QA testing
+(a link to them will appear in a comment on the pull request
+from 'BitcoinPullTester').
+See https://github.com/TheBlueMatt/test-scripts for the
+build/test scripts.
+
+Manual Quality Assurance (QA) Testing
+-------------------------------------
+
+Large changes should have a test plan, and should be tested
+by somebody other than the developer who wrote the code.
+
+See https://github.com/bitcoin/QA/ for how to create a test plan.
diff --git a/README.md b/README.md
index 99710bc86..0c475ea6c 100644
--- a/README.md
+++ b/README.md
@@ -29,0 +30,13 @@ worked on by several people.
+
+From time to time a pull request will become outdated. If this occurs, and
+the pull is no longer automatically mergeable; a comment on the pull will
+be used to issue a warning of closure. The pull will be closed 15 days
+after the warning if action is not taken by the author. Pull requests closed
+in this manner will have their corresponding issue labeled 'stagnant'.
+
+Issues with no commits will be given a similar warning, and closed after
+15 days from their last activity. Issues closed in this manner will be 
+labeled 'stale'. 
+
+Requests to reopen closed pull requests and/or issues can be submitted to 
+QA@BitcoinTesting.org. 
\ No newline at end of file
diff --git a/README.md b/README.md
index 92635bb3f..99710bc86 100644
--- a/README.md
+++ b/README.md
@@ -30 +29,0 @@ worked on by several people.
-
diff --git a/README.md b/README.md
index 67fa93d37..92635bb3f 100644
--- a/README.md
+++ b/README.md
@@ -26 +26 @@ official, stable release versions of Bitcoin. If you would like to
-help test the Bitcoin core, please contact QA@Bitcoin.org.
+help test the Bitcoin core, please contact QA@BitcoinTesting.org.
@@ -29,0 +30 @@ worked on by several people.
+
diff --git a/README.md b/README.md
index a41eb2d77..67fa93d37 100644
--- a/README.md
+++ b/README.md
@@ -30 +29,0 @@ worked on by several people.
-
diff --git a/README.md b/README.md
index 54ab4a4a5..a41eb2d77 100644
--- a/README.md
+++ b/README.md
@@ -0,0 +1 @@
+
@@ -6 +7,10 @@ Development process
-Developers work in their own trees, then submit pull requests when they think their feature or bug fix is ready.
+Developers work in their own trees, then submit pull requests when
+they think their feature or bug fix is ready.
+
+If it is a simple/trivial/non-controversial change, then one of the
+bitcoin development team members simply pulls it.
+
+If it is a more complicated or potentially controversial
+change, then the patch submitter will be asked to start a
+discussion (if they haven't already) on the mailing list:
+http://sourceforge.net/mailarchive/forum.php?forum_name=bitcoin-development
@@ -8 +18,4 @@ Developers work in their own trees, then submit pull requests when they think th
-If it is a simple/trivial/non-controversial change, then one of the bitcoin development team members simply pulls it.
+The patch will be accepted if there is broad consensus that it is a
+good thing.  Developers should expect to rework and resubmit patches
+if they don't match the project's coding conventions (see coding.txt)
+or are controversial.
@@ -10,2 +23,4 @@ If it is a simple/trivial/non-controversial change, then one of the bitcoin deve
-If it is a more complicated or potentially controversial change, then the patch submitter will be asked to start a discussion (if they haven't already) on the mailing list:  http://sourceforge.net/mailarchive/forum.php?forum_name=bitcoin-development
-The patch will be accepted if there is broad consensus that it is a good thing.  Developers should expect to rework and resubmit patches if they don't match the project's coding conventions (see coding.txt) or are controversial.
+The master branch is regularly built and tested, but is not guaranteed
+to be completely stable. Tags are regularly created to indicate new
+official, stable release versions of Bitcoin. If you would like to
+help test the Bitcoin core, please contact QA@Bitcoin.org.
@@ -13 +28,2 @@ The patch will be accepted if there is broad consensus that it is a good thing.
-The master branch is regularly built and tested, but is not guaranteed to be completely stable. Tags are regularly created to indicate new official, stable release versions of Bitcoin. If you would like to help test the Bitcoin core, please contact QA@Bitcoin.org.
+Feature branches are created when there are major new features being
+worked on by several people.
@@ -15 +30,0 @@ The master branch is regularly built and tested, but is not guaranteed to be com
-Feature branches are created when there are major new features being worked on by several people.
\ No newline at end of file
diff --git a/README.md b/README.md
new file mode 100644
index 000000000..54ab4a4a5
--- /dev/null
+++ b/README.md
@@ -0,0 +1,15 @@
+Bitcoin integration/staging tree
+
+Development process
+===================
+
+Developers work in their own trees, then submit pull requests when they think their feature or bug fix is ready.
+
+If it is a simple/trivial/non-controversial change, then one of the bitcoin development team members simply pulls it.
+
+If it is a more complicated or potentially controversial change, then the patch submitter will be asked to start a discussion (if they haven't already) on the mailing list:  http://sourceforge.net/mailarchive/forum.php?forum_name=bitcoin-development
+The patch will be accepted if there is broad consensus that it is a good thing.  Developers should expect to rework and resubmit patches if they don't match the project's coding conventions (see coding.txt) or are controversial.
+
+The master branch is regularly built and tested, but is not guaranteed to be completely stable. Tags are regularly created to indicate new official, stable release versions of Bitcoin. If you would like to help test the Bitcoin core, please contact QA@Bitcoin.org.
+
+Feature branches are created when there are major new features being worked on by several people.
\ No newline at end of file
diff --git a/README.md b/README.md
deleted file mode 100644
index ab328adbf..000000000
--- a/README.md
+++ /dev/null
@@ -1,16 +0,0 @@
-Bitcoin integration/staging tree
-
-Development process
-===================
-
-Developers work in their own trees, then submit pull requests when they think their feature or bug fix is ready.
-
-If it is a simple/trivial/non-controversial change, then one of the bitcoin development team members simply pulls it.
-
-If it is a more complicated or potentially controversial change, then the patch submitter will be asked to start a discussion (if they haven't already) on the development forums:  http://www.bitcoin.org/smf/index.php?board=6.0
-The patch will be accepted if there is broad consensus that it is a good thing.  Developers should expect to rework and resubmit patches if they don't match the project's coding conventions (see coding.txt) or are controversial.
-
-The master branch is regularly built and tested (by who? need people willing to be quality assurance testers), and periodically pushed to the subversion repo to become the official, stable, released bitcoin.
-
-
-Feature branches are created when there are major new features being worked on by several people.
diff --git a/README.md b/README.md
index f13a79a98..ab328adbf 100644
--- a/README.md
+++ b/README.md
@@ -3 +3,2 @@ Bitcoin integration/staging tree
-Straw-man plan for Bitcoin development (open source vets, please slap me around and help make this better):
+Development process
+===================
@@ -5 +6 @@ Straw-man plan for Bitcoin development (open source vets, please slap me around
-Developers work in their own trees, then submit pull requests when they think their feature is ready.
+Developers work in their own trees, then submit pull requests when they think their feature or bug fix is ready.
@@ -7 +8 @@ Developers work in their own trees, then submit pull requests when they think th
-Requests get discussed (where? bitcoin forums?) and if there's broad consensus they're a good thing, well written, match coding style, etc. then they're merged into the 'master' branch.
+If it is a simple/trivial/non-controversial change, then one of the bitcoin development team members simply pulls it.
@@ -9 +10,2 @@ Requests get discussed (where? bitcoin forums?) and if there's broad consensus t
-master branch is regularly built and tested (by who? need people willing to be quality assurance testers), and periodically pushed to the subversion repo to become the official, stable, released bitcoin.
+If it is a more complicated or potentially controversial change, then the patch submitter will be asked to start a discussion (if they haven't already) on the development forums:  http://www.bitcoin.org/smf/index.php?board=6.0
+The patch will be accepted if there is broad consensus that it is a good thing.  Developers should expect to rework and resubmit patches if they don't match the project's coding conventions (see coding.txt) or are controversial.
@@ -10,0 +13 @@ master branch is regularly built and tested (by who? need people willing to be q
+The master branch is regularly built and tested (by who? need people willing to be quality assurance testers), and periodically pushed to the subversion repo to become the official, stable, released bitcoin.
@@ -12 +14,0 @@ master branch is regularly built and tested (by who? need people willing to be q
-We'll create feature branches if/when there are major new features being worked on by several people.
@@ -13,0 +16 @@ We'll create feature branches if/when there are major new features being worked
+Feature branches are created when there are major new features being worked on by several people.
diff --git a/README.md b/README.md
index 4c8475c88..f13a79a98 100644
--- a/README.md
+++ b/README.md
@@ -1,2 +1 @@
-Gavin's Bitcoin patches
-=======================
+Bitcoin integration/staging tree
@@ -4 +3 @@ Gavin's Bitcoin patches
-Branches here:
+Straw-man plan for Bitcoin development (open source vets, please slap me around and help make this better):
@@ -6,5 +5,8 @@ Branches here:
-* svn : up-to-date mirror of the 'production' Bitcoin (from http://sourceforge.net/projects/bitcoin/).
-* monitorreceived : Implements monitortransaction/monitorblocks/gettransaction/getblock RPC commands.
-* listtransactions: Implements new JSON-RPC command "listtransactions" (from jgarzik)
-* refundtransaction : Implements new JSON-RPC command "refundtransaction"
-* master : All of the above, merged together.
+Developers work in their own trees, then submit pull requests when they think their feature is ready.
+
+Requests get discussed (where? bitcoin forums?) and if there's broad consensus they're a good thing, well written, match coding style, etc. then they're merged into the 'master' branch.
+
+master branch is regularly built and tested (by who? need people willing to be quality assurance testers), and periodically pushed to the subversion repo to become the official, stable, released bitcoin.
+
+
+We'll create feature branches if/when there are major new features being worked on by several people.
@@ -12 +13,0 @@ Branches here:
-Code is hosted at github: http://github.com/gavinandresen/bitcoin-git
diff --git a/README.md b/README.md
index 80af3424e..4c8475c88 100644
--- a/README.md
+++ b/README.md
@@ -1,2 +1,2 @@
-Bitcoin TEST network source code
-================================
+Gavin's Bitcoin patches
+=======================
@@ -6,0 +7 @@ Branches here:
+* monitorreceived : Implements monitortransaction/monitorblocks/gettransaction/getblock RPC commands.
@@ -9,16 +10 @@ Branches here:
-
-These branches operate on the TEST network:
-
-* svnTEST : just like 'svn' (no additional features), but patched to operate on the TEST network.
-* master : runs on the TEST-network with any of what I think are "production-ready" features.
-
-Important changes on the master branch are:
-
-* Listen port is 18333 (instead of 8333).  Uses 18332 for JSON-RPC (instead of 8332).
-* Uses irc.lfnet.org channel #bitcoinTEST  for bootstrapping.
-* Never tries to connect to "well known" nodes for bootstrapping.
-* Uses bitcoinTEST for the default data directory (e.g. ~/.bitcoinTEST on Linux, %APPDATA%/BitcoinTEST on Windows, etc)
-* Uses a different ADDRESSVERSION for Bitcoin Addresses (0xff instead of 0x0), so you can't screw up copying and pasting Bitcoin addresses (if you try to use a TEST address on the production system it will tell you it's invalid; you can, however, lose TESTcoins by trying to send them to a valid production address)
-* Has a brand-new block chain (with a different genesis block)
-* Initial difficulty is 4 times easier than production Bitcoin
-* protocol message header bytes are { 0xfa, 0xbf, 0xb5, 0xda } instead of { 0xf9, 0xbe, 0xb4, 0xd9 }
+* master : All of the above, merged together.
@@ -27 +12,0 @@ Code is hosted at github: http://github.com/gavinandresen/bitcoin-git
-
diff --git a/README.md b/README.md
index a473c87e9..80af3424e 100644
--- a/README.md
+++ b/README.md
@@ -1,3 +1,27 @@
-Bitcoin subversion clone
-========================
-This branch is a clone of the subversion tree, kept up-to-date via 'git svn fetch'.
+Bitcoin TEST network source code
+================================
+
+Branches here:
+
+* svn : up-to-date mirror of the 'production' Bitcoin (from http://sourceforge.net/projects/bitcoin/).
+* listtransactions: Implements new JSON-RPC command "listtransactions" (from jgarzik)
+* refundtransaction : Implements new JSON-RPC command "refundtransaction"
+
+These branches operate on the TEST network:
+
+* svnTEST : just like 'svn' (no additional features), but patched to operate on the TEST network.
+* master : runs on the TEST-network with any of what I think are "production-ready" features.
+
+Important changes on the master branch are:
+
+* Listen port is 18333 (instead of 8333).  Uses 18332 for JSON-RPC (instead of 8332).
+* Uses irc.lfnet.org channel #bitcoinTEST  for bootstrapping.
+* Never tries to connect to "well known" nodes for bootstrapping.
+* Uses bitcoinTEST for the default data directory (e.g. ~/.bitcoinTEST on Linux, %APPDATA%/BitcoinTEST on Windows, etc)
+* Uses a different ADDRESSVERSION for Bitcoin Addresses (0xff instead of 0x0), so you can't screw up copying and pasting Bitcoin addresses (if you try to use a TEST address on the production system it will tell you it's invalid; you can, however, lose TESTcoins by trying to send them to a valid production address)
+* Has a brand-new block chain (with a different genesis block)
+* Initial difficulty is 4 times easier than production Bitcoin
+* protocol message header bytes are { 0xfa, 0xbf, 0xb5, 0xda } instead of { 0xf9, 0xbe, 0xb4, 0xd9 }
+
+Code is hosted at github: http://github.com/gavinandresen/bitcoin-git
+
