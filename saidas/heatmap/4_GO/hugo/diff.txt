diff --git a/README.md b/README.md
index 284d5e01..133a4b1f 100644
--- a/README.md
+++ b/README.md
@@ -1 +1 @@
-![Hugo](https://raw.githubusercontent.com/gohugoio/hugoDocs/master/static/img/hugo-logo.png)
+<img src="https://raw.githubusercontent.com/gohugoio/gohugoioTheme/master/static/images/hugo-logo-wide.svg?sanitize=true" alt="Hugo" width="565">
diff --git a/README.md b/README.md
index f054a46e..284d5e01 100644
--- a/README.md
+++ b/README.md
@@ -135 +135 @@ Hugo stands on the shoulder of many great open source libraries, in lexical orde
- | [github.com/chaseadamsio/goorgeous](https://github.com/chaseadamsio/goorgeous) | MIT License |
+ | [github.com/niklasfasching/go-org](https://github.com/niklasfasching/go-org) | MIT License |
diff --git a/README.md b/README.md
index 294bd433..f054a46e 100644
--- a/README.md
+++ b/README.md
@@ -7 +6,0 @@ A Fast and Flexible Static Site Generator built with love by [bep](https://githu
-[Developer Chat (no support)](https://gitter.im/spf13/hugo) |
@@ -15 +13,0 @@ A Fast and Flexible Static Site Generator built with love by [bep](https://githu
-[![Dev chat at https://gitter.im/spf13/hugo](https://img.shields.io/badge/gitter-developer_chat-46bc99.svg)](https://gitter.im/spf13/hugo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
diff --git a/README.md b/README.md
index 4869950f..294bd433 100644
--- a/README.md
+++ b/README.md
@@ -137 +136,0 @@ Hugo stands on the shoulder of many great open source libraries, in lexical orde
- | [github.com/bep/mapstructure](https://github.com/bep/mapstructure) |   MIT License |
diff --git a/README.md b/README.md
index e1913154..4869950f 100644
--- a/README.md
+++ b/README.md
@@ -121,0 +122,69 @@ For a complete guide to contributing code to Hugo, see the [Contribution Guide](
+
+## Dependencies
+
+Hugo stands on the shoulder of many great open source libraries, in lexical order:
+
+ | Dependency  | License |
+ | :------------- | :------------- |
+ | [github.com/BurntSushi/locker](https://github.com/BurntSushi/locker) | The Unlicense |
+ | [github.com/BurntSushi/toml](https://github.com/BurntSushi/toml) | MIT License |
+ | [github.com/PuerkitoBio/purell](https://github.com/PuerkitoBio/purell) | BSD 3-Clause "New" or "Revised" License |
+ | [github.com/PuerkitoBio/urlesc](https://github.com/PuerkitoBio/urlesc) | BSD 3-Clause "New" or "Revised" License |
+ | [github.com/alecthomas/chroma](https://github.com/alecthomas/chroma) |  MIT License |
+ | [github.com/bep/debounce](https://github.com/bep/debounce) |    MIT License |
+ | [github.com/bep/gitmap](https://github.com/bep/gitmap) |  MIT License |
+ | [github.com/bep/go-tocss](https://github.com/bep/go-tocss) | MIT License |
+ | [github.com/bep/mapstructure](https://github.com/bep/mapstructure) |   MIT License |
+ | [github.com/chaseadamsio/goorgeous](https://github.com/chaseadamsio/goorgeous) | MIT License |
+ | [github.com/cpuguy83/go-md2man](https://github.com/cpuguy83/go-md2man) | MIT License |
+ | [github.com/danwakefield/fnmatch](https://github.com/danwakefield/fnmatch) | BSD 2-Clause "Simplified" License |
+ | [github.com/disintegration/imaging](https://github.com/disintegration/imaging) |  MIT License |
+ | [github.com/dlclark/regexp2](https://github.com/dlclark/regexp2) | MIT License |
+ | [github.com/eknkc/amber](https://github.com/eknkc/amber) | MIT License |
+ | [github.com/fsnotify/fsnotify](https://github.com/fsnotify/fsnotify) |  BSD 3-Clause "New" or "Revised" License |
+ | [github.com/gobwas/glob](https://github.com/gobwas/glob) | MIT License |
+ | [github.com/gorilla/websocket](https://github.com/gorilla/websocket) |  BSD 2-Clause "Simplified" License |
+ | [github.com/hashicorp/go-immutable-radix](https://github.com/hashicorp/go-immutable-radix) | Mozilla Public License 2.0 |
+ | [github.com/hashicorp/golang-lru](https://github.com/hashicorp/golang-lru) | Mozilla Public License 2.0 |
+ | [github.com/hashicorp/hcl](https://github.com/hashicorp/hcl) |   Mozilla Public License 2.0 |
+ | [github.com/jdkato/prose](https://github.com/jdkato/prose) |    MIT License |
+ | [github.com/kyokomi/emoji](https://github.com/kyokomi/emoji) |   MIT License |
+ | [github.com/magiconair/properties](https://github.com/magiconair/properties) | BSD 2-Clause "Simplified" License |
+ | [github.com/markbates/inflect](https://github.com/markbates/inflect) |  MIT License |
+ | [github.com/mattn/go-isatty](https://github.com/mattn/go-isatty) | MIT License |
+ | [github.com/mattn/go-runewidth](https://github.com/mattn/go-runewidth) | MIT License |
+ | [github.com/miekg/mmark](https://github.com/miekg/mmark) | Simplified BSD License |
+ | [github.com/mitchellh/hashstructure](https://github.com/mitchellh/hashstructure) | MIT License |
+ | [github.com/mitchellh/mapstructure](https://github.com/mitchellh/mapstructure) | MIT License |
+ | [github.com/muesli/smartcrop](https://github.com/muesli/smartcrop) |   MIT License |
+ | [github.com/nicksnyder/go-i18n](https://github.com/nicksnyder/go-i18n) | MIT License |
+ | [github.com/olekukonko/tablewriter](https://github.com/olekukonko/tablewriter) | MIT License |
+ | [github.com/pelletier/go-toml](https://github.com/pelletier/go-toml) |  MIT License |
+ | [github.com/pkg/errors](https://github.com/pkg/errors) |  BSD 2-Clause "Simplified" License |
+ | [github.com/russross/blackfriday](https://github.com/russross/blackfriday)  | Simplified BSD License |
+ | [github.com/shurcooL/sanitized_anchor_name](https://github.com/shurcooL/sanitized_anchor_name) | MIT License |
+ | [github.com/spf13/afero](https://github.com/spf13/afero) | Apache License 2.0 |
+ | [github.com/spf13/cast](https://github.com/spf13/cast) |  MIT License |
+ | [github.com/spf13/cobra](https://github.com/spf13/cobra) | Apache License 2.0 |
+ | [github.com/spf13/fsync](https://github.com/spf13/fsync) | MIT License |
+ | [github.com/spf13/jwalterweatherman](https://github.com/spf13/jwalterweatherman) | MIT License |
+ | [github.com/spf13/nitro](https://github.com/spf13/nitro) | Apache License 2.0 |
+ | [github.com/spf13/pflag](https://github.com/spf13/pflag) | BSD 3-Clause "New" or "Revised" License |
+ | [github.com/spf13/viper](https://github.com/spf13/viper) | MIT License |
+ | [github.com/tdewolff/minify](https://github.com/tdewolff/minify) | MIT License |
+ | [github.com/tdewolff/parse](https://github.com/tdewolff/parse) | MIT License |
+ | [github.com/wellington/go-libsass](https://github.com/wellington/go-libsass) | Apache License 2.0 |
+ | [github.com/yosssi/ace](https://github.com/yosssi/ace) |  MIT License |
+ | [golang.org/x/image](https://golang.org/x/image) | BSD 3-Clause "New" or "Revised" License |
+ | [golang.org/x/net](https://golang.org/x/net) | BSD 3-Clause "New" or "Revised" License |
+ | [golang.org/x/sync](https://golang.org/x/sync) | BSD 3-Clause "New" or "Revised" License |
+ | [golang.org/x/sys](https://golang.org/x/sys) | BSD 3-Clause "New" or "Revised" License |
+ | [golang.org/x/text](https://golang.org/x/text) | BSD 3-Clause "New" or "Revised" License
+ | [gopkg.in/yaml.v2](https://gopkg.in/yaml.v2) |    Apache License 2.0 |
+
+  
+ 
+  
+ 
+ 
+ 
diff --git a/README.md b/README.md
index f7c6d1ff..e1913154 100644
--- a/README.md
+++ b/README.md
@@ -14,2 +14 @@ A Fast and Flexible Static Site Generator built with love by [bep](https://githu
-[![Linux and macOS Build Status](https://api.travis-ci.org/gohugoio/hugo.svg?branch=master&label=Linux+and+macOS+build "Linux and macOS Build Status")](https://travis-ci.org/gohugoio/hugo)
-[![Windows Build Status](https://ci.appveyor.com/api/projects/status/a5mr220vsd091kua?svg=true&label=Windows+build "Windows Build Status")](https://ci.appveyor.com/project/bep/hugo/branch/master)
+[![Linux and macOS Build Status](https://api.travis-ci.org/gohugoio/hugo.svg?branch=master&label=Windows+and+Linux+and+macOS+build "Windows, Linux and macOS Build Status")](https://travis-ci.org/gohugoio/hugo)
diff --git a/README.md b/README.md
index 0f056019..f7c6d1ff 100644
--- a/README.md
+++ b/README.md
@@ -8,2 +8,2 @@ A Fast and Flexible Static Site Generator built with love by [bep](https://githu
-[Documentation](https://gohugo.io/overview/introduction/) |
-[Installation Guide](https://gohugo.io/overview/installing/) |
+[Documentation](https://gohugo.io/getting-started/) |
+[Installation Guide](https://gohugo.io/getting-started/installing/) |
@@ -39 +39 @@ Hugo may also be compiled from source wherever the Go compiler tool chain can ru
-**Complete documentation is available at [Hugo Documentation][].**
+**Complete documentation is available at [Hugo Documentation](https://gohugo.io/getting-started/).**
@@ -53 +53 @@ Building the binaries is an easy task for an experienced `go` getter.
-Use the [installation instructions in the Hugo documentation](https://gohugo.io/overview/installing/).
+Use the [installation instructions in the Hugo documentation](https://gohugo.io/getting-started/installing/).
diff --git a/README.md b/README.md
index d97011da..0f056019 100644
--- a/README.md
+++ b/README.md
@@ -7 +7 @@ A Fast and Flexible Static Site Generator built with love by [bep](https://githu
-[Developer Chat (no support)](https://gitter.im/gohugoio/hugo) |
+[Developer Chat (no support)](https://gitter.im/spf13/hugo) |
@@ -16 +16 @@ A Fast and Flexible Static Site Generator built with love by [bep](https://githu
-[![Dev chat at https://gitter.im/gohugoio/hugo](https://img.shields.io/badge/gitter-developer_chat-46bc99.svg)](https://gitter.im/spf13/hugo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
+[![Dev chat at https://gitter.im/spf13/hugo](https://img.shields.io/badge/gitter-developer_chat-46bc99.svg)](https://gitter.im/spf13/hugo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
@@ -64 +64 @@ Use the [installation instructions in the Hugo documentation](https://gohugo.io/
-Since Hugo 0.48, Hugo uses the Go Modules support built into Go 1.11 to build. The easiest is is to clone Hugo in a directory outside of `GOPATH`, as in the following example:
+Since Hugo 0.48, Hugo uses the Go Modules support built into Go 1.11 to build. The easiest is to clone Hugo in a directory outside of `GOPATH`, as in the following example:
diff --git a/README.md b/README.md
index e8b941aa..d97011da 100644
--- a/README.md
+++ b/README.md
@@ -60,7 +60 @@ Use the [installation instructions in the Hugo documentation](https://gohugo.io/
-* [Go (latest or previous version)](https://golang.org/dl/)
-
-#### Vendored Dependencies
-
-Hugo uses [dep](https://github.com/golang/dep) to vendor dependencies, but we don't commit the vendored packages themselves to the Hugo git repository. Therefore, a simple `go get` is _not_ supported because the command is not vendor aware.
-
-The simplest way is to use [mage](https://github.com/magefile/mage) (a Make alternative for Go projects.)
+* [Go (at least Go 1.11)](https://golang.org/dl/)
@@ -69,0 +64,2 @@ The simplest way is to use [mage](https://github.com/magefile/mage) (a Make alte
+Since Hugo 0.48, Hugo uses the Go Modules support built into Go 1.11 to build. The easiest is is to clone Hugo in a directory outside of `GOPATH`, as in the following example:
+
@@ -71,5 +67,5 @@ The simplest way is to use [mage](https://github.com/magefile/mage) (a Make alte
-go get github.com/magefile/mage
-go get -d github.com/gohugoio/hugo
-cd ${GOPATH:-$HOME/go}/src/github.com/gohugoio/hugo
-mage vendor
-mage install
+mkdir $HOME/src
+cd $HOME/src
+git clone https://github.com/gohugoio/hugo.git
+cd hugo
+go install
diff --git a/README.md b/README.md
index ff55b809..e8b941aa 100644
--- a/README.md
+++ b/README.md
@@ -11 +11 @@ A Fast and Flexible Static Site Generator built with love by [bep](https://githu
-[Twitter](http://twitter.com/gohugoio)
+[Twitter](https://twitter.com/gohugoio)
@@ -59 +59 @@ Use the [installation instructions in the Hugo documentation](https://gohugo.io/
-* [Git](http://git-scm.com/)
+* [Git](https://git-scm.com/)
diff --git a/README.md b/README.md
index 7353bd46..ff55b809 100644
--- a/README.md
+++ b/README.md
@@ -57 +57 @@ Use the [installation instructions in the Hugo documentation](https://gohugo.io/
-Add Hugo and its package dependencies to your go `src` directory.
+#### Prerequisite Tools
@@ -59 +59,2 @@ Add Hugo and its package dependencies to your go `src` directory.
-    go get -v github.com/gohugoio/hugo
+* [Git](http://git-scm.com/)
+* [Go (latest or previous version)](https://golang.org/dl/)
@@ -61 +62 @@ Add Hugo and its package dependencies to your go `src` directory.
-Once the `get` completes, you should find your new `hugo` (or `hugo.exe`) executable sitting inside `$GOPATH/bin/`.
+#### Vendored Dependencies
@@ -63 +64 @@ Once the `get` completes, you should find your new `hugo` (or `hugo.exe`) execut
-To update Hugo’s dependencies, use `go get` with the `-u` option.
+Hugo uses [dep](https://github.com/golang/dep) to vendor dependencies, but we don't commit the vendored packages themselves to the Hugo git repository. Therefore, a simple `go get` is _not_ supported because the command is not vendor aware.
@@ -65 +66,13 @@ To update Hugo’s dependencies, use `go get` with the `-u` option.
-    go get -u -v github.com/gohugoio/hugo
+The simplest way is to use [mage](https://github.com/magefile/mage) (a Make alternative for Go projects.)
+
+#### Fetch from GitHub
+
+```bash
+go get github.com/magefile/mage
+go get -d github.com/gohugoio/hugo
+cd ${GOPATH:-$HOME/go}/src/github.com/gohugoio/hugo
+mage vendor
+mage install
+```
+
+**If you are a Windows user, substitute the `$HOME` environment variable above with `%USERPROFILE%`.**
diff --git a/README.md b/README.md
index 07b2cec6..7353bd46 100644
--- a/README.md
+++ b/README.md
@@ -3 +3 @@
-A Fast and Flexible Static Site Generator built with love by [spf13](http://spf13.com/) and [friends](https://github.com/gohugoio/hugo/graphs/contributors) in [Go][].
+A Fast and Flexible Static Site Generator built with love by [bep](https://github.com/bep), [spf13](http://spf13.com/) and [friends](https://github.com/gohugoio/hugo/graphs/contributors) in [Go][].
diff --git a/README.md b/README.md
index e9d5423d..07b2cec6 100644
--- a/README.md
+++ b/README.md
@@ -101,0 +102 @@ Hugo is a very active project with many contributions happening daily.
+
diff --git a/README.md b/README.md
index 26e71aa7..e9d5423d 100644
--- a/README.md
+++ b/README.md
@@ -22 +22 @@ Hugo is a static HTML and CSS website generator written in [Go][].
-It is optimized for speed, easy use and configurability.
+It is optimized for speed, ease of use, and configurability.
@@ -25,2 +25 @@ Hugo takes a directory with content and templates and renders them into a full H
-Hugo relies on Markdown files with front matter for meta data.
-And you can run Hugo from any directory.
+Hugo relies on Markdown files with front matter for metadata, and you can run Hugo from any directory.
@@ -32 +31 @@ A good rule of thumb is that each piece of content renders in around 1 milliseco
-Hugo is designed to work well for any kind of website including blogs, tumbles and docs.
+Hugo is designed to work well for any kind of website including blogs, tumbles, and docs.
@@ -36 +35 @@ Hugo is designed to work well for any kind of website including blogs, tumbles a
-Currently, we provide pre-built Hugo binaries for Windows, Linux, FreeBSD, NetBSD and macOS (Darwin) and [Android](https://gist.github.com/bep/a0d8a26cf6b4f8bc992729b8e50b480b) for x64, i386 and ARM architectures.
+Currently, we provide pre-built Hugo binaries for Windows, Linux, FreeBSD, NetBSD, macOS (Darwin), and [Android](https://gist.github.com/bep/a0d8a26cf6b4f8bc992729b8e50b480b) for x64, i386 and ARM architectures.
@@ -38 +37 @@ Currently, we provide pre-built Hugo binaries for Windows, Linux, FreeBSD, NetBS
-Hugo may also be compiled from source wherever the Go compiler tool chain can run, e.g. for other operating systems including DragonFly BSD, OpenBSD, Plan&nbsp;9 and Solaris.
+Hugo may also be compiled from source wherever the Go compiler tool chain can run, e.g. for other operating systems including DragonFly BSD, OpenBSD, Plan 9, and Solaris.
diff --git a/README.md b/README.md
index 30bfa8b1..26e71aa7 100644
--- a/README.md
+++ b/README.md
@@ -70 +70 @@ To update Hugo’s dependencies, use `go get` with the `-u` option.
-The Hugo documentation now lives in its own repository, see https://github.com/gohugoio/hugoDocs. But we do keep a version of that documentation as a `git subtree` in this repository. To build the sub folder `/docs` as a Hugo site, you need to clone this repo with submodules:
+The Hugo documentation now lives in its own repository, see https://github.com/gohugoio/hugoDocs. But we do keep a version of that documentation as a `git subtree` in this repository. To build the sub folder `/docs` as a Hugo site, you need to clone this repo:
@@ -73 +73 @@ The Hugo documentation now lives in its own repository, see https://github.com/g
-git clone --recursive git@github.com:gohugoio/hugo.git
+git clone git@github.com:gohugoio/hugo.git
@@ -75,7 +74,0 @@ git clone --recursive git@github.com:gohugoio/hugo.git
-
-Or after you have cloned it you can do:
-
-```bash
-git submodule update --init
-```
-
diff --git a/README.md b/README.md
index e5591d5e..30bfa8b1 100644
--- a/README.md
+++ b/README.md
@@ -66,0 +67,14 @@ To update Hugo’s dependencies, use `go get` with the `-u` option.
+	
+## The Hugo Documentation
+
+The Hugo documentation now lives in its own repository, see https://github.com/gohugoio/hugoDocs. But we do keep a version of that documentation as a `git subtree` in this repository. To build the sub folder `/docs` as a Hugo site, you need to clone this repo with submodules:
+
+```bash
+git clone --recursive git@github.com:gohugoio/hugo.git
+```
+
+Or after you have cloned it you can do:
+
+```bash
+git submodule update --init
+```
diff --git a/README.md b/README.md
index d24877a0..e5591d5e 100644
--- a/README.md
+++ b/README.md
@@ -6 +6 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[Forum](https://discuss.gohugo.io) |
+[Forum](https://discourse.gohugo.io) |
@@ -81 +81 @@ The Hugo community and maintainers are [very active](https://github.com/gohugoio
-We have an active [discussion forum](http://discuss.gohugo.io) where users and developers can ask questions.
+We have an active [discussion forum](https://discourse.gohugo.io) where users and developers can ask questions.
@@ -88 +88 @@ the GitHub issue tracker to report the problem to the Hugo maintainers.
-If you're not sure if it's a bug or not, start by asking in the [discussion forum](http://discuss.gohugo.io).
+If you're not sure if it's a bug or not, start by asking in the [discussion forum](https://discourse.gohugo.io).
diff --git a/README.md b/README.md
index 1b694b8c..d24877a0 100644
--- a/README.md
+++ b/README.md
@@ -1 +1 @@
-![Hugo](https://raw.githubusercontent.com/gohugoio/hugo/master/docs/static/img/hugo-logo.png)
+![Hugo](https://raw.githubusercontent.com/gohugoio/hugoDocs/master/static/img/hugo-logo.png)
diff --git a/README.md b/README.md
index cd5fe9a4..1b694b8c 100644
--- a/README.md
+++ b/README.md
@@ -16 +16 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![Dev chat at https://gitter.im/gohugoio/hugo](https://img.shields.io/badge/gitter-developer_chat-46bc99.svg)](https://gitter.im/gohugoio/hugo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
+[![Dev chat at https://gitter.im/gohugoio/hugo](https://img.shields.io/badge/gitter-developer_chat-46bc99.svg)](https://gitter.im/spf13/hugo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
diff --git a/README.md b/README.md
index ea03ae28..cd5fe9a4 100644
--- a/README.md
+++ b/README.md
@@ -14 +14 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![Linux and macOS Build Status](https://api.travis-ci.org/gohugoio/hugo.svg?branch=master&label=Linux+and+macOS+build "Linux and macOS Build Status")](https://travis-ci.org/gohugoio/hugo)]
+[![Linux and macOS Build Status](https://api.travis-ci.org/gohugoio/hugo.svg?branch=master&label=Linux+and+macOS+build "Linux and macOS Build Status")](https://travis-ci.org/gohugoio/hugo)
diff --git a/README.md b/README.md
index 5c92b921..ea03ae28 100644
--- a/README.md
+++ b/README.md
@@ -14,3 +14,2 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![Linux and macOS Build Status](https://api.travis-ci.org/gohugoio/hugo.svg?branch=master&label=Linux+and+macOS+build "Linux and macOS Build Status")](https://travis-ci.org/gohugoio/hugo)
-[![Windows Build Status](https://ci.appveyor.com/api/projects/status/a5mr220vsd091kua?svg=true
-&label=Windows+build "Windows Build Status")](https://ci.appveyor.com/project/bep/hugo/branch/master)
+[![Linux and macOS Build Status](https://api.travis-ci.org/gohugoio/hugo.svg?branch=master&label=Linux+and+macOS+build "Linux and macOS Build Status")](https://travis-ci.org/gohugoio/hugo)]
+[![Windows Build Status](https://ci.appveyor.com/api/projects/status/a5mr220vsd091kua?svg=true&label=Windows+build "Windows Build Status")](https://ci.appveyor.com/project/bep/hugo/branch/master)
diff --git a/README.md b/README.md
index 380cbf4e..5c92b921 100644
--- a/README.md
+++ b/README.md
@@ -15 +15,2 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![Windows Build Status](https://ci.appveyor.com/api/projects/status/n2mo912b8s2505e8/branch/master?svg=true&label=Windows+build "Windows Build Status")](https://ci.appveyor.com/project/gohugoio/hugo/branch/master)
+[![Windows Build Status](https://ci.appveyor.com/api/projects/status/a5mr220vsd091kua?svg=true
+&label=Windows+build "Windows Build Status")](https://ci.appveyor.com/project/bep/hugo/branch/master)
diff --git a/README.md b/README.md
index 9c9ab985..380cbf4e 100644
--- a/README.md
+++ b/README.md
@@ -1 +1 @@
-![Hugo](https://raw.githubusercontent.com/spf13/hugo/master/docs/static/img/hugo-logo.png)
+![Hugo](https://raw.githubusercontent.com/gohugoio/hugo/master/docs/static/img/hugo-logo.png)
@@ -3 +3 @@
-A Fast and Flexible Static Site Generator built with love by [spf13](http://spf13.com/) and [friends](https://github.com/spf13/hugo/graphs/contributors) in [Go][].
+A Fast and Flexible Static Site Generator built with love by [spf13](http://spf13.com/) and [friends](https://github.com/gohugoio/hugo/graphs/contributors) in [Go][].
@@ -7 +7 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[Developer Chat (no support)](https://gitter.im/spf13/hugo) |
+[Developer Chat (no support)](https://gitter.im/gohugoio/hugo) |
@@ -13,5 +13,5 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![GoDoc](https://godoc.org/github.com/spf13/hugo?status.svg)](https://godoc.org/github.com/spf13/hugo)
-[![Linux and macOS Build Status](https://api.travis-ci.org/spf13/hugo.svg?branch=master&label=Linux+and+macOS+build "Linux and macOS Build Status")](https://travis-ci.org/spf13/hugo)
-[![Windows Build Status](https://ci.appveyor.com/api/projects/status/n2mo912b8s2505e8/branch/master?svg=true&label=Windows+build "Windows Build Status")](https://ci.appveyor.com/project/spf13/hugo/branch/master)
-[![Dev chat at https://gitter.im/spf13/hugo](https://img.shields.io/badge/gitter-developer_chat-46bc99.svg)](https://gitter.im/spf13/hugo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
-[![Go Report Card](https://goreportcard.com/badge/github.com/spf13/hugo)](https://goreportcard.com/report/github.com/spf13/hugo)
+[![GoDoc](https://godoc.org/github.com/gohugoio/hugo?status.svg)](https://godoc.org/github.com/gohugoio/hugo)
+[![Linux and macOS Build Status](https://api.travis-ci.org/gohugoio/hugo.svg?branch=master&label=Linux+and+macOS+build "Linux and macOS Build Status")](https://travis-ci.org/gohugoio/hugo)
+[![Windows Build Status](https://ci.appveyor.com/api/projects/status/n2mo912b8s2505e8/branch/master?svg=true&label=Windows+build "Windows Build Status")](https://ci.appveyor.com/project/gohugoio/hugo/branch/master)
+[![Dev chat at https://gitter.im/gohugoio/hugo](https://img.shields.io/badge/gitter-developer_chat-46bc99.svg)](https://gitter.im/gohugoio/hugo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
+[![Go Report Card](https://goreportcard.com/badge/github.com/gohugoio/hugo)](https://goreportcard.com/report/github.com/gohugoio/hugo)
@@ -47 +47 @@ The Hugo binaries have no external dependencies.
-To contribute to the Hugo source code or documentation, you should [fork the Hugo GitHub project](https://github.com/spf13/hugo#fork-destination-box) and clone it to your local machine.
+To contribute to the Hugo source code or documentation, you should [fork the Hugo GitHub project](https://github.com/gohugoio/hugo#fork-destination-box) and clone it to your local machine.
@@ -60 +60 @@ Add Hugo and its package dependencies to your go `src` directory.
-    go get -v github.com/spf13/hugo
+    go get -v github.com/gohugoio/hugo
@@ -66 +66 @@ To update Hugo’s dependencies, use `go get` with the `-u` option.
-    go get -u -v github.com/spf13/hugo
+    go get -u -v github.com/gohugoio/hugo
@@ -77 +77 @@ helping to manage issues, etc.
-The Hugo community and maintainers are [very active](https://github.com/spf13/hugo/pulse/monthly) and helpful, and the project benefits greatly from this activity.
+The Hugo community and maintainers are [very active](https://github.com/gohugoio/hugo/pulse/monthly) and helpful, and the project benefits greatly from this activity.
diff --git a/README.md b/README.md
index a49a806b..9c9ab985 100644
--- a/README.md
+++ b/README.md
@@ -82 +82 @@ We have an active [discussion forum](http://discuss.gohugo.io) where users and d
-Please don't use the Github issue tracker to ask questions.
+Please don't use the GitHub issue tracker to ask questions.
@@ -87 +87 @@ If you believe you have found a defect in Hugo or its documentation, use
-the Github issue tracker to report the problem to the Hugo maintainers.
+the GitHub issue tracker to report the problem to the Hugo maintainers.
diff --git a/README.md b/README.md
index 44dfb10f..a49a806b 100644
--- a/README.md
+++ b/README.md
@@ -14 +14 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![Linux and OS X Build Status](https://api.travis-ci.org/spf13/hugo.svg?branch=master&label=Linux+and+OS+X+build "Linux and OS X Build Status")](https://travis-ci.org/spf13/hugo)
+[![Linux and macOS Build Status](https://api.travis-ci.org/spf13/hugo.svg?branch=master&label=Linux+and+macOS+build "Linux and macOS Build Status")](https://travis-ci.org/spf13/hugo)
@@ -36 +36 @@ Hugo is designed to work well for any kind of website including blogs, tumbles a
-Currently, we provide pre-built Hugo binaries for Windows, Linux, FreeBSD, NetBSD and OS&nbsp;X (Darwin) and [Android](https://gist.github.com/bep/a0d8a26cf6b4f8bc992729b8e50b480b) for x64, i386 and ARM architectures.
+Currently, we provide pre-built Hugo binaries for Windows, Linux, FreeBSD, NetBSD and macOS (Darwin) and [Android](https://gist.github.com/bep/a0d8a26cf6b4f8bc992729b8e50b480b) for x64, i386 and ARM architectures.
diff --git a/README.md b/README.md
index 70b71ee4..44dfb10f 100644
--- a/README.md
+++ b/README.md
@@ -36 +36 @@ Hugo is designed to work well for any kind of website including blogs, tumbles a
-Currently, we provide pre-built Hugo binaries for Windows, Linux, FreeBSD, NetBSD and OS&nbsp;X (Darwin) for x64, i386 and ARM architectures.
+Currently, we provide pre-built Hugo binaries for Windows, Linux, FreeBSD, NetBSD and OS&nbsp;X (Darwin) and [Android](https://gist.github.com/bep/a0d8a26cf6b4f8bc992729b8e50b480b) for x64, i386 and ARM architectures.
diff --git a/README.md b/README.md
index c9a49753..70b71ee4 100644
--- a/README.md
+++ b/README.md
@@ -11 +11 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[Twitter](http://twitter.com/spf13)
+[Twitter](http://twitter.com/gohugoio)
diff --git a/README.md b/README.md
index 752ba4d9..c9a49753 100644
--- a/README.md
+++ b/README.md
@@ -77,3 +77 @@ helping to manage issues, etc.
-The Hugo community and maintainers are very active and helpful, and the project benefits greatly from this activity.
-
-[![Throughput Graph](https://graphs.waffle.io/spf13/hugo/throughput.svg)](https://waffle.io/spf13/hugo/metrics)
+The Hugo community and maintainers are [very active](https://github.com/spf13/hugo/pulse/monthly) and helpful, and the project benefits greatly from this activity.
diff --git a/README.md b/README.md
index 39938fb3..752ba4d9 100644
--- a/README.md
+++ b/README.md
@@ -7 +7 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[Dev Chat](https://gitter.im/spf13/hugo) |
+[Developer Chat (no support)](https://gitter.im/spf13/hugo) |
@@ -16 +16 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![Dev chat at https://gitter.im/spf13/hugo](https://img.shields.io/badge/gitter-dev_chat-46bc99.svg)](https://gitter.im/spf13/hugo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
+[![Dev chat at https://gitter.im/spf13/hugo](https://img.shields.io/badge/gitter-developer_chat-46bc99.svg)](https://gitter.im/spf13/hugo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
diff --git a/README.md b/README.md
index b223d58f..39938fb3 100644
--- a/README.md
+++ b/README.md
@@ -106 +105,0 @@ For a complete guide to contributing code to Hugo, see the [Contribution Guide](
-[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/spf13/hugo/trend.png)](https://bitdeli.com/free "Bitdeli Badge")
diff --git a/README.md b/README.md
index 536637fa..b223d58f 100644
--- a/README.md
+++ b/README.md
@@ -9,0 +10 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
+[Contribution Guide](CONTRIBUTING.md) |
@@ -55,36 +55,0 @@ Use the [installation instructions in the Hugo documentation](https://gohugo.io/
-### Clone the Hugo Project (Contributor)
-
-1. Make sure your local environment has the following software installed:
-
-    * [Git](https://git-scm.com/)
-    * [Go][] 1.5+
-
-2. [Fork the Hugo project on GitHub](https://github.com/spf13/hugo).
-
-3. Clone your fork:
-
-        git clone https://github.com/YOURNAME/hugo
-
-4. Change into the `hugo` directory:
-
-        cd hugo
-
-5. Install the Hugo project’s package dependencies:
-
-        go get -u -v github.com/spf13/hugo
-
-6. Install the test dependencies (needed if you want to run tests):
-
-        go get -v -t -d ./...
-
-7. Use a symbolic link to add your locally cloned Hugo repository to your `$GOPATH`, assuming you prefer doing development work outside of `$GOPATH`:
-
-    ```bash
-    rm -rf "$GOPATH/src/github.com/spf13/hugo"
-    ln -s `pwd` "$GOPATH/src/github.com/spf13/hugo"
-    ```
-
-    Go expects all of your libraries to be found in`$GOPATH`.
-
-You can also find a [detailed guide](https://www.gohugo.io/tutorials/how-to-contribute-to-hugo/) in our documentation.
-
@@ -103,7 +68 @@ To update Hugo’s dependencies, use `go get` with the `-u` option.
-## Contribute to Hugo
-
-We welcome contributions to Hugo of any kind including documentation, themes, organization, tutorials, blog posts, bug reports, issues, feature requests, feature implementation, pull requests, answering questions on the forum, helping to manage issues, etc.
-
-The Hugo community and maintainers are very active and helpful and the project benefits greatly from this activity.
-
-[![Throughput Graph](https://graphs.waffle.io/spf13/hugo/throughput.svg)](https://waffle.io/spf13/hugo/metrics)
+## Contributing to Hugo
@@ -111 +70 @@ The Hugo community and maintainers are very active and helpful and the project b
-If you have any questions about how to contribute or what to contribute, please ask on the [forum](https://discuss.gohugo.io).
+For a complete guide to contributing to Hugo, see the [Contribution Guide](CONTRIBUTING.md).
@@ -113 +72,4 @@ If you have any questions about how to contribute or what to contribute, please
-## Code Contribution Guideline
+We welcome contributions to Hugo of any kind including documentation, themes,
+organization, tutorials, blog posts, bug reports, issues, feature requests,
+feature implementations, pull requests, answering questions on the forum,
+helping to manage issues, etc.
@@ -115,2 +77 @@ If you have any questions about how to contribute or what to contribute, please
-We welcome your contributions.
-To make the process as seamless as possible, we ask for the following:
+The Hugo community and maintainers are very active and helpful, and the project benefits greatly from this activity.
@@ -118,20 +79 @@ To make the process as seamless as possible, we ask for the following:
-* Go ahead and fork the project and make your changes. We encourage pull requests to discuss code changes.
-* When you’re ready to create a pull request, be sure to:
-     * Sign the [CLA](https://cla-assistant.io/spf13/hugo)
-     * Have test cases for the new code. If you have questions about how to do it, please ask in your pull request.
-     * Run `go fmt`
-     * Squash your commits into a single commit. `git rebase -i`. It’s okay to force update your pull request.
-     * **Write a good commit message.** This [blog article](http://chris.beams.io/posts/git-commit) is a good resource for learning how to write good commit messages, the most important part being that each commit message should have a title/subject in imperative mood starting with a capital letter and no trailing period: *"Return error on wrong use of the Paginator"*, **NOT** *"returning some error."* Also, if your commit references one or more GitHub issues, always end your commit message body with *See #1234* or *Fixes #1234*. Replace *1234* with the GitHub issue ID. The last example will close the issue when the commit is merged into *master*. Sometimes it makes sense to prefix the commit message with the packagename (or docs folder) all lowercased ending with a colon. That is fine, but the rest of the rules above apply. So it is "tpl: Add emojify template func", not "tpl: add emojify template func.", and "docs: Document emoji", not "doc: document emoji."
-     * Make sure `go test ./...` passes, and `go build` completes. Our [Travis CI loop](https://travis-ci.org/spf13/hugo) (Linux and OS&nbsp;X) and [AppVeyor](https://ci.appveyor.com/project/spf13/hugo/branch/master) (Windows) will catch most things that are missing.
-
-### Build Hugo with Your Changes
-
-```bash
-cd /path/to/hugo
-go build -o hugo main.go
-mv hugo /usr/local/bin/
-```
-
-### Add Compile Information to Hugo
-
-To add compile information to Hugo, replace the `go build` command with the following *(replace `/path/to/hugo` with the actual path)*:
+[![Throughput Graph](https://graphs.waffle.io/spf13/hugo/throughput.svg)](https://waffle.io/spf13/hugo/metrics)
@@ -139 +81 @@ To add compile information to Hugo, replace the `go build` command with the foll
-    go build -ldflags "-X /path/to/hugo/hugolib.CommitHash=`git rev-parse --short HEAD 2>/dev/null` -X github.com/spf13/hugo/hugolib.BuildDate=`date +%FT%T%z`"
+### Asking Support Questions
@@ -141 +83,2 @@ To add compile information to Hugo, replace the `go build` command with the foll
-This will result in `hugo version` output that looks similar to:
+We have an active [discussion forum](http://discuss.gohugo.io) where users and developers can ask questions.
+Please don't use the Github issue tracker to ask questions.
@@ -143 +86 @@ This will result in `hugo version` output that looks similar to:
-    Hugo Static Site Generator v0.13-DEV-8042E77 buildDate: 2014-12-25T03:25:57-07:00
+### Reporting Issues
@@ -145 +88,4 @@ This will result in `hugo version` output that looks similar to:
-Alternatively, just run `make` &mdash; all the “magic” above is already in the `Makefile`.  :wink:
+If you believe you have found a defect in Hugo or its documentation, use
+the Github issue tracker to report the problem to the Hugo maintainers.
+If you're not sure if it's a bug or not, start by asking in the [discussion forum](http://discuss.gohugo.io).
+When reporting the issue, please provide the version of Hugo in use (`hugo version`).
@@ -147 +93 @@ Alternatively, just run `make` &mdash; all the “magic” above is already in t
-### Run Hugo
+### Submitting Patches
@@ -149,5 +95,7 @@ Alternatively, just run `make` &mdash; all the “magic” above is already in t
-```bash
-cd /path/to/hugo
-go install github.com/spf13/hugo/hugolib
-go run main.go
-```
+The Hugo project welcomes all contributors and contributions regardless of skill or experience level.
+If you are interested in helping with the project, we will help you with your contribution.
+Hugo is a very active project with many contributions happening daily.
+Because we want to create the best possible product for our users and the best contribution experience for our developers,
+we have a set of guidelines which ensure that all contributions are acceptable.
+The guidelines are not intended as a filter or barrier to participation.
+If you are unfamiliar with the contribution process, the Hugo team will help you and teach you how to bring your contribution in accordance with the guidelines.
@@ -155 +103 @@ go run main.go
-**Complete documentation is available at [Hugo Documentation][].**
+For a complete guide to contributing code to Hugo, see the [Contribution Guide](CONTRIBUTING.md).
diff --git a/README.md b/README.md
index 55f6d243..536637fa 100644
--- a/README.md
+++ b/README.md
@@ -13,2 +13,2 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![Travis CI status](https://api.travis-ci.org/spf13/hugo.svg?branch=master "Travis CI status")](https://travis-ci.org/spf13/hugo)
-[![Appveyor status](https://ci.appveyor.com/api/projects/status/n2mo912b8s2505e8/branch/master?svg=true "Appveyor status")](https://ci.appveyor.com/project/spf13/hugo/branch/master)
+[![Linux and OS X Build Status](https://api.travis-ci.org/spf13/hugo.svg?branch=master&label=Linux+and+OS+X+build "Linux and OS X Build Status")](https://travis-ci.org/spf13/hugo)
+[![Windows Build Status](https://ci.appveyor.com/api/projects/status/n2mo912b8s2505e8/branch/master?svg=true&label=Windows+build "Windows Build Status")](https://ci.appveyor.com/project/spf13/hugo/branch/master)
diff --git a/README.md b/README.md
index 1ea3f1b3..55f6d243 100644
--- a/README.md
+++ b/README.md
@@ -11,0 +12 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
+[![GoDoc](https://godoc.org/github.com/spf13/hugo?status.svg)](https://godoc.org/github.com/spf13/hugo)
diff --git a/README.md b/README.md
index 75e9631d..1ea3f1b3 100644
--- a/README.md
+++ b/README.md
@@ -75 +75,5 @@ Use the [installation instructions in the Hugo documentation](https://gohugo.io/
-6. Use a symbolic link to add your locally cloned Hugo repository to your `$GOPATH`, assuming you prefer doing development work outside of `$GOPATH`:
+6. Install the test dependencies (needed if you want to run tests):
+
+        go get -v -t -d ./...
+
+7. Use a symbolic link to add your locally cloned Hugo repository to your `$GOPATH`, assuming you prefer doing development work outside of `$GOPATH`:
diff --git a/README.md b/README.md
index 755bb087..75e9631d 100644
--- a/README.md
+++ b/README.md
@@ -59 +58,0 @@ Use the [installation instructions in the Hugo documentation](https://gohugo.io/
-    * [Mercurial](https://www.mercurial-scm.org/)
diff --git a/README.md b/README.md
index 7680586b..755bb087 100644
--- a/README.md
+++ b/README.md
@@ -84,0 +85,2 @@ Use the [installation instructions in the Hugo documentation](https://gohugo.io/
+You can also find a [detailed guide](https://www.gohugo.io/tutorials/how-to-contribute-to-hugo/) in our documentation.
+
diff --git a/README.md b/README.md
index 9f2e5f8f..7680586b 100644
--- a/README.md
+++ b/README.md
@@ -5,2 +5,2 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[Website](http://gohugo.io) |
-[Forum](http://discuss.gohugo.io) |
+[Website](https://gohugo.io) |
+[Forum](https://discuss.gohugo.io) |
@@ -8,2 +8,2 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[Documentation](http://gohugo.io/overview/introduction/) |
-[Installation Guide](http://gohugo.io/overview/installing/) |
+[Documentation](https://gohugo.io/overview/introduction/) |
+[Installation Guide](https://gohugo.io/overview/installing/) |
@@ -52 +52 @@ Building the binaries is an easy task for an experienced `go` getter.
-Use the [installation instructions in the Hugo documentation](http://gohugo.io/overview/installing/).
+Use the [installation instructions in the Hugo documentation](https://gohugo.io/overview/installing/).
@@ -105 +105 @@ The Hugo community and maintainers are very active and helpful and the project b
-If you have any questions about how to contribute or what to contribute, please ask on the [forum](http://discuss.gohugo.io).
+If you have any questions about how to contribute or what to contribute, please ask on the [forum](https://discuss.gohugo.io).
diff --git a/README.md b/README.md
index 698c713c..9f2e5f8f 100644
--- a/README.md
+++ b/README.md
@@ -13 +12,0 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![wercker status](https://app.wercker.com/status/1a0de7d703ce3b80527f00f675e1eb32/s/master "wercker status")](https://app.wercker.com/project/bykey/1a0de7d703ce3b80527f00f675e1eb32)
diff --git a/README.md b/README.md
index 4db7098c..698c713c 100644
--- a/README.md
+++ b/README.md
@@ -17,2 +16,0 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![Codebeat](https://codebeat.co/badges/b2600d2e-bc76-4ff7-bd3b-7fd75d568697)](https://codebeat.co/projects/github-com-spf13-hugo)
-
diff --git a/README.md b/README.md
index 698c713c..4db7098c 100644
--- a/README.md
+++ b/README.md
@@ -16,0 +17,2 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
+[![Codebeat](https://codebeat.co/badges/b2600d2e-bc76-4ff7-bd3b-7fd75d568697)](https://codebeat.co/projects/github-com-spf13-hugo)
+
diff --git a/README.md b/README.md
index cf7132a5..698c713c 100644
--- a/README.md
+++ b/README.md
@@ -15,0 +16 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
+[![Go Report Card](https://goreportcard.com/badge/github.com/spf13/hugo)](https://goreportcard.com/report/github.com/spf13/hugo)
diff --git a/README.md b/README.md
index 2abeaa76..cf7132a5 100644
--- a/README.md
+++ b/README.md
@@ -15 +14,0 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![CircleCI status](https://circleci.com/gh/spf13/hugo.png?circle-token=:circle-token "CircleCI status")](https://circleci.com/gh/spf13/hugo)
diff --git a/README.md b/README.md
index d42c61d9..2abeaa76 100644
--- a/README.md
+++ b/README.md
@@ -119 +119 @@ To make the process as seamless as possible, we ask for the following:
-     * **Write a good commit message.** This [blog article](http://chris.beams.io/posts/git-commit) is a good resource for learning how to write good commit messages, the most important part being that each commit message should have a title/subject in imperative mood starting with a capital letter and no trailing period: *"Return error on wrong use of the Paginator"*, **NOT** *"returning some error."* Also, if your commit references one or more GitHub issues, always end your commit message body with *See #1234* or *Fixes #1234*. Replace *1234* with the GitHub issue ID. The last example will close the issue when the commit is merged into *master*.
+     * **Write a good commit message.** This [blog article](http://chris.beams.io/posts/git-commit) is a good resource for learning how to write good commit messages, the most important part being that each commit message should have a title/subject in imperative mood starting with a capital letter and no trailing period: *"Return error on wrong use of the Paginator"*, **NOT** *"returning some error."* Also, if your commit references one or more GitHub issues, always end your commit message body with *See #1234* or *Fixes #1234*. Replace *1234* with the GitHub issue ID. The last example will close the issue when the commit is merged into *master*. Sometimes it makes sense to prefix the commit message with the packagename (or docs folder) all lowercased ending with a colon. That is fine, but the rest of the rules above apply. So it is "tpl: Add emojify template func", not "tpl: add emojify template func.", and "docs: Document emoji", not "doc: document emoji."
diff --git a/README.md b/README.md
index 8527b3cd..d42c61d9 100644
--- a/README.md
+++ b/README.md
@@ -61 +61 @@ Use the [installation instructions in the Hugo documentation](http://gohugo.io/o
-    * [Go][] 1.4+
+    * [Go][] 1.5+
diff --git a/README.md b/README.md
index efd9b162..8527b3cd 100644
--- a/README.md
+++ b/README.md
@@ -7 +7 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[Chat](https://gitter.im/spf13/hugo) |
+[Dev Chat](https://gitter.im/spf13/hugo) |
diff --git a/README.md b/README.md
index 3e25bb3a..efd9b162 100644
--- a/README.md
+++ b/README.md
@@ -13 +13 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![wercker status](https://app.wercker.com/status/1a0de7d703ce3b80527f00f675e1eb32/m/master "wercker status")](https://app.wercker.com/project/bykey/1a0de7d703ce3b80527f00f675e1eb32)
+[![wercker status](https://app.wercker.com/status/1a0de7d703ce3b80527f00f675e1eb32/s/master "wercker status")](https://app.wercker.com/project/bykey/1a0de7d703ce3b80527f00f675e1eb32)
diff --git a/README.md b/README.md
index 3334c440..3e25bb3a 100644
--- a/README.md
+++ b/README.md
@@ -13 +13 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![wercker status](https://app.wercker.com/status/1a0de7d703ce3b80527f00f675e1eb32 "wercker status")](https://app.wercker.com/project/bykey/1a0de7d703ce3b80527f00f675e1eb32)
+[![wercker status](https://app.wercker.com/status/1a0de7d703ce3b80527f00f675e1eb32/m/master "wercker status")](https://app.wercker.com/project/bykey/1a0de7d703ce3b80527f00f675e1eb32)
diff --git a/README.md b/README.md
index 787153e1..3334c440 100644
--- a/README.md
+++ b/README.md
@@ -119 +119 @@ To make the process as seamless as possible, we ask for the following:
-     * **Write a good commit message.** This [blog article](http://chris.beams.io/posts/git-commit/) is a good resource for learning how to write good commit messages, the most important part being that each commit message should have a title/subject in imperative mood starting with a capital letter and no trailing period: *"Return error on wrong use of the Paginator"*, **NOT** *"returning some error."* Also, if your commit references one or more GitHub issues, always end your commit message body with *See #1234* or *Fixes #1234*. Replace *1234* with the GitHub issue ID. The last example will close the issue when the commit is merged into *master*.
+     * **Write a good commit message.** This [blog article](http://chris.beams.io/posts/git-commit) is a good resource for learning how to write good commit messages, the most important part being that each commit message should have a title/subject in imperative mood starting with a capital letter and no trailing period: *"Return error on wrong use of the Paginator"*, **NOT** *"returning some error."* Also, if your commit references one or more GitHub issues, always end your commit message body with *See #1234* or *Fixes #1234*. Replace *1234* with the GitHub issue ID. The last example will close the issue when the commit is merged into *master*.
diff --git a/README.md b/README.md
index 0e43774b..787153e1 100644
--- a/README.md
+++ b/README.md
@@ -12,4 +12,4 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![Travis CI status](https://api.travis-ci.org/spf13/hugo.svg?branch=master "Travis CI status")](https://travis-ci.org/spf13/hugo) 
-[![wercker status](https://app.wercker.com/status/1a0de7d703ce3b80527f00f675e1eb32 "wercker status")](https://app.wercker.com/project/bykey/1a0de7d703ce3b80527f00f675e1eb32) 
-[![Appveyor status](https://ci.appveyor.com/api/projects/status/n2mo912b8s2505e8/branch/master?svg=true "Appveyor status")](https://ci.appveyor.com/project/spf13/hugo/branch/master) 
-[![CircleCI status](https://circleci.com/gh/spf13/hugo.png?circle-token=:circle-token "CircleCI status")](https://circleci.com/gh/spf13/hugo) 
+[![Travis CI status](https://api.travis-ci.org/spf13/hugo.svg?branch=master "Travis CI status")](https://travis-ci.org/spf13/hugo)
+[![wercker status](https://app.wercker.com/status/1a0de7d703ce3b80527f00f675e1eb32 "wercker status")](https://app.wercker.com/project/bykey/1a0de7d703ce3b80527f00f675e1eb32)
+[![Appveyor status](https://ci.appveyor.com/api/projects/status/n2mo912b8s2505e8/branch/master?svg=true "Appveyor status")](https://ci.appveyor.com/project/spf13/hugo/branch/master)
+[![CircleCI status](https://circleci.com/gh/spf13/hugo.png?circle-token=:circle-token "CircleCI status")](https://circleci.com/gh/spf13/hugo)
@@ -48 +48 @@ To contribute to the Hugo source code or documentation, you should [fork the Hug
-Finally, you can install the Hugo source code with `go`, build the binaries yourself, and run Hugo that way. 
+Finally, you can install the Hugo source code with `go`, build the binaries yourself, and run Hugo that way.
@@ -100 +100 @@ To update Hugo’s dependencies, use `go get` with the `-u` option.
-We welcome contributions to Hugo of any kind including documentation, themes, organization, tutorials, blog posts, bug reports, issues, feature requests, feature implementation, pull requests, answering questions on the forum, helping to manage issues, etc. 
+We welcome contributions to Hugo of any kind including documentation, themes, organization, tutorials, blog posts, bug reports, issues, feature requests, feature implementation, pull requests, answering questions on the forum, helping to manage issues, etc.
@@ -110 +110 @@ If you have any questions about how to contribute or what to contribute, please
-We welcome your contributions. 
+We welcome your contributions.
@@ -134 +134 @@ To add compile information to Hugo, replace the `go build` command with the foll
-    go build -ldflags "-X /path/to/hugo/hugolib.CommitHash `git rev-parse --short HEAD 2>/dev/null` -X github.com/spf13/hugo/hugolib.BuildDate `date +%FT%T%z`"
+    go build -ldflags "-X /path/to/hugo/hugolib.CommitHash=`git rev-parse --short HEAD 2>/dev/null` -X github.com/spf13/hugo/hugolib.BuildDate=`date +%FT%T%z`"
diff --git a/README.md b/README.md
index f69c7a03..0e43774b 100644
--- a/README.md
+++ b/README.md
@@ -79 +79 @@ Use the [installation instructions in the Hugo documentation](http://gohugo.io/o
-    ``` bash
+    ```bash
@@ -106 +106 @@ The Hugo community and maintainers are very active and helpful and the project b
-If you have any questions about how to contribute or what to contribute please ask on the [forum](http://discuss.gohugo.io).
+If you have any questions about how to contribute or what to contribute, please ask on the [forum](http://discuss.gohugo.io).
@@ -119,2 +119,2 @@ To make the process as seamless as possible, we ask for the following:
-     * This [blog article](http://chris.beams.io/posts/git-commit/) is a good resource for learning how to write good commit messages, the most important part being that each commit message should have a title/subject in imperative mood starting with a capital letter and no trailing period: *"Return error on wrong use of the Paginator"*, **NOT** *"returning some error."* Also, if your commit references one or more GitHub issues, always end your commit message body with *See #1234* or *Fixes #1234*. Replace *1234* with the GitHub issue ID. The last example will close the issue when the commit is merged into *master*.
-     * Make sure `go test ./...` passes, and `go build` completes. Our [Travis CI loop](https://travis-ci.org/spf13/hugo) (Linux) and [AppVeyor](https://ci.appveyor.com/project/spf13/hugo/branch/master) (Windows) will catch most things that are missing.
+     * **Write a good commit message.** This [blog article](http://chris.beams.io/posts/git-commit/) is a good resource for learning how to write good commit messages, the most important part being that each commit message should have a title/subject in imperative mood starting with a capital letter and no trailing period: *"Return error on wrong use of the Paginator"*, **NOT** *"returning some error."* Also, if your commit references one or more GitHub issues, always end your commit message body with *See #1234* or *Fixes #1234*. Replace *1234* with the GitHub issue ID. The last example will close the issue when the commit is merged into *master*.
+     * Make sure `go test ./...` passes, and `go build` completes. Our [Travis CI loop](https://travis-ci.org/spf13/hugo) (Linux and OS&nbsp;X) and [AppVeyor](https://ci.appveyor.com/project/spf13/hugo/branch/master) (Windows) will catch most things that are missing.
@@ -124 +124 @@ To make the process as seamless as possible, we ask for the following:
-``` bash
+```bash
@@ -144 +144 @@ Alternatively, just run `make` &mdash; all the “magic” above is already in t
-``` bash
+```bash
diff --git a/README.md b/README.md
index 2b49c13d..f69c7a03 100644
--- a/README.md
+++ b/README.md
@@ -12 +12 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![Travis CI status](https://travis-ci.org/spf13/hugo.png "Travis CI status")](https://travis-ci.org/spf13/hugo) 
+[![Travis CI status](https://api.travis-ci.org/spf13/hugo.svg?branch=master "Travis CI status")](https://travis-ci.org/spf13/hugo) 
diff --git a/README.md b/README.md
index 1d4d17b9..2b49c13d 100644
--- a/README.md
+++ b/README.md
@@ -16 +16 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![Join the chat at https://gitter.im/spf13/hugo](https://badges.gitter.im/Dev%20Chat.svg)](https://gitter.im/spf13/hugo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
+[![Dev chat at https://gitter.im/spf13/hugo](https://img.shields.io/badge/gitter-dev_chat-46bc99.svg)](https://gitter.im/spf13/hugo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
diff --git a/README.md b/README.md
index 7c0b2fbd..1d4d17b9 100644
--- a/README.md
+++ b/README.md
@@ -16 +16 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![Join the chat at https://gitter.im/spf13/hugo](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/spf13/hugo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
+[![Join the chat at https://gitter.im/spf13/hugo](https://badges.gitter.im/Dev%20Chat.svg)](https://gitter.im/spf13/hugo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
diff --git a/README.md b/README.md
index fbc32cac..7c0b2fbd 100644
--- a/README.md
+++ b/README.md
@@ -156 +156 @@ go run main.go
-[Hugo Documentation]: https://gohugo.io/
+[Hugo Documentation]: https://gohugo.io/overview/introduction/
diff --git a/README.md b/README.md
index ef9eff6d..fbc32cac 100644
--- a/README.md
+++ b/README.md
@@ -119 +119 @@ To make the process as seamless as possible, we ask for the following:
-     * This [blog article](http://chris.beams.io/posts/git-commit/) is a good resource for learning how to write good commit messages, the most important part being that each commit message should have a title/subject in imperative mode without trailing period: *"Return error on wrong use of the Paginator"*, **NOT** *"Returning some error."* Also, if your commit references one or more GitHub issues, always end your commit message body with *See #1234* or *Fixes #1234*. Replace *1234* with the GitHub issue ID. The last example will close the issue when the commit is merged into *master*.
+     * This [blog article](http://chris.beams.io/posts/git-commit/) is a good resource for learning how to write good commit messages, the most important part being that each commit message should have a title/subject in imperative mood starting with a capital letter and no trailing period: *"Return error on wrong use of the Paginator"*, **NOT** *"returning some error."* Also, if your commit references one or more GitHub issues, always end your commit message body with *See #1234* or *Fixes #1234*. Replace *1234* with the GitHub issue ID. The last example will close the issue when the commit is merged into *master*.
diff --git a/README.md b/README.md
index 75f389c8..ef9eff6d 100644
--- a/README.md
+++ b/README.md
@@ -20 +20 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-Hugo is a static site generator written in [Go][].
+Hugo is a static HTML and CSS website generator written in [Go][].
@@ -31 +31 @@ A good rule of thumb is that each piece of content renders in around 1 milliseco
-Hugo is meant to work well for any kind of website including blogs, tumbles and docs.
+Hugo is designed to work well for any kind of website including blogs, tumbles and docs.
diff --git a/README.md b/README.md
index 44c7e76d..75f389c8 100644
--- a/README.md
+++ b/README.md
@@ -100,0 +101 @@ We welcome contributions to Hugo of any kind including documentation, themes, or
+
diff --git a/README.md b/README.md
index dd5b90a1..44c7e76d 100644
--- a/README.md
+++ b/README.md
@@ -15 +15 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![CircleCI status](https://circleci.com/gh/spf13/hugo.png?circle-token=:circle-token "CircleCI status")(https://circleci.com/gh/spf13/hugo) 
+[![CircleCI status](https://circleci.com/gh/spf13/hugo.png?circle-token=:circle-token "CircleCI status")](https://circleci.com/gh/spf13/hugo) 
diff --git a/README.md b/README.md
index d5e0f143..dd5b90a1 100644
--- a/README.md
+++ b/README.md
@@ -12 +12 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![Build Status](https://travis-ci.org/spf13/hugo.png)](https://travis-ci.org/spf13/hugo) 
+[![Travis CI status](https://travis-ci.org/spf13/hugo.png "Travis CI status")](https://travis-ci.org/spf13/hugo) 
@@ -14 +14,2 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![Build status](https://ci.appveyor.com/api/projects/status/n2mo912b8s2505e8/branch/master?svg=true)](https://ci.appveyor.com/project/spf13/hugo/branch/master) 
+[![Appveyor status](https://ci.appveyor.com/api/projects/status/n2mo912b8s2505e8/branch/master?svg=true "Appveyor status")](https://ci.appveyor.com/project/spf13/hugo/branch/master) 
+[![CircleCI status](https://circleci.com/gh/spf13/hugo.png?circle-token=:circle-token "CircleCI status")(https://circleci.com/gh/spf13/hugo) 
diff --git a/README.md b/README.md
index 71714460..d5e0f143 100644
--- a/README.md
+++ b/README.md
@@ -62 +62 @@ Use the [installation instructions in the Hugo documentation](http://gohugo.io/o
-2. [Fork the Hugo project on GitHub](https://github.com/spf13/hugo#fork-destination-box).
+2. [Fork the Hugo project on GitHub](https://github.com/spf13/hugo).
diff --git a/README.md b/README.md
index 5999a9d1..71714460 100644
--- a/README.md
+++ b/README.md
@@ -97 +97 @@ To update Hugo’s dependencies, use `go get` with the `-u` option.
-## Contributing to Hugo
+## Contribute to Hugo
@@ -120 +120 @@ To make the process as seamless as possible, we ask for the following:
-### Building Hugo with Your Changes
+### Build Hugo with Your Changes
@@ -128 +128 @@ mv hugo /usr/local/bin/
-### Adding Compile Information to Hugo
+### Add Compile Information to Hugo
@@ -140 +140 @@ Alternatively, just run `make` &mdash; all the “magic” above is already in t
-### Running Hugo
+### Run Hugo
diff --git a/README.md b/README.md
index 189d6e2a..5999a9d1 100644
--- a/README.md
+++ b/README.md
@@ -130,7 +130 @@ mv hugo /usr/local/bin/
-When Hugo is built using the above steps, the `version` sub-command will include the `mdate` of the Hugo executable, similar to the following:
-
-    Hugo Static Site Generator v0.13-DEV buildDate: 2014-12-24T04:46:03-07:00
-
-Instead, it is possible to have the `version` sub-command return information about the git commit used and time of compilation using `build` flags.
-
-To do this, replace the `go build` command with the following *(replace `/path/to/hugo` with the actual path)*:
+To add compile information to Hugo, replace the `go build` command with the following *(replace `/path/to/hugo` with the actual path)*:
diff --git a/README.md b/README.md
index 060c0afd..189d6e2a 100644
--- a/README.md
+++ b/README.md
@@ -12 +12,4 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![Build Status](https://travis-ci.org/spf13/hugo.png)](https://travis-ci.org/spf13/hugo) [![wercker status](https://app.wercker.com/status/1a0de7d703ce3b80527f00f675e1eb32 "wercker status")](https://app.wercker.com/project/bykey/1a0de7d703ce3b80527f00f675e1eb32) [![Build status](https://ci.appveyor.com/api/projects/status/n2mo912b8s2505e8/branch/master?svg=true)](https://ci.appveyor.com/project/spf13/hugo/branch/master) [![Join the chat at https://gitter.im/spf13/hugo](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/spf13/hugo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
+[![Build Status](https://travis-ci.org/spf13/hugo.png)](https://travis-ci.org/spf13/hugo) 
+[![wercker status](https://app.wercker.com/status/1a0de7d703ce3b80527f00f675e1eb32 "wercker status")](https://app.wercker.com/project/bykey/1a0de7d703ce3b80527f00f675e1eb32) 
+[![Build status](https://ci.appveyor.com/api/projects/status/n2mo912b8s2505e8/branch/master?svg=true)](https://ci.appveyor.com/project/spf13/hugo/branch/master) 
+[![Join the chat at https://gitter.im/spf13/hugo](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/spf13/hugo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
@@ -16 +19,3 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-Hugo is a static site generator written in [Go][]. It is optimized for speed, easy use and configurability. Hugo takes a directory with content and templates and renders them into a full HTML website.
+Hugo is a static site generator written in [Go][].
+It is optimized for speed, easy use and configurability.
+Hugo takes a directory with content and templates and renders them into a full HTML website.
@@ -18 +23,3 @@ Hugo is a static site generator written in [Go][]. It is optimized for speed, ea
-Hugo relies on Markdown files with front matter for meta data. And you can run Hugo from any directory. This works well for shared hosts and other systems where you don’t have a privileged account.
+Hugo relies on Markdown files with front matter for meta data.
+And you can run Hugo from any directory.
+This works well for shared hosts and other systems where you don’t have a privileged account.
@@ -20 +27,2 @@ Hugo relies on Markdown files with front matter for meta data. And you can run H
-Hugo renders a typical website of moderate size in a fraction of a second. A good rule of thumb is that each piece of content renders in around 1 millisecond.
+Hugo renders a typical website of moderate size in a fraction of a second.
+A good rule of thumb is that each piece of content renders in around 1 millisecond.
@@ -30 +38 @@ Hugo may also be compiled from source wherever the Go compiler tool chain can ru
-**Complete documentation is available at [Hugo Documentation](http://gohugo.io/).**
+**Complete documentation is available at [Hugo Documentation][].**
@@ -34 +42,2 @@ Hugo may also be compiled from source wherever the Go compiler tool chain can ru
-If you want to use Hugo as your site generator, simply install the Hugo binaries. The Hugo binaries have no external dependencies.
+If you want to use Hugo as your site generator, simply install the Hugo binaries.
+The Hugo binaries have no external dependencies.
@@ -36 +45 @@ If you want to use Hugo as your site generator, simply install the Hugo binaries
-To contribute to the Hugo source code or documentation, you should fork the Hugo GitHub project and clone it to your local machine.
+To contribute to the Hugo source code or documentation, you should [fork the Hugo GitHub project](https://github.com/spf13/hugo#fork-destination-box) and clone it to your local machine.
@@ -38 +47,2 @@ To contribute to the Hugo source code or documentation, you should fork the Hugo
-Finally, you can install the Hugo source code with `go`, build the binaries yourself, and run Hugo that way. Building the binaries is an easy task for an experienced `go` getter.
+Finally, you can install the Hugo source code with `go`, build the binaries yourself, and run Hugo that way. 
+Building the binaries is an easy task for an experienced `go` getter.
@@ -48,2 +58,2 @@ Use the [installation instructions in the Hugo documentation](http://gohugo.io/o
-    * [Git](http://git-scm.com/)
-    * [Mercurial](http://mercurial.selenic.com/)
+    * [Git](https://git-scm.com/)
+    * [Mercurial](https://www.mercurial-scm.org/)
@@ -52 +62 @@ Use the [installation instructions in the Hugo documentation](http://gohugo.io/o
-2. Fork the [Hugo project on GitHub](https://github.com/spf13/hugo).
+2. [Fork the Hugo project on GitHub](https://github.com/spf13/hugo#fork-destination-box).
@@ -68,2 +78,4 @@ Use the [installation instructions in the Hugo documentation](http://gohugo.io/o
-        rm -rf "$GOPATH/src/github.com/spf13/hugo"
-        ln -s `pwd` "$GOPATH/src/github.com/spf13/hugo"
+    ``` bash
+    rm -rf "$GOPATH/src/github.com/spf13/hugo"
+    ln -s `pwd` "$GOPATH/src/github.com/spf13/hugo"
+    ```
@@ -87 +99,2 @@ To update Hugo’s dependencies, use `go get` with the `-u` option.
-We welcome contributions to Hugo of any kind including documentation, themes, organization, tutorials, blog posts, bug reports, issues, feature requests, feature implementation, pull requests, answering questions on the forum, helping to manage issues, etc. The Hugo community and maintainers are very active and helpful and the project benefits greatly from this activity.
+We welcome contributions to Hugo of any kind including documentation, themes, organization, tutorials, blog posts, bug reports, issues, feature requests, feature implementation, pull requests, answering questions on the forum, helping to manage issues, etc. 
+The Hugo community and maintainers are very active and helpful and the project benefits greatly from this activity.
@@ -91 +104 @@ We welcome contributions to Hugo of any kind including documentation, themes, or
-If you have any questions about how to contribute or what to contribute please ask on the [forum](http://discuss.gohugo.io)
+If you have any questions about how to contribute or what to contribute please ask on the [forum](http://discuss.gohugo.io).
@@ -95 +108,2 @@ If you have any questions about how to contribute or what to contribute please a
-We welcome your contributions. To make the process as seamless as possible, we ask for the following:
+We welcome your contributions. 
+To make the process as seamless as possible, we ask for the following:
@@ -108,3 +122,5 @@ We welcome your contributions. To make the process as seamless as possible, we a
-    cd /path/to/hugo
-    go build -o hugo main.go
-    mv hugo /usr/local/bin/
+``` bash
+cd /path/to/hugo
+go build -o hugo main.go
+mv hugo /usr/local/bin/
+```
@@ -132,3 +148,5 @@ Alternatively, just run `make` &mdash; all the “magic” above is already in t
-    cd /path/to/hugo
-    go install github.com/spf13/hugo/hugolib
-    go run main.go
+``` bash
+cd /path/to/hugo
+go install github.com/spf13/hugo/hugolib
+go run main.go
+```
@@ -136 +154 @@ Alternatively, just run `make` &mdash; all the “magic” above is already in t
-**Complete documentation is available at [Hugo Documentation](http://gohugo.io/).**
+**Complete documentation is available at [Hugo Documentation][].**
@@ -141 +159,2 @@ Alternatively, just run `make` &mdash; all the “magic” above is already in t
-[Go]: http://golang.org/
+[Go]: https://golang.org/
+[Hugo Documentation]: https://gohugo.io/
diff --git a/README.md b/README.md
index 25536a4e..060c0afd 100644
--- a/README.md
+++ b/README.md
@@ -99 +99 @@ We welcome your contributions. To make the process as seamless as possible, we a
-     * Sign the [Forum Release thread](http://discuss.gohugo.io/t/switching-to-apache-2-license/173/26)
+     * Sign the [CLA](https://cla-assistant.io/spf13/hugo)
diff --git a/README.md b/README.md
index 0d958b7d..25536a4e 100644
--- a/README.md
+++ b/README.md
@@ -112 +112 @@ We welcome your contributions. To make the process as seamless as possible, we a
-### Adding compile information to Hugo
+### Adding Compile Information to Hugo
diff --git a/README.md b/README.md
index a4eef9e6..0d958b7d 100644
--- a/README.md
+++ b/README.md
@@ -50 +50 @@ Use the [installation instructions in the Hugo documentation](http://gohugo.io/o
-    * [Go][] 1.3+ (Go 1.4+ on Windows, see Go [Issue #8090](https://code.google.com/p/go/issues/detail?id=8090))
+    * [Go][] 1.4+
diff --git a/README.md b/README.md
index 66e533e2..a4eef9e6 100644
--- a/README.md
+++ b/README.md
@@ -104 +104 @@ We welcome your contributions. To make the process as seamless as possible, we a
-     * Make sure `go test ./...` passes, and `go build` completes. Our [Travis CI loop](https://travis-ci.org/spf13/hugo) (Linux) and [AppVeyor](https://ci.appveyor.com/project/spf13/hugo/branch/master) (Windows) will catch most things that are missing. 
+     * Make sure `go test ./...` passes, and `go build` completes. Our [Travis CI loop](https://travis-ci.org/spf13/hugo) (Linux) and [AppVeyor](https://ci.appveyor.com/project/spf13/hugo/branch/master) (Windows) will catch most things that are missing.
diff --git a/README.md b/README.md
index 8b745d26..66e533e2 100644
--- a/README.md
+++ b/README.md
@@ -73,4 +72,0 @@ Use the [installation instructions in the Hugo documentation](http://gohugo.io/o
-7. If you are changing files in the `commands` directory, note that `main.go` imports from Github.
-One solution to this is to clone spf13's Hugo (or go get) into $GOPATH/src/github.com, then add 
-your Hugo fork as a remote. 
-
diff --git a/README.md b/README.md
index 2dc1d703..8b745d26 100644
--- a/README.md
+++ b/README.md
@@ -6 +6 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[Forum](https://discuss.gohugo.io) |
+[Forum](http://discuss.gohugo.io) |
@@ -72,0 +73,4 @@ Use the [installation instructions in the Hugo documentation](http://gohugo.io/o
+7. If you are changing files in the `commands` directory, note that `main.go` imports from Github.
+One solution to this is to clone spf13's Hugo (or go get) into $GOPATH/src/github.com, then add 
+your Hugo fork as a remote. 
+
@@ -98,0 +103 @@ We welcome your contributions. To make the process as seamless as possible, we a
+     * Sign the [Forum Release thread](http://discuss.gohugo.io/t/switching-to-apache-2-license/173/26)
diff --git a/README.md b/README.md
index d5b611b7..2dc1d703 100644
--- a/README.md
+++ b/README.md
@@ -127,12 +126,0 @@ This will result in `hugo version` output that looks similar to:
-The format of the date is configurable via the `Params.DateFormat` setting. `DateFormat` is a string value representing the Go time layout that should be used to format the date output. If `Params.DateFormat` is not set, `time.RFC3339` will be used as the default format. See Go’s ["time" package documentation](http://golang.org/pkg/time/#pkg-constants) for more information.
-
-Configuration setting using config.yaml as example:
-
-    Params:
-       DateFormat: "2006-01-02"
-
-Will result in:
-
-    Hugo Static Site Generator v0.13-DEV buildDate: 2014-10-16
-    Hugo Static Site Generator v0.13-DEV-24BBFE7 buildDate: 2014-10-16
-
diff --git a/README.md b/README.md
index 38539996..d5b611b7 100644
--- a/README.md
+++ b/README.md
@@ -103,2 +103 @@ We welcome your contributions. To make the process as seamless as possible, we a
-     * Make sure `go test ./...` passes, and `go build` completes. Our [Travis CI loop](https://travis-ci.org/spf13/hugo) will catch most things that are missing. The exception: Windows. We run on Windows from time to time, but if you have access, please check on a Windows machine too.
-
+     * Make sure `go test ./...` passes, and `go build` completes. Our [Travis CI loop](https://travis-ci.org/spf13/hugo) (Linux) and [AppVeyor](https://ci.appveyor.com/project/spf13/hugo/branch/master) (Windows) will catch most things that are missing. 
diff --git a/README.md b/README.md
index 6d0d3636..38539996 100644
--- a/README.md
+++ b/README.md
@@ -92,0 +93 @@ If you have any questions about how to contribute or what to contribute please a
+## Code Contribution Guideline
@@ -94 +95,9 @@ If you have any questions about how to contribute or what to contribute please a
-## Code Contribution Guide
+We welcome your contributions. To make the process as seamless as possible, we ask for the following:
+
+* Go ahead and fork the project and make your changes. We encourage pull requests to discuss code changes.
+* When you’re ready to create a pull request, be sure to:
+     * Have test cases for the new code. If you have questions about how to do it, please ask in your pull request.
+     * Run `go fmt`
+     * Squash your commits into a single commit. `git rebase -i`. It’s okay to force update your pull request.
+     * This [blog article](http://chris.beams.io/posts/git-commit/) is a good resource for learning how to write good commit messages, the most important part being that each commit message should have a title/subject in imperative mode without trailing period: *"Return error on wrong use of the Paginator"*, **NOT** *"Returning some error."* Also, if your commit references one or more GitHub issues, always end your commit message body with *See #1234* or *Fixes #1234*. Replace *1234* with the GitHub issue ID. The last example will close the issue when the commit is merged into *master*.
+     * Make sure `go test ./...` passes, and `go build` completes. Our [Travis CI loop](https://travis-ci.org/spf13/hugo) will catch most things that are missing. The exception: Windows. We run on Windows from time to time, but if you have access, please check on a Windows machine too.
@@ -96 +104,0 @@ If you have any questions about how to contribute or what to contribute please a
-Contributors should build Hugo and test their changes before submitting a code change.
@@ -140,11 +147,0 @@ Alternatively, just run `make` &mdash; all the “magic” above is already in t
-## Contribution Guidelines
-
-We welcome your contributions. To make the process as seamless as possible, we ask for the following:
-
-* Go ahead and fork the project and make your changes. We encourage pull requests to discuss code changes.
-* When you’re ready to create a pull request, be sure to:
-     * Have test cases for the new code. If you have questions about how to do it, please ask in your pull request.
-     * Run `go fmt`
-     * Squash your commits into a single commit. `git rebase -i`. It’s okay to force update your pull request.
-     * Make sure `go test ./...` passes, and `go build` completes. Our [Travis CI loop](https://travis-ci.org/spf13/hugo) will catch most things that are missing. The exception: Windows. We run on Windows from time to time, but if you have access, please check on a Windows machine too.
-
diff --git a/README.md b/README.md
index 7ee48b90..6d0d3636 100644
--- a/README.md
+++ b/README.md
@@ -87 +87 @@ To update Hugo’s dependencies, use `go get` with the `-u` option.
-We welcome contributions to Hugo of any kind including documentation, themes, organization, tutorials, blog posts, documentation, bug reports, issues, feature requests, feature implementation, pull requests, answering questions on the forum, helping to manage issues, etc. The Hugo community and maintainers are very active and helpful and the project benefits greatly from this activity.
+We welcome contributions to Hugo of any kind including documentation, themes, organization, tutorials, blog posts, bug reports, issues, feature requests, feature implementation, pull requests, answering questions on the forum, helping to manage issues, etc. The Hugo community and maintainers are very active and helpful and the project benefits greatly from this activity.
diff --git a/README.md b/README.md
index 92bf20c2..7ee48b90 100644
--- a/README.md
+++ b/README.md
@@ -2,0 +3,2 @@
+A Fast and Flexible Static Site Generator built with love by [spf13](http://spf13.com/) and [friends](https://github.com/spf13/hugo/graphs/contributors) in [Go][].
+
@@ -12,3 +13,0 @@
-A Fast and Flexible Static Site Generator built with love by [spf13](http://spf13.com/) and [friends](https://github.com/spf13/hugo/graphs/contributors) in [Go][].
-
-
diff --git a/README.md b/README.md
index cb116a5a..92bf20c2 100644
--- a/README.md
+++ b/README.md
@@ -1 +1 @@
-![Hugo](https://raw.githubusercontent.com/spf13/hugo/master/docs/static/img/hugo-logo-med.png)
+![Hugo](https://raw.githubusercontent.com/spf13/hugo/master/docs/static/img/hugo-logo.png)
diff --git a/README.md b/README.md
index 54aee11c..cb116a5a 100644
--- a/README.md
+++ b/README.md
@@ -1 +1 @@
-![Hugo](https://raw.githubusercontent.com/spf13/hugo/blob/master/docs/static/img/hugo-logo-med.png)
+![Hugo](https://raw.githubusercontent.com/spf13/hugo/master/docs/static/img/hugo-logo-med.png)
diff --git a/README.md b/README.md
index 9cfdddce..54aee11c 100644
--- a/README.md
+++ b/README.md
@@ -1 +1,10 @@
-# Hugo
+![Hugo](https://raw.githubusercontent.com/spf13/hugo/blob/master/docs/static/img/hugo-logo-med.png)
+
+[Website](http://gohugo.io) |
+[Forum](https://discuss.gohugo.io) |
+[Chat](https://gitter.im/spf13/hugo) |
+[Documentation](http://gohugo.io/overview/introduction/) |
+[Installation Guide](http://gohugo.io/overview/installing/) |
+[Twitter](http://twitter.com/spf13)
+
+[![Build Status](https://travis-ci.org/spf13/hugo.png)](https://travis-ci.org/spf13/hugo) [![wercker status](https://app.wercker.com/status/1a0de7d703ce3b80527f00f675e1eb32 "wercker status")](https://app.wercker.com/project/bykey/1a0de7d703ce3b80527f00f675e1eb32) [![Build status](https://ci.appveyor.com/api/projects/status/n2mo912b8s2505e8/branch/master?svg=true)](https://ci.appveyor.com/project/spf13/hugo/branch/master) [![Join the chat at https://gitter.im/spf13/hugo](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/spf13/hugo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
@@ -3 +11,0 @@
-[![Join the chat at https://gitter.im/spf13/hugo](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/spf13/hugo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
@@ -6 +13,0 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-[![Build Status](https://travis-ci.org/spf13/hugo.png)](https://travis-ci.org/spf13/hugo) [![wercker status](https://app.wercker.com/status/1a0de7d703ce3b80527f00f675e1eb32 "wercker status")](https://app.wercker.com/project/bykey/1a0de7d703ce3b80527f00f675e1eb32) [![Build status](https://ci.appveyor.com/api/projects/status/n2mo912b8s2505e8/branch/master?svg=true)](https://ci.appveyor.com/project/spf13/hugo/branch/master)
diff --git a/README.md b/README.md
index 6e940d0b..9cfdddce 100644
--- a/README.md
+++ b/README.md
@@ -1,0 +2,2 @@
+
+[![Join the chat at https://gitter.im/spf13/hugo](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/spf13/hugo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
diff --git a/README.md b/README.md
index 88dfe7bb..6e940d0b 100644
--- a/README.md
+++ b/README.md
@@ -77 +77,10 @@ To update Hugo’s dependencies, use `go get` with the `-u` option.
-## Contributing Code
+## Contributing to Hugo
+
+We welcome contributions to Hugo of any kind including documentation, themes, organization, tutorials, blog posts, documentation, bug reports, issues, feature requests, feature implementation, pull requests, answering questions on the forum, helping to manage issues, etc. The Hugo community and maintainers are very active and helpful and the project benefits greatly from this activity.
+
+[![Throughput Graph](https://graphs.waffle.io/spf13/hugo/throughput.svg)](https://waffle.io/spf13/hugo/metrics)
+
+If you have any questions about how to contribute or what to contribute please ask on the [forum](http://discuss.gohugo.io)
+
+
+## Code Contribution Guide
diff --git a/README.md b/README.md
index f5792bf1..88dfe7bb 100644
--- a/README.md
+++ b/README.md
@@ -18 +18 @@ Hugo is meant to work well for any kind of website including blogs, tumbles and
-Currently, we provide pre-built Hugo binaries for Windows, Linux, FreeBSD and OS&nbsp;X for x64 and i386 architectures.
+Currently, we provide pre-built Hugo binaries for Windows, Linux, FreeBSD, NetBSD and OS&nbsp;X (Darwin) for x64, i386 and ARM architectures.
@@ -20 +20 @@ Currently, we provide pre-built Hugo binaries for Windows, Linux, FreeBSD and OS
-Hugo may also be compiled from source wherever the Go compiler tool chain can run, e.g. for ARM architecture and for other operating systems including DragonFly BSD, NetBSD, OpenBSD, Plan&nbsp;9 and Solaris.
+Hugo may also be compiled from source wherever the Go compiler tool chain can run, e.g. for other operating systems including DragonFly BSD, OpenBSD, Plan&nbsp;9 and Solaris.
diff --git a/README.md b/README.md
index 7428f8c5..f5792bf1 100644
--- a/README.md
+++ b/README.md
@@ -2 +2 @@
-A Fast and Flexible Static Site Generator built with love by [spf13](http://spf13.com/) and [friends](https://github.com/spf13/hugo/graphs/contributors) in Go.
+A Fast and Flexible Static Site Generator built with love by [spf13](http://spf13.com/) and [friends](https://github.com/spf13/hugo/graphs/contributors) in [Go][].
@@ -8 +8 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-Hugo is a static site generator written in Go. It is optimized for speed, easy use and configurability. Hugo takes a directory with content and templates and renders them into a full HTML website.
+Hugo is a static site generator written in [Go][]. It is optimized for speed, easy use and configurability. Hugo takes a directory with content and templates and renders them into a full HTML website.
@@ -10 +10 @@ Hugo is a static site generator written in Go. It is optimized for speed, easy u
-Hugo relies on Markdown files with front matter for meta data. And you can run Hugo from any directory. This works well for shared hosts and other systems where you don't have a privileged account.
+Hugo relies on Markdown files with front matter for meta data. And you can run Hugo from any directory. This works well for shared hosts and other systems where you don’t have a privileged account.
@@ -18 +18,3 @@ Hugo is meant to work well for any kind of website including blogs, tumbles and
-Currently Hugo exists for Windows, Linux, FreeBSD and OS X for x64 and i386 architectures.
+Currently, we provide pre-built Hugo binaries for Windows, Linux, FreeBSD and OS&nbsp;X for x64 and i386 architectures.
+
+Hugo may also be compiled from source wherever the Go compiler tool chain can run, e.g. for ARM architecture and for other operating systems including DragonFly BSD, NetBSD, OpenBSD, Plan&nbsp;9 and Solaris.
@@ -30,0 +33 @@ Finally, you can install the Hugo source code with `go`, build the binaries your
+
@@ -33,0 +37 @@ Use the [installation instructions in the Hugo documentation](http://gohugo.io/o
+
@@ -35,6 +38,0 @@ Use the [installation instructions in the Hugo documentation](http://gohugo.io/o
-    * Git
-    * Go 1.3+ (Go 1.4+ on Windows, see Go [Issue #8090](https://code.google.com/p/go/issues/detail?id=8090))
-    * Mercurial
-    * Bazaar
-2. Fork the Hugo project on Github.
-3. Clone your fork.
@@ -42,2 +40,9 @@ Use the [installation instructions in the Hugo documentation](http://gohugo.io/o
-	`git clone https://github.com/YOURNAME/hugo`
-4. Change into the `hugo` directory.
+    * [Git](http://git-scm.com/)
+    * [Mercurial](http://mercurial.selenic.com/)
+    * [Go][] 1.3+ (Go 1.4+ on Windows, see Go [Issue #8090](https://code.google.com/p/go/issues/detail?id=8090))
+
+2. Fork the [Hugo project on GitHub](https://github.com/spf13/hugo).
+
+3. Clone your fork:
+
+        git clone https://github.com/YOURNAME/hugo
@@ -45,2 +50 @@ Use the [installation instructions in the Hugo documentation](http://gohugo.io/o
-	`cd hugo`
-5. Install the Hugo project’s package dependencies.
+4. Change into the `hugo` directory:
@@ -48,2 +52 @@ Use the [installation instructions in the Hugo documentation](http://gohugo.io/o
-	`go get`
-6. Use a symbolic link to add Hugo to your `$GOPATH`.
+        cd hugo
@@ -51 +54 @@ Use the [installation instructions in the Hugo documentation](http://gohugo.io/o
-	`ln -s /path/to/your/hugo $GOPATH/src/github.com/spf13/hugo`
+5. Install the Hugo project’s package dependencies:
@@ -53 +56,8 @@ Use the [installation instructions in the Hugo documentation](http://gohugo.io/o
-	Go expects all of your libraries to be found in`$GOPATH`.
+        go get -u -v github.com/spf13/hugo
+
+6. Use a symbolic link to add your locally cloned Hugo repository to your `$GOPATH`, assuming you prefer doing development work outside of `$GOPATH`:
+
+        rm -rf "$GOPATH/src/github.com/spf13/hugo"
+        ln -s `pwd` "$GOPATH/src/github.com/spf13/hugo"
+
+    Go expects all of your libraries to be found in`$GOPATH`.
@@ -67,0 +78 @@ To update Hugo’s dependencies, use `go get` with the `-u` option.
+
@@ -92 +103 @@ This will result in `hugo version` output that looks similar to:
-The format of the date is configurable via the `Params.DateFormat` setting. `DateFormat` is a string value representing the Go time layout that should be used to format the date output. If `Params.DateFormat` is not set, `time.RFC3339` will be used as the default format. See Go's ["time" package documentation](http://golang.org/pkg/time/#pkg-constants) for more information.
+The format of the date is configurable via the `Params.DateFormat` setting. `DateFormat` is a string value representing the Go time layout that should be used to format the date output. If `Params.DateFormat` is not set, `time.RFC3339` will be used as the default format. See Go’s ["time" package documentation](http://golang.org/pkg/time/#pkg-constants) for more information.
@@ -103,0 +115,2 @@ Will result in:
+Alternatively, just run `make` &mdash; all the “magic” above is already in the `Makefile`.  :wink:
+
@@ -115 +128 @@ We welcome your contributions. To make the process as seamless as possible, we a
-* When you're ready to create a pull request, be sure to:
+* When you’re ready to create a pull request, be sure to:
@@ -118,2 +131,2 @@ We welcome your contributions. To make the process as seamless as possible, we a
-     * Squash your commits into a single commit. `git rebase -i`. It's okay to force update your pull request.
-     * Make sure `go test ./...` passes, and `go build` completes. Our Travis CI loop will catch most things that are missing. The exception: Windows. We run on Windows from time to time, but if you have access, please check on a Windows machine too.
+     * Squash your commits into a single commit. `git rebase -i`. It’s okay to force update your pull request.
+     * Make sure `go test ./...` passes, and `go build` completes. Our [Travis CI loop](https://travis-ci.org/spf13/hugo) will catch most things that are missing. The exception: Windows. We run on Windows from time to time, but if you have access, please check on a Windows machine too.
@@ -124,0 +138,2 @@ We welcome your contributions. To make the process as seamless as possible, we a
+
+[Go]: http://golang.org/
diff --git a/README.md b/README.md
index 6c1ab9cf..7428f8c5 100644
--- a/README.md
+++ b/README.md
@@ -118 +118,2 @@ We welcome your contributions. To make the process as seamless as possible, we a
-     * Squash your commits into a single commit. `git rebase -i`. It's okay to force update your pull request.     * Make sure `go test ./...` passes, and `go build` completes. Our Travis CI loop will catch most things that are missing. The exception: Windows. We run on Windows from time to time, but if you have access, please check on a Windows machine too.
+     * Squash your commits into a single commit. `git rebase -i`. It's okay to force update your pull request.
+     * Make sure `go test ./...` passes, and `go build` completes. Our Travis CI loop will catch most things that are missing. The exception: Windows. We run on Windows from time to time, but if you have access, please check on a Windows machine too.
diff --git a/README.md b/README.md
index d36b5cb9..6c1ab9cf 100644
--- a/README.md
+++ b/README.md
@@ -2,2 +2 @@
-A Fast and Flexible Static Site Generator built with love by [spf13](http://spf13.com/)
-and [friends](https://github.com/spf13/hugo/graphs/contributors) in Go.
+A Fast and Flexible Static Site Generator built with love by [spf13](http://spf13.com/) and [friends](https://github.com/spf13/hugo/graphs/contributors) in Go.
@@ -5,3 +4 @@ and [friends](https://github.com/spf13/hugo/graphs/contributors) in Go.
-[![Build Status](https://travis-ci.org/spf13/hugo.png)](https://travis-ci.org/spf13/hugo)
-[![wercker status](https://app.wercker.com/status/1a0de7d703ce3b80527f00f675e1eb32 "wercker status")](https://app.wercker.com/project/bykey/1a0de7d703ce3b80527f00f675e1eb32)
-[![Build status](https://ci.appveyor.com/api/projects/status/n2mo912b8s2505e8/branch/master?svg=true)](https://ci.appveyor.com/project/spf13/hugo/branch/master)
+[![Build Status](https://travis-ci.org/spf13/hugo.png)](https://travis-ci.org/spf13/hugo) [![wercker status](https://app.wercker.com/status/1a0de7d703ce3b80527f00f675e1eb32 "wercker status")](https://app.wercker.com/project/bykey/1a0de7d703ce3b80527f00f675e1eb32) [![Build status](https://ci.appveyor.com/api/projects/status/n2mo912b8s2505e8/branch/master?svg=true)](https://ci.appveyor.com/project/spf13/hugo/branch/master)
@@ -11,3 +8 @@ and [friends](https://github.com/spf13/hugo/graphs/contributors) in Go.
-Hugo is a static site generator written in Go. It is optimized for
-speed, easy use and configurability. Hugo takes a directory with content and
-templates and renders them into a full HTML website.
+Hugo is a static site generator written in Go. It is optimized for speed, easy use and configurability. Hugo takes a directory with content and templates and renders them into a full HTML website.
@@ -15 +10 @@ templates and renders them into a full HTML website.
-Hugo makes use of Markdown files with front matter for meta data.
+Hugo relies on Markdown files with front matter for meta data. And you can run Hugo from any directory. This works well for shared hosts and other systems where you don't have a privileged account.
@@ -17,3 +12 @@ Hugo makes use of Markdown files with front matter for meta data.
-A typical website of moderate size can be
-rendered in a fraction of a second. A good rule of thumb is that Hugo
-takes around 1 millisecond for each piece of content.
+Hugo renders a typical website of moderate size in a fraction of a second. A good rule of thumb is that each piece of content renders in around 1 millisecond.
@@ -21,2 +14 @@ takes around 1 millisecond for each piece of content.
-It is written to work well with any
-kind of website including blogs, tumbles and docs.
+Hugo is meant to work well for any kind of website including blogs, tumbles and docs.
@@ -24,5 +16 @@ kind of website including blogs, tumbles and docs.
-**Complete documentation is available at [Hugo Documentation](http://gohugo.io/).**
-
-# Getting Started
-
-## Installing Hugo
+#### Supported Architectures
@@ -30 +18 @@ kind of website including blogs, tumbles and docs.
-Hugo is written in Go with support for Windows, Linux, FreeBSD and OS X.
+Currently Hugo exists for Windows, Linux, FreeBSD and OS X for x64 and i386 architectures.
@@ -32,3 +20 @@ Hugo is written in Go with support for Windows, Linux, FreeBSD and OS X.
-The latest release can be found at [Hugo Releases](https://github.com/spf13/hugo/releases).
-We currently build for Windows, Linux, FreeBSD and OS X for x64
-and i386 architectures.
+**Complete documentation is available at [Hugo Documentation](http://gohugo.io/).**
@@ -36 +22 @@ and i386 architectures.
-### Installing Hugo (binary)
+## Choose How to Install
@@ -38,5 +24 @@ and i386 architectures.
-Installation is very easy. Simply download the appropriate version for your
-platform from [Hugo Releases](https://github.com/spf13/hugo/releases).
-Once downloaded, it can be run from anywhere. You don't need to install
-it into a global location. This works well for shared hosts and other systems
-where you don't have a privileged account.
+If you want to use Hugo as your site generator, simply install the Hugo binaries. The Hugo binaries have no external dependencies.
@@ -44,2 +26 @@ where you don't have a privileged account.
-Ideally, you should install it somewhere in your path for easy use. `/usr/local/bin`
-is the most probable location.
+To contribute to the Hugo source code or documentation, you should fork the Hugo GitHub project and clone it to your local machine.
@@ -47 +28 @@ is the most probable location.
-*The Hugo executable has no external dependencies.*
+Finally, you can install the Hugo source code with `go`, build the binaries yourself, and run Hugo that way. Building the binaries is an easy task for an experienced `go` getter.
@@ -49 +30,2 @@ is the most probable location.
-### Installing from source
+### Install Hugo as Your Site Generator (Binary Install)
+Use the [installation instructions in the Hugo documentation](http://gohugo.io/overview/installing/).
@@ -51 +33,8 @@ is the most probable location.
-#### Dependencies
+### Clone the Hugo Project (Contributor)
+1. Make sure your local environment has the following software installed:
+    * Git
+    * Go 1.3+ (Go 1.4+ on Windows, see Go [Issue #8090](https://code.google.com/p/go/issues/detail?id=8090))
+    * Mercurial
+    * Bazaar
+2. Fork the Hugo project on Github.
+3. Clone your fork.
@@ -53,4 +42,2 @@ is the most probable location.
-* Git
-* Go 1.3+ (Go 1.4+ on Windows, see Go [Issue #8090](https://code.google.com/p/go/issues/detail?id=8090))
-* Mercurial
-* Bazaar
+	`git clone https://github.com/YOURNAME/hugo`
+4. Change into the `hugo` directory.
@@ -58 +45,2 @@ is the most probable location.
-#### Clone locally (for contributors):
+	`cd hugo`
+5. Install the Hugo project’s package dependencies.
@@ -60,3 +48,2 @@ is the most probable location.
-    git clone https://github.com/spf13/hugo
-    cd hugo
-    go get
+	`go get`
+6. Use a symbolic link to add Hugo to your `$GOPATH`.
@@ -64,2 +51 @@ is the most probable location.
-Because Go expects all of your libraries to be found in either `$GOROOT` or `$GOPATH`,
-it's helpful to symlink the project to one of the following paths:
+	`ln -s /path/to/your/hugo $GOPATH/src/github.com/spf13/hugo`
@@ -67,2 +53 @@ it's helpful to symlink the project to one of the following paths:
- * `ln -s /path/to/your/hugo $GOPATH/src/github.com/spf13/hugo`
- * `ln -s /path/to/your/hugo $GOROOT/src/pkg/github.com/spf13/hugo`
+	Go expects all of your libraries to be found in`$GOPATH`.
@@ -70 +55 @@ it's helpful to symlink the project to one of the following paths:
-#### Get directly from GitHub:
+### Build and Install the Binaries from Source (Advanced Install)
@@ -72 +57 @@ it's helpful to symlink the project to one of the following paths:
-If you only want to build from source, it's even easier:
+Add Hugo and its package dependencies to your go `src` directory.
@@ -76,2 +61 @@ If you only want to build from source, it's even easier:
-Once completed, your may find your new `hugo` (or `hugo.exe`) executable
-sitting inside `$GOPATH/bin/`.
+Once the `get` completes, you should find your new `hugo` (or `hugo.exe`) executable sitting inside `$GOPATH/bin/`.
@@ -79 +63 @@ sitting inside `$GOPATH/bin/`.
-You may also run `go get` with the `-u` option to update Hugo’s dependencies:
+To update Hugo’s dependencies, use `go get` with the `-u` option.
@@ -83 +67,4 @@ You may also run `go get` with the `-u` option to update Hugo’s dependencies:
-#### Building Hugo
+## Contributing Code
+Contributors should build Hugo and test their changes before submitting a code change.
+
+### Building Hugo with Your Changes
@@ -89 +76 @@ You may also run `go get` with the `-u` option to update Hugo’s dependencies:
-##### Adding compile information to Hugo
+### Adding compile information to Hugo
@@ -105 +92 @@ This will result in `hugo version` output that looks similar to:
-The format of the date is configurable via the `Params.DateFormat` setting.  `DateFormat` is a string value representing the Go time layout that should be used to format the date output. If `Params.DateFormat` is not set, `time.RFC3339` will be used as the default format. See Go's ["time" package documentation](http://golang.org/pkg/time/#pkg-constants) for more information.
+The format of the date is configurable via the `Params.DateFormat` setting. `DateFormat` is a string value representing the Go time layout that should be used to format the date output. If `Params.DateFormat` is not set, `time.RFC3339` will be used as the default format. See Go's ["time" package documentation](http://golang.org/pkg/time/#pkg-constants) for more information.
@@ -117 +104 @@ Will result in:
-#### Running Hugo
+### Running Hugo
@@ -123 +110 @@ Will result in:
-#### Contribution Guidelines
+## Contribution Guidelines
@@ -125 +112 @@ Will result in:
-We welcome your contributions.  To make the process as seamless as possible, we ask for the following:
+We welcome your contributions. To make the process as seamless as possible, we ask for the following:
@@ -127 +114 @@ We welcome your contributions.  To make the process as seamless as possible, we
-* Go ahead and fork the project and make your changes.  We encourage pull requests to discuss code changes.
+* Go ahead and fork the project and make your changes. We encourage pull requests to discuss code changes.
@@ -129 +116 @@ We welcome your contributions.  To make the process as seamless as possible, we
-     * Have test cases for the new code.  If you have questions about how to do it, please ask in your pull request.
+     * Have test cases for the new code. If you have questions about how to do it, please ask in your pull request.
@@ -131,2 +118 @@ We welcome your contributions.  To make the process as seamless as possible, we
-     * Squash your commits into a single commit.  `git rebase -i`.  It's okay to force update your pull request.  
-     * Make sure `go test ./...` passes, and `go build` completes.  Our Travis CI loop will catch most things that are missing.  The exception: Windows.  We run on Windows from time to time, but if you have access, please check on a Windows machine too.
+     * Squash your commits into a single commit. `git rebase -i`. It's okay to force update your pull request.     * Make sure `go test ./...` passes, and `go build` completes. Our Travis CI loop will catch most things that are missing. The exception: Windows. We run on Windows from time to time, but if you have access, please check on a Windows machine too.
diff --git a/README.md b/README.md
index 142aecfc..d36b5cb9 100644
--- a/README.md
+++ b/README.md
@@ -2,2 +2,2 @@
-A Fast and Flexible Static Site Generator built with love by [spf13](http://spf13.com)
-and [friends](http://github.com/spf13/hugo/graphs/contributors) in Go.
+A Fast and Flexible Static Site Generator built with love by [spf13](http://spf13.com/)
+and [friends](https://github.com/spf13/hugo/graphs/contributors) in Go.
@@ -24 +24 @@ kind of website including blogs, tumbles and docs.
-**Complete documentation is available at [Hugo Documentation](http://gohugo.io).**
+**Complete documentation is available at [Hugo Documentation](http://gohugo.io/).**
@@ -54 +54 @@ is the most probable location.
-* Go 1.1+ (Go 1.4+ on Windows, see Go [Issue #8090](https://code.google.com/p/go/issues/detail?id=8090))
+* Go 1.3+ (Go 1.4+ on Windows, see Go [Issue #8090](https://code.google.com/p/go/issues/detail?id=8090))
@@ -72 +72 @@ it's helpful to symlink the project to one of the following paths:
-If you only want to build from source, it's even easier.
+If you only want to build from source, it's even easier:
@@ -75,0 +76,7 @@ If you only want to build from source, it's even easier.
+Once completed, your may find your new `hugo` (or `hugo.exe`) executable
+sitting inside `$GOPATH/bin/`.
+
+You may also run `go get` with the `-u` option to update Hugo’s dependencies:
+
+    go get -u -v github.com/spf13/hugo
+
@@ -127 +134 @@ We welcome your contributions.  To make the process as seamless as possible, we
-**Complete documentation is available at [Hugo Documentation](http://gohugo.io).**
+**Complete documentation is available at [Hugo Documentation](http://gohugo.io/).**
diff --git a/README.md b/README.md
index f4f8f6fd..142aecfc 100644
--- a/README.md
+++ b/README.md
@@ -2 +2 @@
-A Fast and Flexible Static Site Generator built with love by [spf13](http://spf13.com) 
+A Fast and Flexible Static Site Generator built with love by [spf13](http://spf13.com)
@@ -30 +30 @@ kind of website including blogs, tumbles and docs.
-Hugo is written in Go with support for Windows, Linux, FreeBSD and OS X.
+Hugo is written in Go with support for Windows, Linux, FreeBSD and OS X.
@@ -33 +33 @@ The latest release can be found at [Hugo Releases](https://github.com/spf13/hugo
-We currently build for Windows, Linux, FreeBSD and OS X for x64
+We currently build for Windows, Linux, FreeBSD and OS X for x64
@@ -92 +92 @@ To do this, replace the `go build` command with the following *(replace `/path/t
-    go build -ldflags "-X /path/to/hugo/commands.commitHash `git rev-parse --short HEAD 2>/dev/null` -X github.com/spf13/hugo/commands.buildDate `date +%FT%T%z`"
+    go build -ldflags "-X /path/to/hugo/hugolib.CommitHash `git rev-parse --short HEAD 2>/dev/null` -X github.com/spf13/hugo/hugolib.BuildDate `date +%FT%T%z`"
diff --git a/README.md b/README.md
index cdcaebee..f4f8f6fd 100644
--- a/README.md
+++ b/README.md
@@ -54 +54 @@ is the most probable location.
-* Go 1.1+
+* Go 1.1+ (Go 1.4+ on Windows, see Go [Issue #8090](https://code.google.com/p/go/issues/detail?id=8090))
diff --git a/README.md b/README.md
index 194aa126..cdcaebee 100644
--- a/README.md
+++ b/README.md
@@ -32 +32 @@ Hugo is written in Go with support for Windows, Linux, FreeBSD and OS X.
-The latest release can be found at [hugo releases](https://github.com/spf13/hugo/releases).
+The latest release can be found at [Hugo Releases](https://github.com/spf13/hugo/releases).
@@ -64 +64 @@ is the most probable location.
-Because Go expects all of your libraries to be found in either $GOROOT or $GOPATH,
+Because Go expects all of your libraries to be found in either `$GOROOT` or `$GOPATH`,
@@ -84 +84,5 @@ If you only want to build from source, it's even easier.
-When Hugo is built using the above steps, the `version` sub-command will include the `mdate` of the Hugo executable.  Instead, it is possible to have the `version` sub-command return information about the git commit used and time of compilation using `build` flags.
+When Hugo is built using the above steps, the `version` sub-command will include the `mdate` of the Hugo executable, similar to the following:
+
+    Hugo Static Site Generator v0.13-DEV buildDate: 2014-12-24T04:46:03-07:00
+
+Instead, it is possible to have the `version` sub-command return information about the git commit used and time of compilation using `build` flags.
@@ -88 +92 @@ To do this, replace the `go build` command with the following *(replace `/path/t
-    go build -ldflags "-X /path/to/hugo/commands.commitHash `git rev-parse --short HEAD 2>/dev/null` -X github.com/spf13/hugo/commands.buildDate `date +%FT%T`"  
+    go build -ldflags "-X /path/to/hugo/commands.commitHash `git rev-parse --short HEAD 2>/dev/null` -X github.com/spf13/hugo/commands.buildDate `date +%FT%T%z`"
@@ -90 +94 @@ To do this, replace the `go build` command with the following *(replace `/path/t
-This will result in hugo version output that looks similar to:
+This will result in `hugo version` output that looks similar to:
@@ -92,2 +96 @@ This will result in hugo version output that looks similar to:
-    Hugo Static Site Generator v0.13-DEV buildDate: 2014-10-16T09:59:55Z
-    Hugo Static Site Generator v0.13-DEV-24BBFE7 buildDate: 2014-10-16T10:00:55Z
+    Hugo Static Site Generator v0.13-DEV-8042E77 buildDate: 2014-12-25T03:25:57-07:00
@@ -95 +98 @@ This will result in hugo version output that looks similar to:
-The format of the date is configurable via the `Params.DateFormat` setting.  `DateFormat` is a string value representing the Go time layout that should be used to format the date output. If `Params.DateFormat` is not set, `time.RFC3339` will be used as the default format.See [time documentation](http://golang.org/pkg/time/#pkg-constants) for more information.
+The format of the date is configurable via the `Params.DateFormat` setting.  `DateFormat` is a string value representing the Go time layout that should be used to format the date output. If `Params.DateFormat` is not set, `time.RFC3339` will be used as the default format. See Go's ["time" package documentation](http://golang.org/pkg/time/#pkg-constants) for more information.
@@ -122 +125 @@ We welcome your contributions.  To make the process as seamless as possible, we
-     * Make sure `go test ./...` passes, and go build completes.  Our Travis CI loop will catch most things that are missing.  The exception: Windows.  We run on Windows from time to time, but if you have access, please check on a Windows machine too.
+     * Make sure `go test ./...` passes, and `go build` completes.  Our Travis CI loop will catch most things that are missing.  The exception: Windows.  We run on Windows from time to time, but if you have access, please check on a Windows machine too.
diff --git a/README.md b/README.md
index e6e0ce1d..194aa126 100644
--- a/README.md
+++ b/README.md
@@ -6,0 +7 @@ and [friends](http://github.com/spf13/hugo/graphs/contributors) in Go.
+[![Build status](https://ci.appveyor.com/api/projects/status/n2mo912b8s2505e8/branch/master?svg=true)](https://ci.appveyor.com/project/spf13/hugo/branch/master)
diff --git a/README.md b/README.md
index b20a29bb..e6e0ce1d 100644
--- a/README.md
+++ b/README.md
@@ -80,0 +81,25 @@ If you only want to build from source, it's even easier.
+##### Adding compile information to Hugo
+
+When Hugo is built using the above steps, the `version` sub-command will include the `mdate` of the Hugo executable.  Instead, it is possible to have the `version` sub-command return information about the git commit used and time of compilation using `build` flags.
+
+To do this, replace the `go build` command with the following *(replace `/path/to/hugo` with the actual path)*:
+
+    go build -ldflags "-X /path/to/hugo/commands.commitHash `git rev-parse --short HEAD 2>/dev/null` -X github.com/spf13/hugo/commands.buildDate `date +%FT%T`"  
+
+This will result in hugo version output that looks similar to:
+
+    Hugo Static Site Generator v0.13-DEV buildDate: 2014-10-16T09:59:55Z
+    Hugo Static Site Generator v0.13-DEV-24BBFE7 buildDate: 2014-10-16T10:00:55Z
+
+The format of the date is configurable via the `Params.DateFormat` setting.  `DateFormat` is a string value representing the Go time layout that should be used to format the date output. If `Params.DateFormat` is not set, `time.RFC3339` will be used as the default format.See [time documentation](http://golang.org/pkg/time/#pkg-constants) for more information.
+
+Configuration setting using config.yaml as example:
+
+    Params:
+       DateFormat: "2006-01-02"
+
+Will result in:
+
+    Hugo Static Site Generator v0.13-DEV buildDate: 2014-10-16
+    Hugo Static Site Generator v0.13-DEV-24BBFE7 buildDate: 2014-10-16
+
diff --git a/README.md b/README.md
index 7afd97aa..b20a29bb 100644
--- a/README.md
+++ b/README.md
@@ -23 +23 @@ kind of website including blogs, tumbles and docs.
-**Complete documentation is available at [Hugo Documentation](http://hugo.spf13.com).**
+**Complete documentation is available at [Hugo Documentation](http://gohugo.io).**
@@ -98 +98 @@ We welcome your contributions.  To make the process as seamless as possible, we
-**Complete documentation is available at [Hugo Documentation](http://hugo.spf13.com).**
+**Complete documentation is available at [Hugo Documentation](http://gohugo.io).**
diff --git a/README.md b/README.md
index fd77853e..7afd97aa 100644
--- a/README.md
+++ b/README.md
@@ -12 +12 @@ speed, easy use and configurability. Hugo takes a directory with content and
-templates and renders them into a full html website.
+templates and renders them into a full HTML website.
@@ -14 +14 @@ templates and renders them into a full html website.
-Hugo makes use of markdown files with front matter for meta data.
+Hugo makes use of Markdown files with front matter for meta data.
@@ -29 +29 @@ kind of website including blogs, tumbles and docs.
-Hugo is written in Go with support for Windows, Linux, FreeBSD and OSX.
+Hugo is written in Go with support for Windows, Linux, FreeBSD and OS X.
@@ -32,2 +32,2 @@ The latest release can be found at [hugo releases](https://github.com/spf13/hugo
-We currently build for Windows, Linux, FreeBSD and OS X for x64
-and 386 architectures.
+We currently build for Windows, Linux, FreeBSD and OS X for x64
+and i386 architectures.
@@ -38,2 +38,2 @@ Installation is very easy. Simply download the appropriate version for your
-platform from [hugo releases](https://github.com/spf13/hugo/releases).
-Once downloaded it can be run from anywhere. You don't need to install
+platform from [Hugo Releases](https://github.com/spf13/hugo/releases).
+Once downloaded, it can be run from anywhere. You don't need to install
@@ -43 +43 @@ where you don't have a privileged account.
-Ideally you should install it somewhere in your path for easy use. `/usr/local/bin` 
+Ideally, you should install it somewhere in your path for easy use. `/usr/local/bin`
@@ -63 +63 @@ is the most probable location.
-Because go expects all of your libraries to be found in either $GOROOT or $GOPATH,
+Because Go expects all of your libraries to be found in either $GOROOT or $GOPATH,
@@ -66,2 +66,2 @@ it's helpful to symlink the project to one of the following paths:
- * ln -s /path/to/your/hugo $GOPATH/src/github.com/spf13/hugo
- * ln -s /path/to/your/hugo $GOROOT/src/pkg/github.com/spf13/hugo
+ * `ln -s /path/to/your/hugo $GOPATH/src/github.com/spf13/hugo`
+ * `ln -s /path/to/your/hugo $GOROOT/src/pkg/github.com/spf13/hugo`
@@ -69 +69 @@ it's helpful to symlink the project to one of the following paths:
-#### Get directly from Github:
+#### Get directly from GitHub:
@@ -73 +73 @@ If you only want to build from source, it's even easier.
-    go get github.com/spf13/hugo
+    go get -v github.com/spf13/hugo
@@ -96 +96 @@ We welcome your contributions.  To make the process as seamless as possible, we
-     * Make sure `go test ./...` passes, and go build completes.  Our Travis CI loop will catch most things that are missing.  The exception: Windows.  We run on windows from time to time, but if you have access please check on a Windows machine too.
+     * Make sure `go test ./...` passes, and go build completes.  Our Travis CI loop will catch most things that are missing.  The exception: Windows.  We run on Windows from time to time, but if you have access, please check on a Windows machine too.
diff --git a/README.md b/README.md
index b39ca88f..fd77853e 100644
--- a/README.md
+++ b/README.md
@@ -10 +10 @@ and [friends](http://github.com/spf13/hugo/graphs/contributors) in Go.
-Hugo is a static site generator written in GoLang. It is optimized for
+Hugo is a static site generator written in Go. It is optimized for
@@ -29 +29 @@ kind of website including blogs, tumbles and docs.
-Hugo is written in GoLang with support for Windows, Linux, FreeBSD and OSX.
+Hugo is written in Go with support for Windows, Linux, FreeBSD and OSX.
diff --git a/README.md b/README.md
index e9389794..b39ca88f 100644
--- a/README.md
+++ b/README.md
@@ -46 +46 @@ is the most probable location.
-*The Hugo executible has no external dependencies.*
+*The Hugo executable has no external dependencies.*
diff --git a/README.md b/README.md
index 1c83837c..e9389794 100644
--- a/README.md
+++ b/README.md
@@ -84 +84 @@ If you only want to build from source, it's even easier.
-    go install github.com/spf13/hugo/hugolibs
+    go install github.com/spf13/hugo/hugolib
diff --git a/README.md b/README.md
index b4315430..1c83837c 100644
--- a/README.md
+++ b/README.md
@@ -5,0 +6 @@ and [friends](http://github.com/spf13/hugo/graphs/contributors) in Go.
+[![wercker status](https://app.wercker.com/status/1a0de7d703ce3b80527f00f675e1eb32 "wercker status")](https://app.wercker.com/project/bykey/1a0de7d703ce3b80527f00f675e1eb32)
diff --git a/README.md b/README.md
index 8e519f71..b4315430 100644
--- a/README.md
+++ b/README.md
@@ -97,0 +98,3 @@ We welcome your contributions.  To make the process as seamless as possible, we
+
+[![Analytics](https://ga-beacon.appspot.com/UA-7131036-6/hugo/readme)](https://github.com/igrigorik/ga-beacon)
+[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/spf13/hugo/trend.png)](https://bitdeli.com/free "Bitdeli Badge")
diff --git a/README.md b/README.md
index b6575a23..8e519f71 100644
--- a/README.md
+++ b/README.md
@@ -92,3 +92,4 @@ We welcome your contributions.  To make the process as seamless as possible, we
-		* Have test cases for the new code.  If you have questions about how to do it, please ask in your pull request.
- 		* Squash your commits into a single commit.  `git rebase -i`.  It's okay to force update your pull request.  
-		* Make sure go test ./... passes, and go build completes.  Our Travis CI loop will catch most things that are missing.  The exception, Windows.  We run on windows from time to time, but if you have access please check on a Windows machine too.
+     * Have test cases for the new code.  If you have questions about how to do it, please ask in your pull request.
+     * Run `go fmt`
+     * Squash your commits into a single commit.  `git rebase -i`.  It's okay to force update your pull request.  
+     * Make sure `go test ./...` passes, and go build completes.  Our Travis CI loop will catch most things that are missing.  The exception: Windows.  We run on windows from time to time, but if you have access please check on a Windows machine too.
diff --git a/README.md b/README.md
index b5ef7a29..b6575a23 100644
--- a/README.md
+++ b/README.md
@@ -85,0 +86,10 @@ If you only want to build from source, it's even easier.
+#### Contribution Guidelines
+
+We welcome your contributions.  To make the process as seamless as possible, we ask for the following:
+
+* Go ahead and fork the project and make your changes.  We encourage pull requests to discuss code changes.
+* When you're ready to create a pull request, be sure to:
+		* Have test cases for the new code.  If you have questions about how to do it, please ask in your pull request.
+ 		* Squash your commits into a single commit.  `git rebase -i`.  It's okay to force update your pull request.  
+		* Make sure go test ./... passes, and go build completes.  Our Travis CI loop will catch most things that are missing.  The exception, Windows.  We run on windows from time to time, but if you have access please check on a Windows machine too.
+
diff --git a/README.md b/README.md
index 77d28421..b5ef7a29 100644
--- a/README.md
+++ b/README.md
@@ -4,0 +5,2 @@ and [friends](http://github.com/spf13/hugo/graphs/contributors) in Go.
+[![Build Status](https://travis-ci.org/spf13/hugo.png)](https://travis-ci.org/spf13/hugo)
+
diff --git a/README.md b/README.md
index 58f48599..77d28421 100644
--- a/README.md
+++ b/README.md
@@ -3 +3 @@ A Fast and Flexible Static Site Generator built with love by [spf13](http://spf1
-and [friends](http://github.com/spf13/hugo/contributors) in Go.
+and [friends](http://github.com/spf13/hugo/graphs/contributors) in Go.
diff --git a/README.md b/README.md
index ae67cbc4..58f48599 100644
--- a/README.md
+++ b/README.md
@@ -2,2 +2,2 @@
-
-A really fast static site generator written in GoLang.
+A Fast and Flexible Static Site Generator built with love by [spf13](http://spf13.com) 
+and [friends](http://github.com/spf13/hugo/contributors) in Go.
@@ -14 +14,4 @@ A typical website of moderate size can be
-rendered in a fraction of a second. It is written to work well with any
+rendered in a fraction of a second. A good rule of thumb is that Hugo
+takes around 1 millisecond for each piece of content.
+
+It is written to work well with any
@@ -16,0 +20 @@ kind of website including blogs, tumbles and docs.
+**Complete documentation is available at [Hugo Documentation](http://hugo.spf13.com).**
@@ -39 +43 @@ is the most probable location.
-*the Hugo executible has no external dependencies.*
+*The Hugo executible has no external dependencies.*
@@ -64 +68 @@ it's helpful to symlink the project to one of the following paths:
-If you don't intend to contribute, it's even easier. 
+If you only want to build from source, it's even easier.
@@ -68,6 +71,0 @@ If you don't intend to contribute, it's even easier.
-#### Running Hugo
-
-    cd /path/to/hugo
-    go install github.com/spf13/hugo/hugolibs
-    go run main.go
-
@@ -80,496 +78 @@ If you don't intend to contribute, it's even easier.
-## Source Directory Organization
-
-Hugo takes a single directory and uses it as the input for creating a complete website.
-
-Hugo has a very small amount of configuration, while remaining highly customizable.
-It accomplishes by assuming that you will only provide templates with the intent of
-using them.
-
-An example directory may look like:
-
-    .
-    ├── config.json
-    ├── content
-    |   ├── post
-    |   |   ├── firstpost.md
-    |   |   └── secondpost.md
-    |   └── quote
-    |   |   ├── first.md
-    |   |   └── second.md
-    ├── layouts
-    |   ├── chrome
-    |   |   ├── header.html
-    |   |   └── footer.html
-    |   ├── indexes
-    |   |   ├── category.html
-    |   |   ├── post.html
-    |   |   ├── quote.html
-    |   |   └── tag.html
-    |   ├── post
-    |   |   ├── li.html
-    |   |   ├── single.html
-    |   |   └── summary.html
-    |   ├── quote
-    |   |   ├── li.html
-    |   |   ├── single.html
-    |   |   └── summary.html
-    |   ├── shortcodes
-    |   |   ├── img.html
-    |   |   ├── vimeo.html
-    |   |   └── youtube.html
-    |   ├── index.html
-    |   └── rss.xml
-    └── static
-
-This directory structure tells us a lot about this site:
-
-1. the website intends to have two different types of content, posts and quotes.
-2. It will also apply two different indexes to that content, categories and tags.
-3. It will be displaying content in 3 different views, a list, a summary and a full page view.
-
-Included with the repository is an example site ready to be rendered.
-
-## Configuration
-
-The directory structure and templates provide the majority of the
-configuration for a site. In fact a config file isn't even needed for many websites
-since the defaults used follow commonly used patterns.
-
-**Please note the field names must be all lowercase**
-
-### Config Examples
-
-The following is an example of a yaml config file with the default values:
-
-    ---
-    sourcedir: "content"
-    layoutdir: "layouts"
-    publishdir: "public"
-    builddrafts: false
-    indexes:
-       category: "categories"
-       tag: "tags"
-    baseurl: "http://yoursite.com/"
-    ...
-
-
-The following is an example of a json config file with the default values:
-
-    {
-        "sourcedir": "content",
-        "layoutdir": "layouts",
-        "publishdir": "public",
-        "builddrafts": false,
-        "indexes": {
-           category: "categories",
-           tag: "tags"
-        },
-        "baseurl": "http://yoursite.com/"
-    }
-
-
-The following is an example of a toml config file with the default values:
-
-    sourcedir = "content"
-    layoutdir = "layouts"
-    publishdir = "public"
-    builddrafts = false
-    baseurl = "http://yoursite.com/"
-    [indexes]
-       category = "categories"
-       tag = "tags"
-
-
-## Usage
-Make sure either hugo is in your path or provide a path to it.
-
-    $ hugo --help
-    usage: hugo [flags] []
-      -b, --base-url="": hostname (and path) to the root eg. http://spf13.com/
-      -D, --build-drafts=false: include content marked as draft
-          --config="": config file (default is path/config.yaml|json|toml)
-      -d, --destination="": filesystem path to write files to
-      -h, --help=false: show this help
-          --port="1313": port to run web server on, default :1313
-      -S, --server=false: run a (very) simple web server
-      -s, --source="": filesystem path to read files relative from
-          --uglyurls=false: use /filename.html instead of /filename/
-      -v, --verbose=false: verbose output
-          --version=false: which version of hugo
-      -w, --watch=false: watch filesystem for changes and recreate as needed
-
-The most common use is probably to run hugo with your current
-directory being the input directory.
-
-
-    $ hugo
-    > X pages created
-    > Y indexes created
-
-
-If you are working on things and want to see the changes
-immediately, tell Hugo to watch for changes. **It will
-recreate the site faster than you can tab over to
-your browser to view the changes.**
-
-    $ hugo --source ~/mysite --watch
-       Watching for changes. Press ctrl+c to stop
-       15 pages created
-       0 tags created
-       in 8 ms
-
-Hugo can even run a server and create your site at the same time!
-
-    $hugo --server -ws ~/mysite
-       Watching for changes. Press ctrl+c to stop
-       15 pages created
-       0 tags created
-       in 8 ms
-       Web Server is available at http://localhost:1313
-       Press ctrl+c to stop
-
-# Layout
-
-Hugo is very flexible about how you organize and structure your content.
-
-## Templates
-
-Hugo uses the excellent golang html/template library for it's template engine. It is an extremely
-lightweight engine that provides a very small amount of logic. In our
-experience that it is just the right amount of logic to be able to create a good static website
-
-This document will not cover how to use golang templates, but the [golang docs](http://golang.org/pkg/html/template/)
-provide a good introduction.
-
-### Template roles
-
-There are 5 different kinds of templates that Hugo works with.
-
-#### index.html
-This file must exist in the layouts directory. It is the template used to render the
-homepage of your site.
-
-#### rss.xml
-This file must exist in the layouts directory. It will be used to render all rss documents.
-The one provided in the example application will generate an ATOM format.
-
-*Important: Hugo will automatically add the following header line to this file.*
-
-    <?xml version="1.0" encoding="utf-8" standalone="yes" ?>
-
-#### Indexes
-An index is a page that list multiple pieces of content. If you think of a typical blog, the tag
-pages are good examples of indexes.
-
-
-#### Content Type(s)
-Hugo supports multiple types of content. Another way of looking at this is that Hugo has the ability
-to render content in a variety of ways as determined by the type.
-
-#### Chrome
-Chrome is simply the decoration of your site. It's not a requirement to have this, but in practice
-it's very convenient. Hugo doesn't know anything about Chrome, it's simply a convention that you may
-likely find beneficial. As you create the rest of your templates you will include templates from the
-/layout/chrome directory. I've found it helpful to include a header and footer template
-in Chrome so I can include those in the other full page layouts (index.html, indexes/ type/single.html).
-
-### Adding a new content type
-
-Adding a type is easy.
-
-**Step 1:**
-Create a directory with the name of the type in layouts.Type is always singular.  *Eg /layouts/post*.
-
-**Step 2:**
-Create a file called single.html inside your directory. *Eg /layouts/post/single.html*.
-
-**Step 3:**
-Create a file with the same name as your directory in /layouts/indexes/. *Eg /layouts/index/post.html*.
-
-**Step 4:**
-Many sites support rendering content in a few different ways, for instance a single page view and a
-summary view to be used when displaying a list of contents on a single page. Hugo makes no assumptions
-here about how you want to display your content, and will support as many different views of a content
-type as your site requires. All that is required for these additional views is that a template
-exists in each layout/type directory with the same name.
-
-For these, reviewing the example site will be very helpful in order to understand how these types work.
-
-## Variables
-
-Hugo makes a set of values available to the templates. Go templates are context based. The following
-are available in the context for the templates.
-
-**.Title**  The title for the content. <br>
-**.Description** The description for the content.<br>
-**.Keywords** The meta keywords for this content.<br>
-**.Date** The date the content is published on.<br>
-**.Indexes** These will use the field name of the plural form of the index (see tags and categories above)<br>
-**.Permalink** The Permanent link for this page.<br>
-**.FuzzyWordCount** The approximate number of words in the content.<br>
-**.RSSLink** Link to the indexes' rss link <br>
-
-Any value defined in the front matter, including indexes will be made available under `.Params`.
-Take for example I'm using tags and categories as my indexes. The following would be how I would access them:
-
-**.Params.Tags** <br>
-**.Params.Categories** <br>
-
-Also available is `.Site` which has the following:
-
-**.Site.BaseUrl** The base URL for the site as defined in the config.json file.<br>
-**.Site.Indexes** The names of the indexes of the site.<br>
-**.Site.LastChange** The date of the last change of the most recent content.<br>
-**.Site.Recent** Array of all content ordered by Date, newest first<br>
-
-# Content
-Hugo uses markdown files with headers commonly called the front matter. Hugo respects the organization
-that you provide for your content to minimize any extra configuration, though this can be overridden
-by additional configuration in the front matter.
-
-## Organization
-In Hugo the content should be arranged in the same way they are intended for the rendered website.
-Without any additional configuration the following will just work.
-
-    .
-    └── content
-        ├── post
-        |   ├── firstpost.md   // <- http://site.com/post/firstpost.html
-        |   └── secondpost.md  // <- http://site.com/post/secondpost.html
-        └── quote
-            ├── first.md       // <- http://site.com/quote/first.html
-            └── second.md      // <- http://site.com/quote/second.html
-
-
-## Front Matter
-
-The front matter is one of the features that gives Hugo it's strength. It enables
-you to include the meta data of the content right with it. Hugo supports a few
-different formats each with their own identifying tokens.
-
-Supported formats: <br>
-  **YAML**, identified by '\-\-\-'. <br>
-  **TOML**, indentified with '+++'.<br>
-  **JSON**, a single JSON object which is surrounded by '{' and '}' each on their own line.
-
-### YAML Example
-
-    ---
-    title: "spf13-vim 3.0 release and new website"
-    description: "spf13-vim is a cross platform distribution of vim plugins and resources for Vim."
-    tags: [ ".vimrc", "plugins", "spf13-vim", "vim" ]
-    pubdate: "2012-04-06"
-    categories:
-      - "Development"
-      - "VIM"
-    slug: "spf13-vim-3-0-release-and-new-website"
-    ---
-    Content of the file goes Here
-
-### TOML Example
-
-    +++
-    title = "spf13-vim 3.0 release and new website"
-    description = "spf13-vim is a cross platform distribution of vim plugins and resources for Vim."
-    tags = [ ".vimrc", "plugins", "spf13-vim", "vim" ]
-    Pubdate = "2012-04-06"
-    categories = [
-      "Development",
-      "VIM"
-    ]
-    slug = "spf13-vim-3-0-release-and-new-website"
-    +++
-    Content of the file goes Here
-
-### JSON Example
-
-    {
-    "title": "spf13-vim 3.0 release and new website",
-    "description": "spf13-vim is a cross platform distribution of vim plugins and resources for Vim.",
-    "tags": [ ".vimrc", "plugins", "spf13-vim", "vim" ],
-    "date": "2012-04-06",
-    "categories": [
-        "Development",
-        "VIM"
-    ],
-    "slug": "spf13-vim-3-0-release-and-new-website",
-    }
-    Content of the file goes Here
-
-### Variables
-There are a few predefined variables that Hugo is aware of and utilizes. The user can also create
-any variable they want to. These will be placed into the `.Params` variable available to the templates.
-**Field names are case insensitive.**
-
-#### Required
-
-**title**  The title for the content. <br>
-**description** The description for the content.<br>
-**date** The date the content will be sorted by.<br>
-**indexes** These will use the field name of the plural form of the index (see tags and categories above)
-
-#### Optional
-
-**draft** If true the content will not be rendered unless `hugo` is called with -d<br>
-**type** The type of the content (will be derived from the directory automatically if unset).<br>
-**markup** (Experimental) Specify "rst" for reStructuredText (requires
-           `rst2html`,) or "md" (default) for the Markdown.<br>
-**slug** The token to appear in the tail of the url.<br>
-  *or*<br>
-**url** The full path to the content from the web root.<br>
-*If neither is present the filename will be used.*
-
-## Example
-Somethings are better shown than explained. The following is a very basic example of a content file:
-
-**mysite/project/nitro.md  <- http://mysite.com/project/nitro.html**
-
-    ---
-    Title: "Nitro : A quick and simple profiler for golang"
-    Description": ""
-    Keywords": [ "Development", "golang", "profiling" ]
-    Tags": [ "Development", "golang", "profiling" ]
-    Pubdate": "2013-06-19"
-    Topics": [ "Development", "GoLang" ]
-    Slug": "nitro"
-    project_url": "http://github.com/spf13/nitro"
-    ---
-
-    # Nitro
-
-    Quick and easy performance analyzer library for golang.
-
-    ## Overview
-
-    Nitro is a quick and easy performance analyzer library for golang.
-    It is useful for comparing A/B against different drafts of functions
-    or different functions.
-
-    ## Implementing Nitro
-
-    Using Nitro is simple. First use go get to install the latest version
-    of the library.
-
-        $ go get github.com/spf13/nitro
-
-    Next include nitro in your application.
-
-
-# Extras
-
-## Shortcodes
-Because Hugo uses markdown for it's content format, it was clear that there's a lot of things that
-markdown doesn't support well. This is good, the simple nature of markdown is exactly why we chose it.
-
-However we cannot accept being constrained by our simple format. Also unacceptable is writing raw
-html in our markdown every time we want to include unsupported content such as a video. To do
-so is in complete opposition to the intent of using a bare bones format for our content and
-utilizing templates to apply styling for display.
-
-To avoid both of these limitations Hugo has full support for shortcodes.
-
-### What is a shortcode?
-A shortcode is a simple snippet inside a markdown file that Hugo will render using a template.
-
-Short codes are designated by the opening and closing characters of '{{%' and '%}}' respectively.
-Short codes are space delimited. The first word is always the name of the shortcode.  Following the
-name are the parameters. The author of the shortcode can choose if the short code
-will use positional parameters or named parameters (but not both). A good rule of thumb is that if a
-short code has a single required value in the case of the youtube example below then positional
-works very well. For more complex layouts with optional parameters named parameters work best.
-
-The format for named parameters models that of html with the format name="value"
-
-### Example: youtube
-
-    {{% youtube 09jf3ow9jfw %}}
-
-This would be rendered as
-
-    <div class="embed video-player">
-    <iframe class="youtube-player" type="text/html"
-        width="640" height="385"
-        src="http://www.youtube.com/embed/09jf3ow9jfw"
-        allowfullscreen frameborder="0">
-    </iframe>
-    </div>
-
-### Example: image with caption
-
-    {{% img src="/media/spf13.jpg" title="Steve Francia" %}}
-
-Would be rendered as:
-
-    <figure >
-        <img src="/media/spf13.jpg"  />
-        <figcaption>
-            <h4>Steve Francia</h4>
-        </figcaption>
-    </figure>
-
-
-### Creating a shortcode
-
-All that you need to do to create a shortcode is place a template in the layouts/shortcodes directory.
-
-The template name will be the name of the shortcode.
-
-**Inside the template**
-
-To access a parameter by either position or name the index method can be used.
-
-    {{ index .Params 0 }}
-    or
-    {{ index .Params "class" }}
-
-To check if a parameter has been provided use the isset method provided by Hugo.
-
-    {{ if isset .Params "class"}} class="{{ index .Params "class"}}" {{ end }}
-
-
-# Meta
-
-## Release Notes
-
-* **0.8.0** August 1, 2013
-  * Added support for pretty urls (filename/index.html vs filename.html)
-  * Hugo supports a destination directory
-  * Will efficiently sync content in static to destination directory
-  * Cleaned up options.. now with support for short and long options
-  * Added support for TOML
-  * Added support for YAML
-  * Added support for Previous & Next
-  * Support for Series
-  * Adding verbose output
-  * Loads of bugfixes
-* **0.7.0** July 4, 2013
-  * Hugo now includes a simple server
-  * First public release
-* **0.6.0** July 2, 2013
-  * Hugo includes an [example documentation site](http://hugo.spf13.com) which it builds
-* **0.5.0** June 25, 2013
-  * Hugo is quite usable and able to build [spf13.com](http://spf13.com)
-
-## Roadmap
-In no particular order, here is what I'm working on:
-
- * Pagination
- * Support for top level pages (other than homepage)
- * Series support
- * Syntax highlighting
- * Previous & Next
- * Related Posts
- * Support for other formats
-
-## Contributing
-
-1. Fork it
-2. Create your feature branch (`git checkout -b my-new-feature`)
-3. Commit your changes (`git commit -am 'Add some feature'`)
-4. Push to the branch (`git push origin my-new-feature`)
-5. Create new Pull Request
-
-## Contributors
-
-* [spf13](https://github.com/spf13)
-
+#### Running Hugo
@@ -577 +80,3 @@ In no particular order, here is what I'm working on:
-## License
+    cd /path/to/hugo
+    go install github.com/spf13/hugo/hugolibs
+    go run main.go
@@ -579 +84 @@ In no particular order, here is what I'm working on:
-Hugo is released under the Simple Public License. See [LICENSE.md](https://github.com/spf13/hugo/blob/master/LICENSE.md).
+**Complete documentation is available at [Hugo Documentation](http://hugo.spf13.com).**
diff --git a/README.md b/README.md
index 3c9e21e4..ae67cbc4 100644
--- a/README.md
+++ b/README.md
@@ -70,0 +71 @@ If you don't intend to contribute, it's even easier.
+    go install github.com/spf13/hugo/hugolibs
@@ -121 +122 @@ An example directory may look like:
-    └── public
+    └── static
@@ -188 +189 @@ Make sure either hugo is in your path or provide a path to it.
-      -d, --build-drafts=false: include content marked as draft
+      -D, --build-drafts=false: include content marked as draft
@@ -189,0 +191 @@ Make sure either hugo is in your path or provide a path to it.
+      -d, --destination="": filesystem path to write files to
@@ -216,0 +219 @@ your browser to view the changes.**
+       in 8 ms
@@ -223,0 +227 @@ Hugo can even run a server and create your site at the same time!
+       in 8 ms
@@ -529,0 +534,11 @@ To check if a parameter has been provided use the isset method provided by Hugo.
+* **0.8.0** August 1, 2013
+  * Added support for pretty urls (filename/index.html vs filename.html)
+  * Hugo supports a destination directory
+  * Will efficiently sync content in static to destination directory
+  * Cleaned up options.. now with support for short and long options
+  * Added support for TOML
+  * Added support for YAML
+  * Added support for Previous & Next
+  * Support for Series
+  * Adding verbose output
+  * Loads of bugfixes
@@ -547,2 +561,0 @@ In no particular order, here is what I'm working on:
- * Support for TOML front matter -- in head
- * Proper YAML support for front matter -- in head
diff --git a/README.md b/README.md
index 4df41135..3c9e21e4 100644
--- a/README.md
+++ b/README.md
@@ -28 +28 @@ and 386 architectures.
-## Installing Hugo (binary)
+### Installing Hugo (binary)
@@ -41 +41 @@ is the most probable location.
-## Installing from source
+### Installing from source
@@ -43 +43 @@ is the most probable location.
-### Dependencies
+#### Dependencies
@@ -50 +50 @@ is the most probable location.
-### Clone locally (for contributors):
+#### Clone locally (for contributors):
@@ -62 +62 @@ it's helpful to symlink the project to one of the following paths:
-### Get directly from Github:
+#### Get directly from Github:
@@ -68 +68 @@ If you don't intend to contribute, it's even easier.
-### Running Hugo
+#### Running Hugo
@@ -73 +73 @@ If you don't intend to contribute, it's even easier.
-### Building Hugo
+#### Building Hugo
diff --git a/README.md b/README.md
index 8e4085d3..4df41135 100644
--- a/README.md
+++ b/README.md
@@ -27,0 +28,2 @@ and 386 architectures.
+## Installing Hugo (binary)
+
@@ -29 +31,2 @@ Installation is very easy. Simply download the appropriate version for your
-platform. Once downloaded it can be run from anywhere. You don't need to install
+platform from [hugo releases](https://github.com/spf13/hugo/releases).
+Once downloaded it can be run from anywhere. You don't need to install
@@ -33 +36 @@ where you don't have a privileged account.
-Ideally you should install it somewhere in your path for easy use. `/usr/local/bin`
+Ideally you should install it somewhere in your path for easy use. `/usr/local/bin` 
@@ -36 +39 @@ is the most probable location.
-*Hugo has no external dependencies.*
+*the Hugo executible has no external dependencies.*
@@ -40 +42,0 @@ is the most probable location.
-<<<<<<< HEAD
@@ -43,8 +44,0 @@ is the most probable location.
-Make sure you have a recent version of go installed. Hugo requires go 1.1+.
-
-**Due to packaging dependencies the following are also required: Git, Bazaar, Mercurial**
-
-### Cloning and Installing dependencies
-
-Pre-requisites:
-
@@ -56 +50 @@ Pre-requisites:
-### Getting locally (for contributors):
+### Clone locally (for contributors):
@@ -58 +51,0 @@ Pre-requisites:
-    # clone and build
@@ -63 +56,9 @@ Pre-requisites:
-### Install directly from Github:
+Because go expects all of your libraries to be found in either $GOROOT or $GOPATH,
+it's helpful to symlink the project to one of the following paths:
+
+ * ln -s /path/to/your/hugo $GOPATH/src/github.com/spf13/hugo
+ * ln -s /path/to/your/hugo $GOROOT/src/pkg/github.com/spf13/hugo
+
+### Get directly from Github:
+
+If you don't intend to contribute, it's even easier. 
@@ -66 +66,0 @@ Pre-requisites:
-    go build -o hugo main.go
@@ -70 +70 @@ Pre-requisites:
-    cd hugo
+    cd /path/to/hugo
@@ -75 +75 @@ Pre-requisites:
-    cd hugo
+    cd /path/to/hugo
@@ -76,0 +77 @@ Pre-requisites:
+    mv hugo /usr/local/bin/
diff --git a/README.md b/README.md
index 3df6a5d6..8e4085d3 100644
--- a/README.md
+++ b/README.md
@@ -62 +61,0 @@ Pre-requisites:
-    go build -o hugo main.go
diff --git a/README.md b/README.md
index 1755cefb..3df6a5d6 100644
--- a/README.md
+++ b/README.md
@@ -39,0 +40,9 @@ is the most probable location.
+<<<<<<< HEAD
+### Dependencies
+
+Make sure you have a recent version of go installed. Hugo requires go 1.1+.
+
+**Due to packaging dependencies the following are also required: Git, Bazaar, Mercurial**
+
+### Cloning and Installing dependencies
+
@@ -44,0 +54 @@ Pre-requisites:
+* Bazaar
@@ -46,5 +56 @@ Pre-requisites:
-Building locally (for contributors):
-
-    # install go dependencies
-    go get github.com/howeyc/fsnotify
-    go get github.com/spf13/hugo/hugolib
+### Getting locally (for contributors):
@@ -54,0 +61,6 @@ Building locally (for contributors):
+    go get
+    go build -o hugo main.go
+
+### Install directly from Github:
+
+    go get github.com/spf13/hugo
@@ -57 +69,4 @@ Building locally (for contributors):
-Building directly from Github:
+### Running Hugo
+
+    cd hugo
+    go run main.go
@@ -59 +74,4 @@ Building directly from Github:
-   go get github.com/spf13/hugo
+### Building Hugo
+
+    cd hugo
+    go build -o hugo main.go
@@ -169,9 +187,11 @@ Make sure either hugo is in your path or provide a path to it.
-      -b="": hostname (and path) to the root eg. http://spf13.com/
-      -c="config.json": config file (default is path/config.json)
-      -d=false: include content marked as draft
-      -h=false: show this help
-      -k=false: analyze content and provide feedback
-      -p="": filesystem path to read files relative from
-      -w=false: watch filesystem for changes and recreate as needed
-      -s=false: a (very) simple webserver
-      -port="1313": port for webserver to run on
+      -b, --base-url="": hostname (and path) to the root eg. http://spf13.com/
+      -d, --build-drafts=false: include content marked as draft
+          --config="": config file (default is path/config.yaml|json|toml)
+      -h, --help=false: show this help
+          --port="1313": port to run web server on, default :1313
+      -S, --server=false: run a (very) simple web server
+      -s, --source="": filesystem path to read files relative from
+          --uglyurls=false: use /filename.html instead of /filename/
+      -v, --verbose=false: verbose output
+          --version=false: which version of hugo
+      -w, --watch=false: watch filesystem for changes and recreate as needed
@@ -193 +213,6 @@ your browser to view the changes.**
-    $ hugo -p ~/mysite -w
+    $ hugo --source ~/mysite --watch
+       Watching for changes. Press ctrl+c to stop
+       15 pages created
+       0 tags created
+
+Hugo can even run a server and create your site at the same time!
@@ -194,0 +220,6 @@ your browser to view the changes.**
+    $hugo --server -ws ~/mysite
+       Watching for changes. Press ctrl+c to stop
+       15 pages created
+       0 tags created
+       Web Server is available at http://localhost:1313
+       Press ctrl+c to stop
diff --git a/README.md b/README.md
index 38d57bcb..1755cefb 100644
--- a/README.md
+++ b/README.md
@@ -7 +7 @@ A really fast static site generator written in GoLang.
-Hugo is a static site generator written in GoLang. It is optimized for 
+Hugo is a static site generator written in GoLang. It is optimized for
@@ -11 +11 @@ templates and renders them into a full html website.
-Hugo makes use of markdown files with front matter for meta data.  
+Hugo makes use of markdown files with front matter for meta data.
@@ -13 +13 @@ Hugo makes use of markdown files with front matter for meta data.
-A typical website of moderate size can be 
+A typical website of moderate size can be
@@ -15 +15 @@ rendered in a fraction of a second. It is written to work well with any
-kind of website including blogs, tumbles and docs. 
+kind of website including blogs, tumbles and docs.
@@ -26 +26 @@ We currently build for Windows, Linux, FreeBSD and OS X for x64
-and 386 architectures. 
+and 386 architectures.
@@ -33 +33 @@ where you don't have a privileged account.
-Ideally you should install it somewhere in your path for easy use. `/usr/local/bin` 
+Ideally you should install it somewhere in your path for easy use. `/usr/local/bin`
@@ -40 +40 @@ is the most probable location.
-### Dependencies
+Pre-requisites:
@@ -42 +42,3 @@ is the most probable location.
-Make sure you have a recent version of go installed. Hugo requires go 1.1+.
+* Git
+* Go 1.1+
+* Mercurial
@@ -44 +46 @@ Make sure you have a recent version of go installed. Hugo requires go 1.1+.
-**Due to packaging dependencies the following are also required: Git, Bazaar, Mercurial**
+Building locally (for contributors):
@@ -46 +48,3 @@ Make sure you have a recent version of go installed. Hugo requires go 1.1+.
-### Cloning and Installing dependencies
+    # install go dependencies
+    go get github.com/howeyc/fsnotify
+    go get github.com/spf13/hugo/hugolib
@@ -47,0 +52 @@ Make sure you have a recent version of go installed. Hugo requires go 1.1+.
+    # clone and build
@@ -50,3 +55 @@ Make sure you have a recent version of go installed. Hugo requires go 1.1+.
-    go get
-
-### Running Hugo
+    go build -o hugo main.go
@@ -54,2 +57 @@ Make sure you have a recent version of go installed. Hugo requires go 1.1+.
-    cd hugo
-    go run main.go
+Building directly from Github:
@@ -57,4 +59 @@ Make sure you have a recent version of go installed. Hugo requires go 1.1+.
-### Building Hugo
-
-    cd hugo
-    go build -o hugo main.go
+   go get github.com/spf13/hugo
@@ -66 +65 @@ Hugo takes a single directory and uses it as the input for creating a complete w
-Hugo has a very small amount of configuration, while remaining highly customizable. 
+Hugo has a very small amount of configuration, while remaining highly customizable.
@@ -124 +123 @@ since the defaults used follow commonly used patterns.
-The following is an example of a yaml config file with the default values: 
+The following is an example of a yaml config file with the default values:
@@ -138 +137 @@ The following is an example of a yaml config file with the default values:
-The following is an example of a json config file with the default values: 
+The following is an example of a json config file with the default values:
@@ -153 +152 @@ The following is an example of a json config file with the default values:
-The following is an example of a toml config file with the default values: 
+The following is an example of a toml config file with the default values:
@@ -165 +164 @@ The following is an example of a toml config file with the default values:
-## Usage 
+## Usage
@@ -170,13 +169,11 @@ Make sure either hugo is in your path or provide a path to it.
-      -b, --base-url="": hostname (and path) to the root eg. http://spf13.com/
-      -d, --build-drafts=false: include content marked as draft
-          --config="": config file (default is path/config.yaml|json|toml)
-      -h, --help=false: show this help
-          --port="1313": port to run web server on, default :1313
-      -S, --server=false: run a (very) simple web server
-      -s, --source="": filesystem path to read files relative from
-          --uglyurls=false: use /filename.html instead of /filename/
-      -v, --verbose=false: verbose output
-          --version=false: which version of hugo
-      -w, --watch=false: watch filesystem for changes and recreate as needed
-
-The most common use is probably to run hugo with your current 
+      -b="": hostname (and path) to the root eg. http://spf13.com/
+      -c="config.json": config file (default is path/config.json)
+      -d=false: include content marked as draft
+      -h=false: show this help
+      -k=false: analyze content and provide feedback
+      -p="": filesystem path to read files relative from
+      -w=false: watch filesystem for changes and recreate as needed
+      -s=false: a (very) simple webserver
+      -port="1313": port for webserver to run on
+
+The most common use is probably to run hugo with your current
@@ -191,3 +188,3 @@ directory being the input directory.
-If you are working on things and want to see the changes 
-immediately, tell Hugo to watch for changes. **It will 
-recreate the site faster than you can tab over to 
+If you are working on things and want to see the changes
+immediately, tell Hugo to watch for changes. **It will
+recreate the site faster than you can tab over to
@@ -196,6 +193 @@ your browser to view the changes.**
-    $ hugo --source ~/mysite --watch
-       Watching for changes. Press ctrl+c to stop
-       15 pages created
-       0 tags created
-
-Hugo can even run a server and create your site at the same time!
+    $ hugo -p ~/mysite -w
@@ -203,6 +194,0 @@ Hugo can even run a server and create your site at the same time!
-    $hugo --server -ws ~/mysite
-       Watching for changes. Press ctrl+c to stop
-       15 pages created
-       0 tags created
-       Web Server is available at http://localhost:1313
-       Press ctrl+c to stop
@@ -217 +203 @@ Hugo uses the excellent golang html/template library for it's template engine. I
-lightweight engine that provides a very small amount of logic. In our 
+lightweight engine that provides a very small amount of logic. In our
@@ -228 +214 @@ There are 5 different kinds of templates that Hugo works with.
-This file must exist in the layouts directory. It is the template used to render the 
+This file must exist in the layouts directory. It is the template used to render the
@@ -233 +219 @@ This file must exist in the layouts directory. It will be used to render all rss
-The one provided in the example application will generate an ATOM format. 
+The one provided in the example application will generate an ATOM format.
@@ -240 +226 @@ The one provided in the example application will generate an ATOM format.
-An index is a page that list multiple pieces of content. If you think of a typical blog, the tag 
+An index is a page that list multiple pieces of content. If you think of a typical blog, the tag
@@ -251,2 +237,2 @@ it's very convenient. Hugo doesn't know anything about Chrome, it's simply a con
-likely find beneficial. As you create the rest of your templates you will include templates from the 
-/layout/chrome directory. I've found it helpful to include a header and footer template 
+likely find beneficial. As you create the rest of your templates you will include templates from the
+/layout/chrome directory. I've found it helpful to include a header and footer template
@@ -269 +255 @@ Create a file with the same name as your directory in /layouts/indexes/. *Eg /la
-Many sites support rendering content in a few different ways, for instance a single page view and a 
+Many sites support rendering content in a few different ways, for instance a single page view and a
@@ -291 +277 @@ are available in the context for the templates.
-Any value defined in the front matter, including indexes will be made available under `.Params`. 
+Any value defined in the front matter, including indexes will be made available under `.Params`.
@@ -294,2 +280,2 @@ Take for example I'm using tags and categories as my indexes. The following woul
-**.Params.Tags** <br> 
-**.Params.Categories** <br> 
+**.Params.Tags** <br>
+**.Params.Categories** <br>
@@ -326,2 +312,2 @@ The front matter is one of the features that gives Hugo it's strength. It enable
-you to include the meta data of the content right with it. Hugo supports a few 
-different formats each with their own identifying tokens. 
+you to include the meta data of the content right with it. Hugo supports a few
+different formats each with their own identifying tokens.
@@ -346 +332 @@ Supported formats: <br>
-    Content of the file goes Here 
+    Content of the file goes Here
@@ -361 +347 @@ Supported formats: <br>
-    Content of the file goes Here 
+    Content of the file goes Here
@@ -376 +362 @@ Supported formats: <br>
-    Content of the file goes Here 
+    Content of the file goes Here
@@ -440 +426 @@ Somethings are better shown than explained. The following is a very basic exampl
-Because Hugo uses markdown for it's content format, it was clear that there's a lot of things that 
+Because Hugo uses markdown for it's content format, it was clear that there's a lot of things that
@@ -444,2 +430,2 @@ However we cannot accept being constrained by our simple format. Also unacceptab
-html in our markdown every time we want to include unsupported content such as a video. To do 
-so is in complete opposition to the intent of using a bare bones format for our content and 
+html in our markdown every time we want to include unsupported content such as a video. To do
+so is in complete opposition to the intent of using a bare bones format for our content and
@@ -454 +440 @@ Short codes are designated by the opening and closing characters of '{{%' and '%
-Short codes are space delimited. The first word is always the name of the shortcode.  Following the 
+Short codes are space delimited. The first word is always the name of the shortcode.  Following the
@@ -466 +452 @@ The format for named parameters models that of html with the format name="value"
-This would be rendered as 
+This would be rendered as
@@ -470 +456 @@ This would be rendered as
-        width="640" height="385" 
+        width="640" height="385"
diff --git a/README.md b/README.md
index 623da591..38d57bcb 100644
--- a/README.md
+++ b/README.md
@@ -51 +50,0 @@ Make sure you have a recent version of go installed. Hugo requires go 1.1+.
-    go build -o hugo main.go
diff --git a/README.md b/README.md
index cd57ec91..623da591 100644
--- a/README.md
+++ b/README.md
@@ -171,9 +171,11 @@ Make sure either hugo is in your path or provide a path to it.
-      -b="": hostname (and path) to the root eg. http://spf13.com/
-      -c="config.json": config file (default is path/config.json)
-      -d=false: include content marked as draft
-      -h=false: show this help
-      -k=false: analyze content and provide feedback
-      -p="": filesystem path to read files relative from
-      -w=false: watch filesystem for changes and recreate as needed
-      -s=false: a (very) simple webserver
-      -port="1313": port for webserver to run on
+      -b, --base-url="": hostname (and path) to the root eg. http://spf13.com/
+      -d, --build-drafts=false: include content marked as draft
+          --config="": config file (default is path/config.yaml|json|toml)
+      -h, --help=false: show this help
+          --port="1313": port to run web server on, default :1313
+      -S, --server=false: run a (very) simple web server
+      -s, --source="": filesystem path to read files relative from
+          --uglyurls=false: use /filename.html instead of /filename/
+      -v, --verbose=false: verbose output
+          --version=false: which version of hugo
+      -w, --watch=false: watch filesystem for changes and recreate as needed
@@ -195 +197,4 @@ your browser to view the changes.**
-    $ hugo -p ~/mysite -w
+    $ hugo --source ~/mysite --watch
+       Watching for changes. Press ctrl+c to stop
+       15 pages created
+       0 tags created
@@ -196,0 +202,8 @@ your browser to view the changes.**
+Hugo can even run a server and create your site at the same time!
+
+    $hugo --server -ws ~/mysite
+       Watching for changes. Press ctrl+c to stop
+       15 pages created
+       0 tags created
+       Web Server is available at http://localhost:1313
+       Press ctrl+c to stop
diff --git a/README.md b/README.md
index 1d1ad44f..cd57ec91 100644
--- a/README.md
+++ b/README.md
@@ -39,0 +40,2 @@ is the most probable location.
+### Dependencies
+
@@ -41,0 +44,4 @@ Make sure you have a recent version of go installed. Hugo requires go 1.1+.
+**Due to packaging dependencies the following are also required: Git, Bazaar, Mercurial**
+
+### Cloning and Installing dependencies
+
@@ -43,0 +50 @@ Make sure you have a recent version of go installed. Hugo requires go 1.1+.
+    go get
@@ -45,0 +53,9 @@ Make sure you have a recent version of go installed. Hugo requires go 1.1+.
+### Running Hugo
+
+    cd hugo
+    go run main.go
+
+### Building Hugo
+
+    cd hugo
+    go build -o hugo main.go
diff --git a/README.md b/README.md
index d0f371b5..1d1ad44f 100644
--- a/README.md
+++ b/README.md
@@ -109,0 +110 @@ The following is an example of a yaml config file with the default values:
+
@@ -122,0 +124 @@ The following is an example of a json config file with the default values:
+
diff --git a/README.md b/README.md
index 555e7fa6..d0f371b5 100644
--- a/README.md
+++ b/README.md
@@ -105 +105 @@ since the defaults used follow commonly used patterns.
-The following is an example of a config file with the default values
+**Please note the field names must be all lowercase**
@@ -106,0 +107,16 @@ The following is an example of a config file with the default values
+### Config Examples
+
+The following is an example of a yaml config file with the default values: 
+    ---
+    sourcedir: "content"
+    layoutdir: "layouts"
+    publishdir: "public"
+    builddrafts: false
+    indexes:
+       category: "categories"
+       tag: "tags"
+    baseurl: "http://yoursite.com/"
+    ...
+
+
+The following is an example of a json config file with the default values: 
@@ -108,6 +124,9 @@ The following is an example of a config file with the default values
-        "SourceDir" : "content",
-        "LayoutDir" : "layouts",
-        "PublishDir" : "public",
-        "BuildDrafts" : false,
-        "Tags" : { "category" : "categories", "tag" : "tags" },
-        "BaseUrl"    : "http://yourSite.com/"
+        "sourcedir": "content",
+        "layoutdir": "layouts",
+        "publishdir": "public",
+        "builddrafts": false,
+        "indexes": {
+           category: "categories",
+           tag: "tags"
+        },
+        "baseurl": "http://yoursite.com/"
@@ -115,0 +135,13 @@ The following is an example of a config file with the default values
+
+The following is an example of a toml config file with the default values: 
+
+    sourcedir = "content"
+    layoutdir = "layouts"
+    publishdir = "public"
+    builddrafts = false
+    baseurl = "http://yoursite.com/"
+    [indexes]
+       category = "categories"
+       tag = "tags"
+
+
diff --git a/README.md b/README.md
index c56dc315..555e7fa6 100644
--- a/README.md
+++ b/README.md
@@ -265 +265,37 @@ you to include the meta data of the content right with it. Hugo supports a few
-different formats. The main format supported is JSON. Here is an example:
+different formats each with their own identifying tokens. 
+
+Supported formats: <br>
+  **YAML**, identified by '\-\-\-'. <br>
+  **TOML**, indentified with '+++'.<br>
+  **JSON**, a single JSON object which is surrounded by '{' and '}' each on their own line.
+
+### YAML Example
+
+    ---
+    title: "spf13-vim 3.0 release and new website"
+    description: "spf13-vim is a cross platform distribution of vim plugins and resources for Vim."
+    tags: [ ".vimrc", "plugins", "spf13-vim", "vim" ]
+    pubdate: "2012-04-06"
+    categories:
+      - "Development"
+      - "VIM"
+    slug: "spf13-vim-3-0-release-and-new-website"
+    ---
+    Content of the file goes Here 
+
+### TOML Example
+
+    +++
+    title = "spf13-vim 3.0 release and new website"
+    description = "spf13-vim is a cross platform distribution of vim plugins and resources for Vim."
+    tags = [ ".vimrc", "plugins", "spf13-vim", "vim" ]
+    Pubdate = "2012-04-06"
+    categories = [
+      "Development",
+      "VIM"
+    ]
+    slug = "spf13-vim-3-0-release-and-new-website"
+    +++
+    Content of the file goes Here 
+
+### JSON Example
@@ -268,6 +304,9 @@ different formats. The main format supported is JSON. Here is an example:
-        "Title": "spf13-vim 3.0 release and new website",
-        "Description": "spf13-vim is a cross platform distribution of vim plugins and resources for Vim.",
-        "Tags": [ ".vimrc", "plugins", "spf13-vim", "vim" ],
-        "Pubdate": "2012-04-06",
-        "Categories": [ "Development", "VIM" ],
-        "Slug": "spf13-vim-3-0-release-and-new-website"
+    "title": "spf13-vim 3.0 release and new website",
+    "description": "spf13-vim is a cross platform distribution of vim plugins and resources for Vim.",
+    "tags": [ ".vimrc", "plugins", "spf13-vim", "vim" ],
+    "date": "2012-04-06",
+    "categories": [
+        "Development",
+        "VIM"
+    ],
+    "slug": "spf13-vim-3-0-release-and-new-website",
@@ -274,0 +314 @@ different formats. The main format supported is JSON. Here is an example:
+    Content of the file goes Here 
@@ -278,0 +319 @@ any variable they want to. These will be placed into the `.Params` variable avai
+**Field names are case insensitive.**
@@ -282,4 +323,4 @@ any variable they want to. These will be placed into the `.Params` variable avai
-**Title**  The title for the content. <br>
-**Description** The description for the content.<br>
-**Pubdate** The date the content will be sorted by.<br>
-**Indexes** These will use the field name of the plural form of the index (see tags and categories above)
+**title**  The title for the content. <br>
+**description** The description for the content.<br>
+**date** The date the content will be sorted by.<br>
+**indexes** These will use the field name of the plural form of the index (see tags and categories above)
@@ -289,3 +330,5 @@ any variable they want to. These will be placed into the `.Params` variable avai
-**Draft** If true the content will not be rendered unless `hugo` is called with -d<br>
-**Type** The type of the content (will be derived from the directory automatically if unset).<br>
-**Slug** The token to appear in the tail of the url.<br>
+**draft** If true the content will not be rendered unless `hugo` is called with -d<br>
+**type** The type of the content (will be derived from the directory automatically if unset).<br>
+**markup** (Experimental) Specify "rst" for reStructuredText (requires
+           `rst2html`,) or "md" (default) for the Markdown.<br>
+**slug** The token to appear in the tail of the url.<br>
@@ -293 +336 @@ any variable they want to. These will be placed into the `.Params` variable avai
-**Url** The full path to the content from the web root.<br>
+**url** The full path to the content from the web root.<br>
@@ -301,10 +344,10 @@ Somethings are better shown than explained. The following is a very basic exampl
-    {
-        "Title": "Nitro : A quick and simple profiler for golang",
-        "Description": "",
-        "Keywords": [ "Development", "golang", "profiling" ],
-        "Tags": [ "Development", "golang", "profiling" ],
-        "Pubdate": "2013-06-19",
-        "Topics": [ "Development", "GoLang" ],
-        "Slug": "nitro",
-        "project_url": "http://github.com/spf13/nitro"
-    }
+    ---
+    Title: "Nitro : A quick and simple profiler for golang"
+    Description": ""
+    Keywords": [ "Development", "golang", "profiling" ]
+    Tags": [ "Development", "golang", "profiling" ]
+    Pubdate": "2013-06-19"
+    Topics": [ "Development", "GoLang" ]
+    Slug": "nitro"
+    project_url": "http://github.com/spf13/nitro"
+    ---
@@ -332 +374,0 @@ Somethings are better shown than explained. The following is a very basic exampl
-
@@ -426,2 +468,2 @@ In no particular order, here is what I'm working on:
- * Support for TOML front matter
- * Proper YAML support for front matter
+ * Support for TOML front matter -- in head
+ * Proper YAML support for front matter -- in head
diff --git a/README.md b/README.md
index 74fdf938..c56dc315 100644
--- a/README.md
+++ b/README.md
@@ -24 +24 @@ Hugo is written in GoLang with support for Windows, Linux, FreeBSD and OSX.
-The latest release can be found at [hugo releases](https://github.com/spf13/hugo/releases)
+The latest release can be found at [hugo releases](https://github.com/spf13/hugo/releases).
@@ -129 +129 @@ Make sure either hugo is in your path or provide a path to it.
-      -p="1313": port for webserver to run on
+      -port="1313": port for webserver to run on
diff --git a/README.md b/README.md
index 8a50b821..74fdf938 100644
--- a/README.md
+++ b/README.md
@@ -21,0 +22,6 @@ kind of website including blogs, tumbles and docs.
+Hugo is written in GoLang with support for Windows, Linux, FreeBSD and OSX.
+
+The latest release can be found at [hugo releases](https://github.com/spf13/hugo/releases)
+We currently build for Windows, Linux, FreeBSD and OS X for x64
+and 386 architectures. 
+
@@ -23 +29,3 @@ Installation is very easy. Simply download the appropriate version for your
-platform. Hugo is written in GoLang with support for Windows, Linux and OSX.
+platform. Once downloaded it can be run from anywhere. You don't need to install
+it into a global location. This works well for shared hosts and other systems
+where you don't have a privileged account.
@@ -25 +33 @@ platform. Hugo is written in GoLang with support for Windows, Linux and OSX.
-Please make sure that you place the executable in your path. `/usr/local/bin` 
+Ideally you should install it somewhere in your path for easy use. `/usr/local/bin` 
@@ -28,2 +36 @@ is the most probable location.
-Hugo doesn't have any external dependencies, but can benefit from external
-programs.
+*Hugo has no external dependencies.*
@@ -130 +137 @@ directory being the input directory.
-    > Y indicies created
+    > Y indexes created
@@ -406 +413 @@ To check if a parameter has been provided use the isset method provided by Hugo.
-  * Hugo includes an example documentation site which it builds
+  * Hugo includes an [example documentation site](http://hugo.spf13.com) which it builds
@@ -408 +415 @@ To check if a parameter has been provided use the isset method provided by Hugo.
-  * Hugo is quite usable and able to build spf13.com
+  * Hugo is quite usable and able to build [spf13.com](http://spf13.com)
diff --git a/README.md b/README.md
index 78bcc5a6..8a50b821 100644
--- a/README.md
+++ b/README.md
@@ -30,0 +31,9 @@ programs.
+## Installing from source
+
+Make sure you have a recent version of go installed. Hugo requires go 1.1+.
+
+    git clone https://github.com/spf13/hugo
+    cd hugo
+    go build -o hugo main.go
+
+
diff --git a/README.md b/README.md
index 000e4d8b..78bcc5a6 100644
--- a/README.md
+++ b/README.md
@@ -1,2 +1 @@
-hugo
-====
+# Hugo
@@ -4 +3,427 @@ hugo
-A Fast and Flexible Static Site Generator built with love by spf13 in GoLang
+A really fast static site generator written in GoLang.
+
+## Overview
+
+Hugo is a static site generator written in GoLang. It is optimized for 
+speed, easy use and configurability. Hugo takes a directory with content and
+templates and renders them into a full html website.
+
+Hugo makes use of markdown files with front matter for meta data.  
+
+A typical website of moderate size can be 
+rendered in a fraction of a second. It is written to work well with any
+kind of website including blogs, tumbles and docs. 
+
+
+# Getting Started
+
+## Installing Hugo
+
+Installation is very easy. Simply download the appropriate version for your
+platform. Hugo is written in GoLang with support for Windows, Linux and OSX.
+
+Please make sure that you place the executable in your path. `/usr/local/bin` 
+is the most probable location.
+
+Hugo doesn't have any external dependencies, but can benefit from external
+programs.
+
+## Source Directory Organization
+
+Hugo takes a single directory and uses it as the input for creating a complete website.
+
+Hugo has a very small amount of configuration, while remaining highly customizable. 
+It accomplishes by assuming that you will only provide templates with the intent of
+using them.
+
+An example directory may look like:
+
+    .
+    ├── config.json
+    ├── content
+    |   ├── post
+    |   |   ├── firstpost.md
+    |   |   └── secondpost.md
+    |   └── quote
+    |   |   ├── first.md
+    |   |   └── second.md
+    ├── layouts
+    |   ├── chrome
+    |   |   ├── header.html
+    |   |   └── footer.html
+    |   ├── indexes
+    |   |   ├── category.html
+    |   |   ├── post.html
+    |   |   ├── quote.html
+    |   |   └── tag.html
+    |   ├── post
+    |   |   ├── li.html
+    |   |   ├── single.html
+    |   |   └── summary.html
+    |   ├── quote
+    |   |   ├── li.html
+    |   |   ├── single.html
+    |   |   └── summary.html
+    |   ├── shortcodes
+    |   |   ├── img.html
+    |   |   ├── vimeo.html
+    |   |   └── youtube.html
+    |   ├── index.html
+    |   └── rss.xml
+    └── public
+
+This directory structure tells us a lot about this site:
+
+1. the website intends to have two different types of content, posts and quotes.
+2. It will also apply two different indexes to that content, categories and tags.
+3. It will be displaying content in 3 different views, a list, a summary and a full page view.
+
+Included with the repository is an example site ready to be rendered.
+
+## Configuration
+
+The directory structure and templates provide the majority of the
+configuration for a site. In fact a config file isn't even needed for many websites
+since the defaults used follow commonly used patterns.
+
+The following is an example of a config file with the default values
+
+    {
+        "SourceDir" : "content",
+        "LayoutDir" : "layouts",
+        "PublishDir" : "public",
+        "BuildDrafts" : false,
+        "Tags" : { "category" : "categories", "tag" : "tags" },
+        "BaseUrl"    : "http://yourSite.com/"
+    }
+
+## Usage 
+Make sure either hugo is in your path or provide a path to it.
+
+    $ hugo --help
+    usage: hugo [flags] []
+      -b="": hostname (and path) to the root eg. http://spf13.com/
+      -c="config.json": config file (default is path/config.json)
+      -d=false: include content marked as draft
+      -h=false: show this help
+      -k=false: analyze content and provide feedback
+      -p="": filesystem path to read files relative from
+      -w=false: watch filesystem for changes and recreate as needed
+      -s=false: a (very) simple webserver
+      -p="1313": port for webserver to run on
+
+The most common use is probably to run hugo with your current 
+directory being the input directory.
+
+
+    $ hugo
+    > X pages created
+    > Y indicies created
+
+
+If you are working on things and want to see the changes 
+immediately, tell Hugo to watch for changes. **It will 
+recreate the site faster than you can tab over to 
+your browser to view the changes.**
+
+    $ hugo -p ~/mysite -w
+
+
+# Layout
+
+Hugo is very flexible about how you organize and structure your content.
+
+## Templates
+
+Hugo uses the excellent golang html/template library for it's template engine. It is an extremely
+lightweight engine that provides a very small amount of logic. In our 
+experience that it is just the right amount of logic to be able to create a good static website
+
+This document will not cover how to use golang templates, but the [golang docs](http://golang.org/pkg/html/template/)
+provide a good introduction.
+
+### Template roles
+
+There are 5 different kinds of templates that Hugo works with.
+
+#### index.html
+This file must exist in the layouts directory. It is the template used to render the 
+homepage of your site.
+
+#### rss.xml
+This file must exist in the layouts directory. It will be used to render all rss documents.
+The one provided in the example application will generate an ATOM format. 
+
+*Important: Hugo will automatically add the following header line to this file.*
+
+    <?xml version="1.0" encoding="utf-8" standalone="yes" ?>
+
+#### Indexes
+An index is a page that list multiple pieces of content. If you think of a typical blog, the tag 
+pages are good examples of indexes.
+
+
+#### Content Type(s)
+Hugo supports multiple types of content. Another way of looking at this is that Hugo has the ability
+to render content in a variety of ways as determined by the type.
+
+#### Chrome
+Chrome is simply the decoration of your site. It's not a requirement to have this, but in practice
+it's very convenient. Hugo doesn't know anything about Chrome, it's simply a convention that you may
+likely find beneficial. As you create the rest of your templates you will include templates from the 
+/layout/chrome directory. I've found it helpful to include a header and footer template 
+in Chrome so I can include those in the other full page layouts (index.html, indexes/ type/single.html).
+
+### Adding a new content type
+
+Adding a type is easy.
+
+**Step 1:**
+Create a directory with the name of the type in layouts.Type is always singular.  *Eg /layouts/post*.
+
+**Step 2:**
+Create a file called single.html inside your directory. *Eg /layouts/post/single.html*.
+
+**Step 3:**
+Create a file with the same name as your directory in /layouts/indexes/. *Eg /layouts/index/post.html*.
+
+**Step 4:**
+Many sites support rendering content in a few different ways, for instance a single page view and a 
+summary view to be used when displaying a list of contents on a single page. Hugo makes no assumptions
+here about how you want to display your content, and will support as many different views of a content
+type as your site requires. All that is required for these additional views is that a template
+exists in each layout/type directory with the same name.
+
+For these, reviewing the example site will be very helpful in order to understand how these types work.
+
+## Variables
+
+Hugo makes a set of values available to the templates. Go templates are context based. The following
+are available in the context for the templates.
+
+**.Title**  The title for the content. <br>
+**.Description** The description for the content.<br>
+**.Keywords** The meta keywords for this content.<br>
+**.Date** The date the content is published on.<br>
+**.Indexes** These will use the field name of the plural form of the index (see tags and categories above)<br>
+**.Permalink** The Permanent link for this page.<br>
+**.FuzzyWordCount** The approximate number of words in the content.<br>
+**.RSSLink** Link to the indexes' rss link <br>
+
+Any value defined in the front matter, including indexes will be made available under `.Params`. 
+Take for example I'm using tags and categories as my indexes. The following would be how I would access them:
+
+**.Params.Tags** <br> 
+**.Params.Categories** <br> 
+
+Also available is `.Site` which has the following:
+
+**.Site.BaseUrl** The base URL for the site as defined in the config.json file.<br>
+**.Site.Indexes** The names of the indexes of the site.<br>
+**.Site.LastChange** The date of the last change of the most recent content.<br>
+**.Site.Recent** Array of all content ordered by Date, newest first<br>
+
+# Content
+Hugo uses markdown files with headers commonly called the front matter. Hugo respects the organization
+that you provide for your content to minimize any extra configuration, though this can be overridden
+by additional configuration in the front matter.
+
+## Organization
+In Hugo the content should be arranged in the same way they are intended for the rendered website.
+Without any additional configuration the following will just work.
+
+    .
+    └── content
+        ├── post
+        |   ├── firstpost.md   // <- http://site.com/post/firstpost.html
+        |   └── secondpost.md  // <- http://site.com/post/secondpost.html
+        └── quote
+            ├── first.md       // <- http://site.com/quote/first.html
+            └── second.md      // <- http://site.com/quote/second.html
+
+
+## Front Matter
+
+The front matter is one of the features that gives Hugo it's strength. It enables
+you to include the meta data of the content right with it. Hugo supports a few 
+different formats. The main format supported is JSON. Here is an example:
+
+    {
+        "Title": "spf13-vim 3.0 release and new website",
+        "Description": "spf13-vim is a cross platform distribution of vim plugins and resources for Vim.",
+        "Tags": [ ".vimrc", "plugins", "spf13-vim", "vim" ],
+        "Pubdate": "2012-04-06",
+        "Categories": [ "Development", "VIM" ],
+        "Slug": "spf13-vim-3-0-release-and-new-website"
+    }
+
+### Variables
+There are a few predefined variables that Hugo is aware of and utilizes. The user can also create
+any variable they want to. These will be placed into the `.Params` variable available to the templates.
+
+#### Required
+
+**Title**  The title for the content. <br>
+**Description** The description for the content.<br>
+**Pubdate** The date the content will be sorted by.<br>
+**Indexes** These will use the field name of the plural form of the index (see tags and categories above)
+
+#### Optional
+
+**Draft** If true the content will not be rendered unless `hugo` is called with -d<br>
+**Type** The type of the content (will be derived from the directory automatically if unset).<br>
+**Slug** The token to appear in the tail of the url.<br>
+  *or*<br>
+**Url** The full path to the content from the web root.<br>
+*If neither is present the filename will be used.*
+
+## Example
+Somethings are better shown than explained. The following is a very basic example of a content file:
+
+**mysite/project/nitro.md  <- http://mysite.com/project/nitro.html**
+
+    {
+        "Title": "Nitro : A quick and simple profiler for golang",
+        "Description": "",
+        "Keywords": [ "Development", "golang", "profiling" ],
+        "Tags": [ "Development", "golang", "profiling" ],
+        "Pubdate": "2013-06-19",
+        "Topics": [ "Development", "GoLang" ],
+        "Slug": "nitro",
+        "project_url": "http://github.com/spf13/nitro"
+    }
+
+    # Nitro
+
+    Quick and easy performance analyzer library for golang.
+
+    ## Overview
+
+    Nitro is a quick and easy performance analyzer library for golang.
+    It is useful for comparing A/B against different drafts of functions
+    or different functions.
+
+    ## Implementing Nitro
+
+    Using Nitro is simple. First use go get to install the latest version
+    of the library.
+
+        $ go get github.com/spf13/nitro
+
+    Next include nitro in your application.
+
+
+
+# Extras
+
+## Shortcodes
+Because Hugo uses markdown for it's content format, it was clear that there's a lot of things that 
+markdown doesn't support well. This is good, the simple nature of markdown is exactly why we chose it.
+
+However we cannot accept being constrained by our simple format. Also unacceptable is writing raw
+html in our markdown every time we want to include unsupported content such as a video. To do 
+so is in complete opposition to the intent of using a bare bones format for our content and 
+utilizing templates to apply styling for display.
+
+To avoid both of these limitations Hugo has full support for shortcodes.
+
+### What is a shortcode?
+A shortcode is a simple snippet inside a markdown file that Hugo will render using a template.
+
+Short codes are designated by the opening and closing characters of '{{%' and '%}}' respectively.
+Short codes are space delimited. The first word is always the name of the shortcode.  Following the 
+name are the parameters. The author of the shortcode can choose if the short code
+will use positional parameters or named parameters (but not both). A good rule of thumb is that if a
+short code has a single required value in the case of the youtube example below then positional
+works very well. For more complex layouts with optional parameters named parameters work best.
+
+The format for named parameters models that of html with the format name="value"
+
+### Example: youtube
+
+    {{% youtube 09jf3ow9jfw %}}
+
+This would be rendered as 
+
+    <div class="embed video-player">
+    <iframe class="youtube-player" type="text/html"
+        width="640" height="385" 
+        src="http://www.youtube.com/embed/09jf3ow9jfw"
+        allowfullscreen frameborder="0">
+    </iframe>
+    </div>
+
+### Example: image with caption
+
+    {{% img src="/media/spf13.jpg" title="Steve Francia" %}}
+
+Would be rendered as:
+
+    <figure >
+        <img src="/media/spf13.jpg"  />
+        <figcaption>
+            <h4>Steve Francia</h4>
+        </figcaption>
+    </figure>
+
+
+### Creating a shortcode
+
+All that you need to do to create a shortcode is place a template in the layouts/shortcodes directory.
+
+The template name will be the name of the shortcode.
+
+**Inside the template**
+
+To access a parameter by either position or name the index method can be used.
+
+    {{ index .Params 0 }}
+    or
+    {{ index .Params "class" }}
+
+To check if a parameter has been provided use the isset method provided by Hugo.
+
+    {{ if isset .Params "class"}} class="{{ index .Params "class"}}" {{ end }}
+
+
+# Meta
+
+## Release Notes
+
+* **0.7.0** July 4, 2013
+  * Hugo now includes a simple server
+  * First public release
+* **0.6.0** July 2, 2013
+  * Hugo includes an example documentation site which it builds
+* **0.5.0** June 25, 2013
+  * Hugo is quite usable and able to build spf13.com
+
+## Roadmap
+In no particular order, here is what I'm working on:
+
+ * Pagination
+ * Support for top level pages (other than homepage)
+ * Series support
+ * Syntax highlighting
+ * Previous & Next
+ * Related Posts
+ * Support for TOML front matter
+ * Proper YAML support for front matter
+ * Support for other formats
+
+## Contributing
+
+1. Fork it
+2. Create your feature branch (`git checkout -b my-new-feature`)
+3. Commit your changes (`git commit -am 'Add some feature'`)
+4. Push to the branch (`git push origin my-new-feature`)
+5. Create new Pull Request
+
+## Contributors
+
+* [spf13](https://github.com/spf13)
+
+
+## License
+
+Hugo is released under the Simple Public License. See [LICENSE.md](https://github.com/spf13/hugo/blob/master/LICENSE.md).
